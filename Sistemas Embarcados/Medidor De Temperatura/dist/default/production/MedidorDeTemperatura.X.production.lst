

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 12 23:51:09 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           ; Version 1.41
    55                           ; Generated 25/01/2017 GMT
    56                           ; 
    57                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	smallconst
    90  000800                     __psmallconst:
    91                           	opt stack 0
    92  000800  00                 	db	0
    93  000801                     _dpowers:
    94                           	opt stack 0
    95  000801  0001               	dw	1
    96  000803  0000               	dw	0
    97  000805  000A               	dw	10
    98  000807  0000               	dw	0
    99  000809  0064               	dw	100
   100  00080B  0000               	dw	0
   101  00080D  03E8               	dw	1000
   102  00080F  0000               	dw	0
   103  000811  2710               	dw	10000
   104  000813  0000               	dw	0
   105  000815  86A0               	dw	34464
   106  000817  0001               	dw	1
   107  000819  4240               	dw	16960
   108  00081B  000F               	dw	15
   109  00081D  9680               	dw	38528
   110  00081F  0098               	dw	152
   111  000821  E100               	dw	57600
   112  000823  05F5               	dw	1525
   113  000825  CA00               	dw	51712
   114  000827  3B9A               	dw	15258
   115  000829                     __end_of_dpowers:
   116                           	opt stack 0
   117  000829                     __powers_:
   118                           	opt stack 0
   119  000829  00                 	db	0
   120  00082A  80                 	db	128
   121  00082B  3F                 	db	63
   122  00082C  00                 	db	0
   123  00082D  20                 	db	32
   124  00082E  41                 	db	65
   125  00082F  00                 	db	0
   126  000830  C8                 	db	200
   127  000831  42                 	db	66
   128  000832  00                 	db	0
   129  000833  7A                 	db	122
   130  000834  44                 	db	68
   131  000835  40                 	db	64
   132  000836  1C                 	db	28
   133  000837  46                 	db	70
   134  000838  50                 	db	80
   135  000839  C3                 	db	195
   136  00083A  47                 	db	71
   137  00083B  24                 	db	36
   138  00083C  74                 	db	116
   139  00083D  49                 	db	73
   140  00083E  97                 	db	151
   141  00083F  18                 	db	24
   142  000840  4B                 	db	75
   143  000841  BC                 	db	188
   144  000842  BE                 	db	190
   145  000843  4C                 	db	76
   146  000844  6B                 	db	107
   147  000845  6E                 	db	110
   148  000846  4E                 	db	78
   149  000847  03                 	db	3
   150  000848  15                 	db	21
   151  000849  50                 	db	80
   152  00084A  79                 	db	121
   153  00084B  AD                 	db	173
   154  00084C  60                 	db	96
   155  00084D  F3                 	db	243
   156  00084E  49                 	db	73
   157  00084F  71                 	db	113
   158  000850                     __end_of__powers_:
   159                           	opt stack 0
   160  000850                     __npowers_:
   161                           	opt stack 0
   162  000850  00                 	db	0
   163  000851  80                 	db	128
   164  000852  3F                 	db	63
   165  000853  CD                 	db	205
   166  000854  CC                 	db	204
   167  000855  3D                 	db	61
   168  000856  D7                 	db	215
   169  000857  23                 	db	35
   170  000858  3C                 	db	60
   171  000859  12                 	db	18
   172  00085A  83                 	db	131
   173  00085B  3A                 	db	58
   174  00085C  B7                 	db	183
   175  00085D  D1                 	db	209
   176  00085E  38                 	db	56
   177  00085F  C6                 	db	198
   178  000860  27                 	db	39
   179  000861  37                 	db	55
   180  000862  38                 	db	56
   181  000863  86                 	db	134
   182  000864  35                 	db	53
   183  000865  C0                 	db	192
   184  000866  D6                 	db	214
   185  000867  33                 	db	51
   186  000868  CC                 	db	204
   187  000869  2B                 	db	43
   188  00086A  32                 	db	50
   189  00086B  70                 	db	112
   190  00086C  89                 	db	137
   191  00086D  30                 	db	48
   192  00086E  E7                 	db	231
   193  00086F  DB                 	db	219
   194  000870  2E                 	db	46
   195  000871  E5                 	db	229
   196  000872  3C                 	db	60
   197  000873  1E                 	db	30
   198  000874  42                 	db	66
   199  000875  A2                 	db	162
   200  000876  0D                 	db	13
   201  000877                     __end_of__npowers_:
   202                           	opt stack 0
   203  0000                     _TMR0	set	4054
   204  0000                     _TRISBbits	set	3987
   205  0000                     _TRISB	set	3987
   206  0000                     _PORTB	set	3969
   207  0000                     _LATBbits	set	3978
   208  0000                     _PIE1bits	set	3997
   209  0000                     _ADCON0bits	set	4034
   210  0000                     _ADCON2	set	4032
   211  0000                     _ADCON1	set	4033
   212  0000                     _ADCON0	set	4034
   213  0000                     _PIR1bits	set	3998
   214  0000                     _INTCONbits	set	4082
   215  0000                     _T0CONbits	set	4053
   216  0000                     _ADRES	set	4035
   217  000877                     STR_3:
   218  000877  4D                 	db	77	;'M'
   219  000878  65                 	db	101	;'e'
   220  000879  64                 	db	100	;'d'
   221  00087A  69                 	db	105	;'i'
   222  00087B  64                 	db	100	;'d'
   223  00087C  6F                 	db	111	;'o'
   224  00087D  72                 	db	114	;'r'
   225  00087E  20                 	db	32
   226  00087F  64                 	db	100	;'d'
   227  000880  65                 	db	101	;'e'
   228  000881  20                 	db	32
   229  000882  74                 	db	116	;'t'
   230  000883  65                 	db	101	;'e'
   231  000884  6D                 	db	109	;'m'
   232  000885  70                 	db	112	;'p'
   233  000886  65                 	db	101	;'e'
   234  000887  72                 	db	114	;'r'
   235  000888  61                 	db	97	;'a'
   236  000889  74                 	db	116	;'t'
   237  00088A  75                 	db	117	;'u'
   238  00088B  72                 	db	114	;'r'
   239  00088C  61                 	db	97	;'a'
   240  00088D  00                 	db	0
   241  00088E                     STR_1:
   242  00088E  54                 	db	84	;'T'
   243  00088F  65                 	db	101	;'e'
   244  000890  6D                 	db	109	;'m'
   245  000891  70                 	db	112	;'p'
   246  000892  3A                 	db	58	;':'
   247  000893  00                 	db	0
   248  000894                     STR_2:
   249  000894  25                 	db	37
   250  000895  2E                 	db	46
   251  000896  32                 	db	50	;'2'
   252  000897  66                 	db	102	;'f'
   253  000898  43                 	db	67	;'C'
   254  000899  00                 	db	0
   255                           
   256                           ; #config settings
   257  00089A  00                 	db	0	; dummy byte at the end
   258  0000                     
   259                           	psect	cinit
   260  002590                     __pcinit:
   261                           	opt stack 0
   262  002590                     start_initialization:
   263                           	opt stack 0
   264  002590                     __initialization:
   265                           	opt stack 0
   266                           
   267                           ; Clear objects allocated to BANK0 (20 bytes)
   268  002590  EE00  F084         	lfsr	0,__pbssBANK0
   269  002594  0E14               	movlw	20
   270  002596                     clear_0:
   271  002596  6AEE               	clrf	postinc0,c
   272  002598  06E8               	decf	wreg,f,c
   273  00259A  E1FD               	bnz	clear_0
   274  00259C                     end_of_initialization:
   275                           	opt stack 0
   276  00259C                     __end_of__initialization:
   277                           	opt stack 0
   278  00259C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   279  00259E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   280  0025A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   281  0025A2  6EF8               	movwf	tblptru,c
   282  0025A4  0100               	movlb	0
   283  0025A6  EF33  F011         	goto	_main	;jump to C main() function
   284                           tblptru	equ	0xFF8
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	bssBANK0
   289  000084                     __pbssBANK0:
   290                           	opt stack 0
   291  000084                     _temp:
   292                           	opt stack 0
   293  000084                     	ds	3
   294  000087                     _teste:
   295                           	opt stack 0
   296  000087                     	ds	1
   297  000088                     _valor:
   298                           	opt stack 0
   299  000088                     	ds	16
   300                           tblptru	equ	0xFF8
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           
   304                           	psect	cstackBANK0
   305  000060                     __pcstackBANK0:
   306                           	opt stack 0
   307  000060                     ?_sprintf:
   308                           	opt stack 0
   309  000060                     sprintf@sp:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x0
   313  000060                     	ds	2
   314  000062                     sprintf@f:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x2
   318  000062                     	ds	5
   319  000067                     ??_sprintf:
   320                           
   321                           ; 1 bytes @ 0x7
   322  000067                     	ds	6
   323  00006D                     _sprintf$1319:
   324                           	opt stack 0
   325                           
   326                           ; 3 bytes @ 0xD
   327  00006D                     	ds	3
   328  000070                     sprintf@ap:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x10
   332  000070                     	ds	2
   333  000072                     sprintf@flag:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x12
   337  000072                     	ds	2
   338  000074                     sprintf@val:
   339                           	opt stack 0
   340                           
   341                           ; 4 bytes @ 0x14
   342  000074                     	ds	4
   343  000078                     sprintf@exp:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x18
   347  000078                     	ds	2
   348  00007A                     sprintf@tmpval:
   349                           	opt stack 0
   350                           
   351                           ; 4 bytes @ 0x1A
   352  00007A                     	ds	4
   353  00007E                     sprintf@prec:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x1E
   357  00007E                     	ds	2
   358  000080                     sprintf@fval:
   359                           	opt stack 0
   360                           
   361                           ; 3 bytes @ 0x20
   362  000080                     	ds	3
   363  000083                     sprintf@c:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x23
   367  000083                     	ds	1
   368                           tblptru	equ	0xFF8
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372                           	psect	cstackCOMRAM
   373  000001                     __pcstackCOMRAM:
   374                           	opt stack 0
   375  000001                     ??_Interrupcao:
   376  000001                     
   377                           ; 1 bytes @ 0x0
   378  000001                     	ds	14
   379  00000F                     ??_isdigit:
   380  00000F                     ??_Delay10KTCYx:
   381  00000F                     ?___awmod:
   382                           	opt stack 0
   383  00000F                     ?___ftpack:
   384                           	opt stack 0
   385  00000F                     ?___ftneg:
   386                           	opt stack 0
   387  00000F                     ?__tdiv_to_l_:
   388                           	opt stack 0
   389  00000F                     ?__div_to_l_:
   390                           	opt stack 0
   391  00000F                     ?___lldiv:
   392                           	opt stack 0
   393  00000F                     ?___llmod:
   394                           	opt stack 0
   395  00000F                     Delay10TCYx@unit:
   396                           	opt stack 0
   397  00000F                     Delay1KTCYx@unit:
   398                           	opt stack 0
   399  00000F                     ___awmod@dividend:
   400                           	opt stack 0
   401  00000F                     __div_to_l_@f1:
   402                           	opt stack 0
   403  00000F                     ___ftpack@arg:
   404                           	opt stack 0
   405  00000F                     __tdiv_to_l_@f1:
   406                           	opt stack 0
   407  00000F                     ___ftge@ff1:
   408                           	opt stack 0
   409  00000F                     ___ftneg@f1:
   410                           	opt stack 0
   411  00000F                     ___lldiv@dividend:
   412                           	opt stack 0
   413  00000F                     ___llmod@dividend:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0xE
   417  00000F                     	ds	1
   418  000010                     ??_SetDDRamAddr:
   419  000010                     WriteCmdXLCD@cmd:
   420                           	opt stack 0
   421  000010                     WriteDataXLCD@data:
   422                           	opt stack 0
   423  000010                     Delay10KTCYx@unit:
   424                           	opt stack 0
   425  000010                     _isdigit$982:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0xF
   429  000010                     	ds	1
   430  000011                     isdigit@c:
   431                           	opt stack 0
   432  000011                     putrsXLCD@buffer:
   433                           	opt stack 0
   434  000011                     ___awmod@divisor:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x10
   438  000011                     	ds	1
   439  000012                     ___ftpack@exp:
   440                           	opt stack 0
   441  000012                     __div_to_l_@f2:
   442                           	opt stack 0
   443  000012                     __tdiv_to_l_@f2:
   444                           	opt stack 0
   445  000012                     ___ftge@ff2:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0x11
   449  000012                     	ds	1
   450  000013                     SetDDRamAddr@DDaddr:
   451                           	opt stack 0
   452  000013                     ___awmod@counter:
   453                           	opt stack 0
   454  000013                     ___ftpack@sign:
   455                           	opt stack 0
   456  000013                     ___lldiv@divisor:
   457                           	opt stack 0
   458  000013                     ___llmod@divisor:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x12
   462  000013                     	ds	1
   463  000014                     ??___ftpack:
   464  000014                     OpenXLCD@lcdtype:
   465                           	opt stack 0
   466  000014                     ___awmod@sign:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x13
   470  000014                     	ds	1
   471  000015                     ??__tdiv_to_l_:
   472  000015                     ??___ftge:
   473  000015                     ?___awdiv:
   474                           	opt stack 0
   475  000015                     ___awdiv@dividend:
   476                           	opt stack 0
   477  000015                     __div_to_l_@quot:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x14
   481  000015                     	ds	2
   482  000017                     ?___lltoft:
   483                           	opt stack 0
   484  000017                     ?___lwtoft:
   485                           	opt stack 0
   486  000017                     ___llmod@counter:
   487                           	opt stack 0
   488  000017                     ___awdiv@divisor:
   489                           	opt stack 0
   490  000017                     ___lwtoft@c:
   491                           	opt stack 0
   492  000017                     ___lldiv@quotient:
   493                           	opt stack 0
   494  000017                     ___lltoft@c:
   495                           	opt stack 0
   496                           
   497                           ; 4 bytes @ 0x16
   498  000017                     	ds	1
   499  000018                     __tdiv_to_l_@quot:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x17
   503  000018                     	ds	1
   504  000019                     ___awdiv@counter:
   505                           	opt stack 0
   506  000019                     __div_to_l_@cntr:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x18
   510  000019                     	ds	1
   511  00001A                     ___awdiv@sign:
   512                           	opt stack 0
   513  00001A                     __div_to_l_@exp1:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x19
   517  00001A                     	ds	1
   518  00001B                     ??___lltoft:
   519  00001B                     ___lldiv@counter:
   520                           	opt stack 0
   521  00001B                     ___awdiv@quotient:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x1A
   525  00001B                     	ds	1
   526  00001C                     __tdiv_to_l_@cntr:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x1B
   530  00001C                     	ds	1
   531  00001D                     ?___wmul:
   532                           	opt stack 0
   533  00001D                     __tdiv_to_l_@exp1:
   534                           	opt stack 0
   535  00001D                     ___wmul@multiplier:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x1C
   539  00001D                     	ds	2
   540  00001F                     ___lltoft@exp:
   541                           	opt stack 0
   542  00001F                     ___wmul@multiplicand:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x1E
   546  00001F                     	ds	2
   547  000021                     ___wmul@product:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x20
   551  000021                     	ds	2
   552  000023                     ?___ftmul:
   553                           	opt stack 0
   554  000023                     ___ftmul@f1:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x22
   558  000023                     	ds	3
   559  000026                     ___ftmul@f2:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x25
   563  000026                     	ds	3
   564  000029                     ??___ftmul:
   565                           
   566                           ; 1 bytes @ 0x28
   567  000029                     	ds	3
   568  00002C                     ___ftmul@exp:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x2B
   572  00002C                     	ds	1
   573  00002D                     ___ftmul@f3_as_product:
   574                           	opt stack 0
   575                           
   576                           ; 3 bytes @ 0x2C
   577  00002D                     	ds	3
   578  000030                     ___ftmul@cntr:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x2F
   582  000030                     	ds	1
   583  000031                     ___ftmul@sign:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x30
   587  000031                     	ds	1
   588  000032                     ?___ftdiv:
   589                           	opt stack 0
   590  000032                     ?_fround:
   591                           	opt stack 0
   592  000032                     ?_scale:
   593                           	opt stack 0
   594  000032                     ___ftdiv@f1:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0x31
   598  000032                     	ds	3
   599  000035                     ___ftdiv@f2:
   600                           	opt stack 0
   601  000035                     _fround$1317:
   602                           	opt stack 0
   603  000035                     _scale$1318:
   604                           	opt stack 0
   605                           
   606                           ; 3 bytes @ 0x34
   607  000035                     	ds	3
   608  000038                     ??___ftdiv:
   609  000038                     scale@scl:
   610                           	opt stack 0
   611  000038                     _fround$1316:
   612                           	opt stack 0
   613                           
   614                           ; 3 bytes @ 0x37
   615  000038                     	ds	1
   616  000039                     ?___fttol:
   617                           	opt stack 0
   618  000039                     ___fttol@f1:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x38
   622  000039                     	ds	2
   623  00003B                     fround@prec:
   624                           	opt stack 0
   625  00003B                     ___ftdiv@cntr:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x3A
   629  00003B                     	ds	1
   630  00003C                     ?___ftadd:
   631                           	opt stack 0
   632  00003C                     ___ftadd@f1:
   633                           	opt stack 0
   634  00003C                     ___ftdiv@f3:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x3B
   638  00003C                     	ds	1
   639  00003D                     ??___fttol:
   640                           
   641                           ; 1 bytes @ 0x3C
   642  00003D                     	ds	2
   643  00003F                     ___ftdiv@exp:
   644                           	opt stack 0
   645  00003F                     ___ftadd@f2:
   646                           	opt stack 0
   647                           
   648                           ; 3 bytes @ 0x3E
   649  00003F                     	ds	1
   650  000040                     ___ftdiv@sign:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x3F
   654  000040                     	ds	2
   655  000042                     ??___ftadd:
   656  000042                     ___fttol@sign1:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x41
   660  000042                     	ds	1
   661  000043                     ___fttol@lval:
   662                           	opt stack 0
   663                           
   664                           ; 4 bytes @ 0x42
   665  000043                     	ds	2
   666  000045                     ___ftadd@sign:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x44
   670  000045                     	ds	1
   671  000046                     ___ftadd@exp2:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x45
   675  000046                     	ds	1
   676  000047                     ___ftadd@exp1:
   677                           	opt stack 0
   678  000047                     ___fttol@exp1:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x46
   682  000047                     	ds	1
   683  000048                     ?___ftsub:
   684                           	opt stack 0
   685  000048                     ___ftsub@f1:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x47
   689  000048                     	ds	3
   690  00004B                     ___ftsub@f2:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x4A
   694  00004B                     	ds	3
   695  00004E                     tblptru	equ	0xFF8
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           
   699                           ; 1 bytes @ 0x4D
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 76 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   719 ;;      Params:         0       0       0       0       0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0       0       0       0       0
   722 ;;      Totals:         0       0       0       0       0       0       0       0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels required when called:    6
   725 ;; This function calls:
   726 ;;		_ConfigAD
   727 ;;		_SetDDRamAddr
   728 ;;		_WriteLCD
   729 ;;		_WriteTemp
   730 ;;		_config_inicial
   731 ;;		_init_XLCD
   732 ;;		_putrsXLCD
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  002266                     __ptext0:
   740                           	opt stack 0
   741  002266                     _main:
   742                           	opt stack 25
   743                           
   744                           ;main.c: 77: init_XLCD();
   745                           
   746                           ;incstack = 0
   747  002266  ECAA  F012         	call	_init_XLCD	;wreg free
   748                           
   749                           ;main.c: 78: config_inicial();
   750  00226A  EC99  F012         	call	_config_inicial	;wreg free
   751                           
   752                           ;main.c: 79: WriteLCD();
   753  00226E  ECE0  F012         	call	_WriteLCD	;wreg free
   754                           
   755                           ;main.c: 80: T0CONbits.TMR0ON = 0;
   756  002272  9ED5               	bcf	4053,7,c	;volatile
   757                           
   758                           ;main.c: 81: INTCONbits.TMR0IE = 1;
   759  002274  8AF2               	bsf	intcon,5,c	;volatile
   760                           
   761                           ;main.c: 82: INTCONbits.TMR0IF = 0;
   762  002276  94F2               	bcf	intcon,2,c	;volatile
   763                           
   764                           ;main.c: 83: T0CONbits.T08BIT = 0;
   765  002278  9CD5               	bcf	4053,6,c	;volatile
   766                           
   767                           ;main.c: 84: T0CONbits.PSA = 0;
   768  00227A  96D5               	bcf	4053,3,c	;volatile
   769                           
   770                           ;main.c: 85: T0CONbits.T0PS0 = 1;
   771  00227C  80D5               	bsf	4053,0,c	;volatile
   772                           
   773                           ;main.c: 86: T0CONbits.T0PS1 = 0;
   774  00227E  92D5               	bcf	4053,1,c	;volatile
   775                           
   776                           ;main.c: 87: T0CONbits.T0PS2 = 1;
   777  002280  84D5               	bsf	4053,2,c	;volatile
   778                           
   779                           ;main.c: 88: T0CONbits.T0CS = 0;
   780  002282  9AD5               	bcf	4053,5,c	;volatile
   781                           
   782                           ;main.c: 89: TMR0 = 0;
   783  002284  0E00               	movlw	0
   784  002286  6ED7               	movwf	4055,c	;volatile
   785  002288  0E00               	movlw	0
   786  00228A  6ED6               	movwf	4054,c	;volatile
   787                           
   788                           ;main.c: 90: T0CONbits.TMR0ON = 1;
   789  00228C  8ED5               	bsf	4053,7,c	;volatile
   790                           
   791                           ;main.c: 91: INTCONbits.GIEH = 1;
   792  00228E  8EF2               	bsf	intcon,7,c	;volatile
   793                           
   794                           ;main.c: 92: INTCONbits.GIEL = 1;
   795  002290  8CF2               	bsf	intcon,6,c	;volatile
   796                           
   797                           ;main.c: 93: PIE1bits.ADIE = 1;
   798  002292  8C9D               	bsf	3997,6,c	;volatile
   799                           
   800                           ;main.c: 94: SetDDRamAddr(0x00);
   801  002294  0E00               	movlw	0
   802  002296  ECBE  F011         	call	_SetDDRamAddr
   803  00229A                     l3125:
   804                           
   805                           ;main.c: 97: ConfigAD();
   806  00229A  ECEA  F012         	call	_ConfigAD	;wreg free
   807                           
   808                           ;main.c: 98: if(teste == 1){
   809  00229E  0100               	movlb	0	; () banked
   810  0022A0  0587               	decf	_teste& (0+255),w,b
   811  0022A2  A4D8               	btfss	status,2,c
   812  0022A4  D7FA               	goto	l3125
   813                           
   814                           ; BSR set to: 0
   815                           ;main.c: 99: WriteTemp();
   816  0022A6  ECBE  F00F         	call	_WriteTemp	;wreg free
   817                           
   818                           ;main.c: 100: teste = 0;
   819  0022AA  0E00               	movlw	0
   820  0022AC  0100               	movlb	0	; () banked
   821  0022AE  6F87               	movwf	_teste& (0+255),b
   822                           
   823                           ; BSR set to: 0
   824                           ;main.c: 101: SetDDRamAddr(0x10);
   825  0022B0  0E10               	movlw	16
   826  0022B2  ECBE  F011         	call	_SetDDRamAddr
   827                           
   828                           ;main.c: 102: putrsXLCD("Medidor de temperatura");
   829  0022B6  0E77               	movlw	low STR_3
   830  0022B8  6E11               	movwf	putrsXLCD@buffer,c
   831  0022BA  0E08               	movlw	high STR_3
   832  0022BC  6E12               	movwf	putrsXLCD@buffer+1,c
   833  0022BE  EC90  F011         	call	_putrsXLCD	;wreg free
   834  0022C2  D7EB               	goto	l3125
   835  0022C4                     __end_of_main:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           intcon	equ	0xFF2
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _init_XLCD *****************
   844 ;; Defined at:
   845 ;;		line 21 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    5
   866 ;; This function calls:
   867 ;;		_BusyXLCD
   868 ;;		_OpenXLCD
   869 ;;		_WriteCmdXLCD
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text1
   876  002554                     __ptext1:
   877                           	opt stack 0
   878  002554                     _init_XLCD:
   879                           	opt stack 25
   880                           
   881                           ;main.c: 22: OpenXLCD(0b00101100&0b00111000);
   882                           
   883                           ;incstack = 0
   884  002554  0E28               	movlw	40
   885  002556  EC24  F00F         	call	_OpenXLCD
   886  00255A                     l3049:
   887  00255A  EC45  F012         	call	_BusyXLCD	;wreg free
   888  00255E  0900               	iorlw	0
   889  002560  A4D8               	btfss	status,2,c
   890  002562  D7FB               	goto	l3049
   891                           
   892                           ;main.c: 24: WriteCmdXLCD(0X06);
   893  002564  0E06               	movlw	6
   894  002566  EC07  F012         	call	_WriteCmdXLCD
   895                           
   896                           ;main.c: 25: WriteCmdXLCD(0x0C);
   897  00256A  0E0C               	movlw	12
   898  00256C  EC07  F012         	call	_WriteCmdXLCD
   899  002570  0012               	return		;funcret
   900  002572                     __end_of_init_XLCD:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           intcon	equ	0xFF2
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           status	equ	0xFD8
   907                           
   908 ;; *************** function _OpenXLCD *****************
   909 ;; Defined at:
   910 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  lcdtype         1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  lcdtype         1   19[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         1       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         1       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        1 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    4
   931 ;; This function calls:
   932 ;;		_BusyXLCD
   933 ;;		_Delay10KTCYx
   934 ;;		_DelayPORXLCD
   935 ;;		_SetDDRamAddr
   936 ;;		_WriteCmdXLCD
   937 ;; This function is called by:
   938 ;;		_init_XLCD
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text2
   943  001E48                     __ptext2:
   944                           	opt stack 0
   945  001E48                     _OpenXLCD:
   946                           	opt stack 25
   947                           
   948                           ;incstack = 0
   949                           ;OpenXLCD@lcdtype stored from wreg
   950  001E48  6E14               	movwf	OpenXLCD@lcdtype,c
   951  001E4A  0EF0               	movlw	240
   952  001E4C  1681               	andwf	3969,f,c	;volatile
   953  001E4E  0EF0               	movlw	240
   954  001E50  1693               	andwf	3987,f,c	;volatile
   955  001E52  9C93               	bcf	3987,6,c	;volatile
   956  001E54  9A93               	bcf	3987,5,c	;volatile
   957  001E56  9893               	bcf	3987,4,c	;volatile
   958  001E58  9C8A               	bcf	3978,6,c	;volatile
   959  001E5A  9A8A               	bcf	3978,5,c	;volatile
   960  001E5C  988A               	bcf	3978,4,c	;volatile
   961  001E5E  EC04  F013         	call	_DelayPORXLCD	;wreg free
   962  001E62  0E30               	movlw	48
   963  001E64  EC07  F012         	call	_WriteCmdXLCD
   964  001E68  0E05               	movlw	5
   965  001E6A  ECD5  F012         	call	_Delay10KTCYx
   966  001E6E  0E30               	movlw	48
   967  001E70  EC07  F012         	call	_WriteCmdXLCD
   968  001E74  0E01               	movlw	1
   969  001E76  ECD5  F012         	call	_Delay10KTCYx
   970  001E7A  0E32               	movlw	50
   971  001E7C  EC07  F012         	call	_WriteCmdXLCD
   972  001E80                     l2753:
   973  001E80  EC45  F012         	call	_BusyXLCD	;wreg free
   974  001E84  0900               	iorlw	0
   975  001E86  A4D8               	btfss	status,2,c
   976  001E88  D7FB               	goto	l2753
   977  001E8A                     l2755:
   978  001E8A  EC45  F012         	call	_BusyXLCD	;wreg free
   979  001E8E  0900               	iorlw	0
   980  001E90  A4D8               	btfss	status,2,c
   981  001E92  D7FB               	goto	l2755
   982  001E94  5014               	movf	OpenXLCD@lcdtype,w,c
   983  001E96  EC07  F012         	call	_WriteCmdXLCD
   984  001E9A                     l2759:
   985  001E9A  EC45  F012         	call	_BusyXLCD	;wreg free
   986  001E9E  0900               	iorlw	0
   987  001EA0  A4D8               	btfss	status,2,c
   988  001EA2  D7FB               	goto	l2759
   989  001EA4  0E08               	movlw	8
   990  001EA6  EC07  F012         	call	_WriteCmdXLCD
   991  001EAA                     l2763:
   992  001EAA  EC45  F012         	call	_BusyXLCD	;wreg free
   993  001EAE  0900               	iorlw	0
   994  001EB0  A4D8               	btfss	status,2,c
   995  001EB2  D7FB               	goto	l2763
   996  001EB4  0E0F               	movlw	15
   997  001EB6  EC07  F012         	call	_WriteCmdXLCD
   998  001EBA                     l2767:
   999  001EBA  EC45  F012         	call	_BusyXLCD	;wreg free
  1000  001EBE  0900               	iorlw	0
  1001  001EC0  A4D8               	btfss	status,2,c
  1002  001EC2  D7FB               	goto	l2767
  1003  001EC4  0E01               	movlw	1
  1004  001EC6  EC07  F012         	call	_WriteCmdXLCD
  1005  001ECA                     l2771:
  1006  001ECA  EC45  F012         	call	_BusyXLCD	;wreg free
  1007  001ECE  0900               	iorlw	0
  1008  001ED0  A4D8               	btfss	status,2,c
  1009  001ED2  D7FB               	goto	l2771
  1010  001ED4  0E04               	movlw	4
  1011  001ED6  EC07  F012         	call	_WriteCmdXLCD
  1012  001EDA                     l2775:
  1013  001EDA  EC45  F012         	call	_BusyXLCD	;wreg free
  1014  001EDE  0900               	iorlw	0
  1015  001EE0  A4D8               	btfss	status,2,c
  1016  001EE2  D7FB               	goto	l2775
  1017  001EE4  0E80               	movlw	128
  1018  001EE6  ECBE  F011         	call	_SetDDRamAddr
  1019  001EEA  0012               	return	
  1020  001EEC                     __end_of_OpenXLCD:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           intcon	equ	0xFF2
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           status	equ	0xFD8
  1027                           
  1028 ;; *************** function _WriteCmdXLCD *****************
  1029 ;; Defined at:
  1030 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  cmd             1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  cmd             1   15[COMRAM] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1047 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        1 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    3
  1051 ;; This function calls:
  1052 ;;		_DelayFor18TCY
  1053 ;; This function is called by:
  1054 ;;		_init_XLCD
  1055 ;;		_OpenXLCD
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text3
  1060  00240E                     __ptext3:
  1061                           	opt stack 0
  1062  00240E                     _WriteCmdXLCD:
  1063                           	opt stack 26
  1064                           
  1065                           ;incstack = 0
  1066                           ;WriteCmdXLCD@cmd stored from wreg
  1067  00240E  6E10               	movwf	WriteCmdXLCD@cmd,c
  1068  002410  0EF0               	movlw	240
  1069  002412  1693               	andwf	3987,f,c	;volatile
  1070  002414  0EF0               	movlw	240
  1071  002416  1681               	andwf	3969,f,c	;volatile
  1072  002418  3810               	swapf	WriteCmdXLCD@cmd,w,c
  1073  00241A  0B0F               	andlw	15
  1074  00241C  0B0F               	andlw	15
  1075  00241E  1281               	iorwf	3969,f,c	;volatile
  1076  002420  9C8A               	bcf	3978,6,c	;volatile
  1077  002422  9A8A               	bcf	3978,5,c	;volatile
  1078  002424  EC08  F013         	call	_DelayFor18TCY	;wreg free
  1079  002428  888A               	bsf	3978,4,c	;volatile
  1080  00242A  EC08  F013         	call	_DelayFor18TCY	;wreg free
  1081  00242E  988A               	bcf	3978,4,c	;volatile
  1082  002430  0EF0               	movlw	240
  1083  002432  1681               	andwf	3969,f,c	;volatile
  1084  002434  5010               	movf	WriteCmdXLCD@cmd,w,c
  1085  002436  0B0F               	andlw	15
  1086  002438  1281               	iorwf	3969,f,c	;volatile
  1087  00243A  EC08  F013         	call	_DelayFor18TCY	;wreg free
  1088  00243E  888A               	bsf	3978,4,c	;volatile
  1089  002440  EC08  F013         	call	_DelayFor18TCY	;wreg free
  1090  002444  988A               	bcf	3978,4,c	;volatile
  1091  002446  0E0F               	movlw	15
  1092  002448  1293               	iorwf	3987,f,c	;volatile
  1093  00244A  0012               	return	
  1094  00244C                     __end_of_WriteCmdXLCD:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           intcon	equ	0xFF2
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _DelayPORXLCD *****************
  1103 ;; Defined at:
  1104 ;;		line 17 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    2
  1125 ;; This function calls:
  1126 ;;		_Delay1KTCYx
  1127 ;; This function is called by:
  1128 ;;		_OpenXLCD
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text4
  1133  002608                     __ptext4:
  1134                           	opt stack 0
  1135  002608                     _DelayPORXLCD:
  1136                           	opt stack 26
  1137                           
  1138                           ;main.c: 18: Delay1KTCYx(180);
  1139                           
  1140                           ;incstack = 0
  1141  002608  0EB4               	movlw	180
  1142  00260A  ECF4  F012         	call	_Delay1KTCYx
  1143  00260E  0012               	return		;funcret
  1144  002610                     __end_of_DelayPORXLCD:
  1145                           	opt stack 0
  1146                           tblptru	equ	0xFF8
  1147                           intcon	equ	0xFF2
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           status	equ	0xFD8
  1151                           
  1152 ;; *************** function _Delay1KTCYx *****************
  1153 ;; Defined at:
  1154 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  unit            1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  unit            1   14[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0
  1169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1171 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_DelayPORXLCD
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text5
  1183  0025E8                     __ptext5:
  1184                           	opt stack 0
  1185  0025E8                     _Delay1KTCYx:
  1186                           	opt stack 26
  1187                           
  1188                           ;incstack = 0
  1189                           ;Delay1KTCYx@unit stored from wreg
  1190  0025E8  6E0F               	movwf	Delay1KTCYx@unit,c
  1191  0025EA  0EC8               	movlw	200
  1192  0025EC                     u2937:
  1193  0025EC  D000               	nop2	
  1194  0025EE  2EE8               	decfsz	wreg,f,c
  1195  0025F0  D7FD               	bra	u2937
  1196  0025F2  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  1197  0025F4  D7FA               	goto	l2093
  1198  0025F6  0012               	return	
  1199  0025F8                     __end_of_Delay1KTCYx:
  1200                           	opt stack 0
  1201                           tblptru	equ	0xFF8
  1202                           intcon	equ	0xFF2
  1203                           postinc0	equ	0xFEE
  1204                           wreg	equ	0xFE8
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function _Delay10KTCYx *****************
  1208 ;; Defined at:
  1209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  unit            1    wreg     unsigned char 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  unit            1   15[COMRAM] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1225 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_OpenXLCD
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text6
  1238  0025AA                     __ptext6:
  1239                           	opt stack 0
  1240  0025AA                     _Delay10KTCYx:
  1241                           	opt stack 27
  1242                           
  1243                           ;incstack = 0
  1244                           ;Delay10KTCYx@unit stored from wreg
  1245  0025AA  6E10               	movwf	Delay10KTCYx@unit,c
  1246  0025AC  0E0D               	movlw	13
  1247  0025AE  6E0F               	movwf	??_Delay10KTCYx& (0+255),c
  1248  0025B0  0EFC               	movlw	252
  1249  0025B2                     u2947:
  1250  0025B2  2EE8               	decfsz	wreg,f,c
  1251  0025B4  D7FE               	bra	u2947
  1252  0025B6  2E0F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1253  0025B8  D7FC               	bra	u2947
  1254  0025BA  2E10               	decfsz	Delay10KTCYx@unit,f,c
  1255  0025BC  D7F7               	goto	l2575
  1256  0025BE  0012               	return	
  1257  0025C0                     __end_of_Delay10KTCYx:
  1258                           	opt stack 0
  1259                           tblptru	equ	0xFF8
  1260                           intcon	equ	0xFF2
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _config_inicial *****************
  1266 ;; Defined at:
  1267 ;;		line 28 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text7
  1296  002532                     __ptext7:
  1297                           	opt stack 0
  1298  002532                     _config_inicial:
  1299                           	opt stack 29
  1300                           
  1301                           ;main.c: 29: T0CONbits.TMR0ON =0;
  1302                           
  1303                           ;incstack = 0
  1304  002532  9ED5               	bcf	4053,7,c	;volatile
  1305                           
  1306                           ;main.c: 30: INTCONbits.TMR0IE = 1;
  1307  002534  8AF2               	bsf	intcon,5,c	;volatile
  1308                           
  1309                           ;main.c: 31: INTCONbits.TMR0IF = 0;
  1310  002536  94F2               	bcf	intcon,2,c	;volatile
  1311                           
  1312                           ;main.c: 32: T0CONbits.T08BIT= 0;
  1313  002538  9CD5               	bcf	4053,6,c	;volatile
  1314                           
  1315                           ;main.c: 33: T0CONbits.PSA = 0;
  1316  00253A  96D5               	bcf	4053,3,c	;volatile
  1317                           
  1318                           ;main.c: 34: T0CONbits.T0PS0 = 0;
  1319  00253C  90D5               	bcf	4053,0,c	;volatile
  1320                           
  1321                           ;main.c: 35: T0CONbits.T0PS1 = 1;
  1322  00253E  82D5               	bsf	4053,1,c	;volatile
  1323                           
  1324                           ;main.c: 36: T0CONbits.T0PS2 =1;
  1325  002540  84D5               	bsf	4053,2,c	;volatile
  1326                           
  1327                           ;main.c: 37: T0CONbits.T0CS =0;
  1328  002542  9AD5               	bcf	4053,5,c	;volatile
  1329                           
  1330                           ;main.c: 38: TMR0 = 0;
  1331  002544  0E00               	movlw	0
  1332  002546  6ED7               	movwf	4055,c	;volatile
  1333  002548  0E00               	movlw	0
  1334  00254A  6ED6               	movwf	4054,c	;volatile
  1335                           
  1336                           ;main.c: 39: T0CONbits.TMR0ON =1;
  1337  00254C  8ED5               	bsf	4053,7,c	;volatile
  1338                           
  1339                           ;main.c: 40: INTCONbits.GIEH =1;
  1340  00254E  8EF2               	bsf	intcon,7,c	;volatile
  1341                           
  1342                           ;main.c: 41: INTCONbits.GIEL =1;
  1343  002550  8CF2               	bsf	intcon,6,c	;volatile
  1344  002552  0012               	return		;funcret
  1345  002554                     __end_of_config_inicial:
  1346                           	opt stack 0
  1347                           tblptru	equ	0xFF8
  1348                           intcon	equ	0xFF2
  1349                           postinc0	equ	0xFEE
  1350                           wreg	equ	0xFE8
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _WriteTemp *****************
  1354 ;; Defined at:
  1355 ;;		line 57 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1369 ;;      Params:         0       0       0       0       0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    5
  1376 ;; This function calls:
  1377 ;;		_SetDDRamAddr
  1378 ;;		___ftdiv
  1379 ;;		___ftmul
  1380 ;;		___lwtoft
  1381 ;;		_putrsXLCD
  1382 ;;		_sprintf
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text8
  1389  001F7C                     __ptext8:
  1390                           	opt stack 0
  1391  001F7C                     _WriteTemp:
  1392                           	opt stack 25
  1393                           
  1394                           ;main.c: 58: temp = ((float)ADRES * 5 * 100) / 1024;
  1395                           
  1396                           ;incstack = 0
  1397  001F7C  0E00               	movlw	0
  1398  001F7E  6E26               	movwf	___ftmul@f2,c
  1399  001F80  0EFA               	movlw	250
  1400  001F82  6E27               	movwf	___ftmul@f2+1,c
  1401  001F84  0E43               	movlw	67
  1402  001F86  6E28               	movwf	___ftmul@f2+2,c
  1403  001F88  CFC3 F017          	movff	4035,___lwtoft@c	;volatile
  1404  001F8C  CFC4 F018          	movff	4036,___lwtoft@c+1	;volatile
  1405  001F90  EC87  F012         	call	___lwtoft	;wreg free
  1406  001F94  C017  F023         	movff	?___lwtoft,___ftmul@f1
  1407  001F98  C018  F024         	movff	?___lwtoft+1,___ftmul@f1+1
  1408  001F9C  C019  F025         	movff	?___lwtoft+2,___ftmul@f1+2
  1409  001FA0  EC66  F00D         	call	___ftmul	;wreg free
  1410  001FA4  C023  F032         	movff	?___ftmul,___ftdiv@f1
  1411  001FA8  C024  F033         	movff	?___ftmul+1,___ftdiv@f1+1
  1412  001FAC  C025  F034         	movff	?___ftmul+2,___ftdiv@f1+2
  1413  001FB0  0E00               	movlw	0
  1414  001FB2  6E35               	movwf	___ftdiv@f2,c
  1415  001FB4  0E80               	movlw	128
  1416  001FB6  6E36               	movwf	___ftdiv@f2+1,c
  1417  001FB8  0E44               	movlw	68
  1418  001FBA  6E37               	movwf	___ftdiv@f2+2,c
  1419  001FBC  EC5A  F00E         	call	___ftdiv	;wreg free
  1420  001FC0  C032  F084         	movff	?___ftdiv,_temp
  1421  001FC4  C033  F085         	movff	?___ftdiv+1,_temp+1
  1422  001FC8  C034  F086         	movff	?___ftdiv+2,_temp+2
  1423                           
  1424                           ;main.c: 59: sprintf(valor, "%.2fC", temp);
  1425  001FCC  0E88               	movlw	low _valor
  1426  001FCE  0100               	movlb	0	; () banked
  1427  001FD0  6F60               	movwf	sprintf@sp& (0+255),b
  1428  001FD2  0E00               	movlw	high _valor
  1429  001FD4  0100               	movlb	0	; () banked
  1430  001FD6  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1431  001FD8  0E94               	movlw	low STR_2
  1432  001FDA  0100               	movlb	0	; () banked
  1433  001FDC  6F62               	movwf	sprintf@f& (0+255),b
  1434  001FDE  0E08               	movlw	high STR_2
  1435  001FE0  0100               	movlb	0	; () banked
  1436  001FE2  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1437  001FE4  C084  F064         	movff	_temp,?_sprintf+4
  1438  001FE8  C085  F065         	movff	_temp+1,?_sprintf+5
  1439  001FEC  C086  F066         	movff	_temp+2,?_sprintf+6
  1440  001FF0  EC4E  F004         	call	_sprintf	;wreg free
  1441                           
  1442                           ;main.c: 60: SetDDRamAddr(0x40);
  1443  001FF4  0E40               	movlw	64
  1444  001FF6  ECBE  F011         	call	_SetDDRamAddr
  1445                           
  1446                           ;main.c: 61: putrsXLCD(valor);
  1447  001FFA  0E88               	movlw	low _valor
  1448  001FFC  6E11               	movwf	putrsXLCD@buffer,c
  1449  001FFE  0E00               	movlw	high _valor
  1450  002000  6E12               	movwf	putrsXLCD@buffer+1,c
  1451  002002  EC90  F011         	call	_putrsXLCD	;wreg free
  1452  002006  0012               	return		;funcret
  1453  002008                     __end_of_WriteTemp:
  1454                           	opt stack 0
  1455                           tblptru	equ	0xFF8
  1456                           intcon	equ	0xFF2
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           status	equ	0xFD8
  1460                           
  1461 ;; *************** function _sprintf *****************
  1462 ;; Defined at:
  1463 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  1466 ;;		 -> valor(16), 
  1467 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1468 ;;		 -> STR_2(6), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  tmpval          4   26[BANK0 ] struct .
  1471 ;;  val             4   20[BANK0 ] unsigned long 
  1472 ;;  fval            3   32[BANK0 ] unsigned long 
  1473 ;;  cp              3    0        PTR const unsigned char 
  1474 ;;  prec            2   30[BANK0 ] int 
  1475 ;;  exp             2   24[BANK0 ] int 
  1476 ;;  flag            2   18[BANK0 ] unsigned short 
  1477 ;;  ap              2   16[BANK0 ] PTR void [1]
  1478 ;;		 -> ?_sprintf(2), 
  1479 ;;  len             2    0        unsigned int 
  1480 ;;  width           2    0        int 
  1481 ;;  c               1   35[BANK0 ] char 
  1482 ;;  d               1    0        unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2    0[BANK0 ] int 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1492 ;;      Params:         0       7       0       0       0       0       0       0       0
  1493 ;;      Locals:         0      23       0       0       0       0       0       0       0
  1494 ;;      Temps:          0       6       0       0       0       0       0       0       0
  1495 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1496 ;;Total ram usage:       36 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    4
  1499 ;; This function calls:
  1500 ;;		___awdiv
  1501 ;;		___ftadd
  1502 ;;		___ftge
  1503 ;;		___ftmul
  1504 ;;		___ftneg
  1505 ;;		___ftsub
  1506 ;;		___fttol
  1507 ;;		___lldiv
  1508 ;;		___llmod
  1509 ;;		___lltoft
  1510 ;;		___wmul
  1511 ;;		__div_to_l_
  1512 ;;		__tdiv_to_l_
  1513 ;;		_fround
  1514 ;;		_isdigit
  1515 ;;		_scale
  1516 ;; This function is called by:
  1517 ;;		_WriteTemp
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text9
  1522  00089C                     __ptext9:
  1523                           	opt stack 0
  1524  00089C                     _sprintf:
  1525                           	opt stack 25
  1526                           
  1527                           ;doprnt.c: 494: va_list ap;
  1528                           ;doprnt.c: 499: signed char c;
  1529                           ;doprnt.c: 501: int width;
  1530                           ;doprnt.c: 504: int prec;
  1531                           ;doprnt.c: 508: unsigned short flag;
  1532                           ;doprnt.c: 515: char d;
  1533                           ;doprnt.c: 516: double fval;
  1534                           ;doprnt.c: 517: int exp;
  1535                           ;doprnt.c: 523: union {
  1536                           ;doprnt.c: 524: unsigned long vd;
  1537                           ;doprnt.c: 525: double integ;
  1538                           ;doprnt.c: 526: } tmpval;
  1539                           ;doprnt.c: 528: unsigned long val;
  1540                           ;doprnt.c: 529: unsigned len;
  1541                           ;doprnt.c: 530: const char * cp;
  1542                           ;doprnt.c: 533: *ap = __va_start();
  1543                           
  1544                           ;incstack = 0
  1545  00089C  0E64               	movlw	low (?_sprintf+4)
  1546  00089E  0100               	movlb	0	; () banked
  1547  0008A0  6F70               	movwf	sprintf@ap& (0+255),b
  1548  0008A2  0E00               	movlw	high (?_sprintf+4)
  1549  0008A4  0100               	movlb	0	; () banked
  1550  0008A6  6F71               	movwf	(sprintf@ap+1)& (0+255),b
  1551                           
  1552                           ;doprnt.c: 536: while(c = *f++) {
  1553  0008A8  D3DE               	goto	l2991
  1554  0008AA                     l2793:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;doprnt.c: 538: if(c != '%')
  1558  0008AA  0E25               	movlw	37
  1559  0008AC  0100               	movlb	0	; () banked
  1560  0008AE  1983               	xorwf	sprintf@c& (0+255),w,b
  1561  0008B0  B4D8               	btfsc	status,2,c
  1562  0008B2  D007               	goto	l2799
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;doprnt.c: 540: {
  1566                           ;doprnt.c: 541: ((*sp++ = (c)));
  1567  0008B4  C060  FFD9         	movff	sprintf@sp,fsr2l
  1568  0008B8  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  1569  0008BC  C083  FFDF         	movff	sprintf@c,indf2
  1570  0008C0  D3CF               	goto	l2989
  1571  0008C2                     l2799:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;doprnt.c: 543: }
  1575                           ;doprnt.c: 548: flag = 0;
  1576  0008C2  0E00               	movlw	0
  1577  0008C4  0100               	movlb	0	; () banked
  1578  0008C6  6F73               	movwf	(sprintf@flag+1)& (0+255),b
  1579  0008C8  0E00               	movlw	0
  1580  0008CA  6F72               	movwf	sprintf@flag& (0+255),b
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;doprnt.c: 611: if(*f == '.') {
  1584  0008CC  C062  FFF6         	movff	sprintf@f,tblptrl
  1585  0008D0  C063  FFF7         	movff	sprintf@f+1,tblptrh
  1586  0008D4                     	if	0	;tblptru may be non-zero
  1587  0008D4                     	endif
  1588  0008D4                     	if	0	;tblptru may be non-zero
  1589  0008D4                     	endif
  1590  0008D4  0008               	tblrd		*
  1591  0008D6  50F5               	movf	tablat,w,c
  1592  0008D8  0A2E               	xorlw	46
  1593  0008DA  A4D8               	btfss	status,2,c
  1594  0008DC  D034               	goto	l2813
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;doprnt.c: 612: flag |= 0x4000;
  1598  0008DE  0100               	movlb	0	; () banked
  1599  0008E0  8D73               	bsf	(sprintf@flag+1)& (0+255),6,b
  1600                           
  1601                           ;doprnt.c: 613: f++;
  1602  0008E2  0100               	movlb	0	; () banked
  1603  0008E4  4B62               	infsnz	sprintf@f& (0+255),f,b
  1604  0008E6  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;doprnt.c: 620: {
  1608                           ;doprnt.c: 621: prec = 0;
  1609  0008E8  0E00               	movlw	0
  1610  0008EA  0100               	movlb	0	; () banked
  1611  0008EC  6F7F               	movwf	(sprintf@prec+1)& (0+255),b
  1612  0008EE  0E00               	movlw	0
  1613  0008F0  6F7E               	movwf	sprintf@prec& (0+255),b
  1614                           
  1615                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1616  0008F2  D01E               	goto	l2811
  1617  0008F4                     l2807:
  1618                           
  1619                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1620  0008F4  C07E  F01D         	movff	sprintf@prec,___wmul@multiplier
  1621  0008F8  C07F  F01E         	movff	sprintf@prec+1,___wmul@multiplier+1
  1622  0008FC  0E00               	movlw	0
  1623  0008FE  6E20               	movwf	___wmul@multiplicand+1,c
  1624  000900  0E0A               	movlw	10
  1625  000902  6E1F               	movwf	___wmul@multiplicand,c
  1626  000904  EC62  F012         	call	___wmul	;wreg free
  1627  000908  C062  FFF6         	movff	sprintf@f,tblptrl
  1628  00090C  C063  FFF7         	movff	sprintf@f+1,tblptrh
  1629  000910                     	if	0	;tblptru may be non-zero
  1630  000910                     	endif
  1631  000910                     	if	0	;tblptru may be non-zero
  1632  000910                     	endif
  1633  000910  0008               	tblrd		*
  1634  000912  50F5               	movf	tablat,w,c
  1635  000914  261D               	addwf	?___wmul,f,c
  1636  000916  0E00               	movlw	0
  1637  000918  221E               	addwfc	?___wmul+1,f,c
  1638  00091A  0ED0               	movlw	208
  1639  00091C  241D               	addwf	?___wmul,w,c
  1640  00091E  0100               	movlb	0	; () banked
  1641  000920  6F7E               	movwf	sprintf@prec& (0+255),b
  1642  000922  0EFF               	movlw	255
  1643  000924  201E               	addwfc	?___wmul+1,w,c
  1644  000926  0100               	movlb	0	; () banked
  1645  000928  6F7F               	movwf	(sprintf@prec+1)& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648  00092A  0100               	movlb	0	; () banked
  1649  00092C  4B62               	infsnz	sprintf@f& (0+255),f,b
  1650  00092E  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  1651  000930                     l2811:
  1652                           
  1653                           ; BSR set to: 0
  1654  000930  C062  FFF6         	movff	sprintf@f,tblptrl
  1655  000934  C063  FFF7         	movff	sprintf@f+1,tblptrh
  1656  000938                     	if	0	;tblptru may be non-zero
  1657  000938                     	endif
  1658  000938                     	if	0	;tblptru may be non-zero
  1659  000938                     	endif
  1660  000938  0008               	tblrd		*
  1661  00093A  50F5               	movf	tablat,w,c
  1662  00093C  ECB9  F012         	call	_isdigit
  1663  000940  A0D8               	btfss	status,0,c
  1664  000942  D00C               	goto	l2821
  1665  000944  D7D7               	goto	l2807
  1666  000946                     l2813:
  1667                           
  1668                           ;doprnt.c: 626: prec = 0;
  1669  000946  0E00               	movlw	0
  1670  000948  0100               	movlb	0	; () banked
  1671  00094A  6F7F               	movwf	(sprintf@prec+1)& (0+255),b
  1672  00094C  0E00               	movlw	0
  1673  00094E  6F7E               	movwf	sprintf@prec& (0+255),b
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;doprnt.c: 628: flag |= 0x1000;
  1677  000950  0100               	movlb	0	; () banked
  1678  000952  8973               	bsf	(sprintf@flag+1)& (0+255),4,b
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;doprnt.c: 630: }
  1682                           ;doprnt.c: 635: switch(c = *f++) {
  1683  000954  D003               	goto	l2821
  1684  000956                     l2817:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;doprnt.c: 663: flag |= 0x400;
  1688  000956  0100               	movlb	0	; () banked
  1689  000958  8573               	bsf	(sprintf@flag+1)& (0+255),2,b
  1690                           
  1691                           ;doprnt.c: 664: break;
  1692  00095A  D013               	goto	l2823
  1693  00095C                     l2821:
  1694  00095C  C062  FFF6         	movff	sprintf@f,tblptrl
  1695  000960  C063  FFF7         	movff	sprintf@f+1,tblptrh
  1696  000964  0100               	movlb	0	; () banked
  1697  000966  4B62               	infsnz	sprintf@f& (0+255),f,b
  1698  000968  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  1699  00096A                     	if	0	;tblptru may be non-zero
  1700  00096A                     	endif
  1701  00096A                     	if	0	;tblptru may be non-zero
  1702  00096A                     	endif
  1703  00096A  0008               	tblrd		*
  1704  00096C  CFF5 F083          	movff	tablat,sprintf@c
  1705  000970  0100               	movlb	0	; () banked
  1706  000972  5183               	movf	sprintf@c& (0+255),w,b
  1707                           
  1708                           ; Switch size 1, requested type "space"
  1709                           ; Number of cases is 2, Range of values is 0 to 102
  1710                           ; switch strategies available:
  1711                           ; Name         Instructions Cycles
  1712                           ; simple_byte            7     4 (average)
  1713                           ;	Chosen strategy is simple_byte
  1714  000974  0A00               	xorlw	0	; case 0
  1715  000976  B4D8               	btfsc	status,2,c
  1716  000978  D384               	goto	l2993
  1717  00097A  0A66               	xorlw	102	; case 102
  1718  00097C  B4D8               	btfsc	status,2,c
  1719  00097E  D7EB               	goto	l2817
  1720  000980  D372               	goto	l2991
  1721  000982                     l2823:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;doprnt.c: 825: if(flag & (0x700)) {
  1725  000982  0E07               	movlw	7
  1726  000984  0100               	movlb	0	; () banked
  1727  000986  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  1728  000988  B4D8               	btfsc	status,2,c
  1729  00098A  D315               	goto	l2971
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;doprnt.c: 827: if(flag & 0x1000)
  1733  00098C  0100               	movlb	0	; () banked
  1734  00098E  A973               	btfss	(sprintf@flag+1)& (0+255),4,b
  1735  000990  D005               	goto	l2829
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;doprnt.c: 829: prec = 6;
  1739  000992  0E00               	movlw	0
  1740  000994  0100               	movlb	0	; () banked
  1741  000996  6F7F               	movwf	(sprintf@prec+1)& (0+255),b
  1742  000998  0E06               	movlw	6
  1743  00099A  6F7E               	movwf	sprintf@prec& (0+255),b
  1744  00099C                     l2829:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1748  00099C  C070  FFD9         	movff	sprintf@ap,fsr2l
  1749  0009A0  C071  FFDA         	movff	sprintf@ap+1,fsr2h
  1750  0009A4  CFDE F080          	movff	postinc2,sprintf@fval
  1751  0009A8  CFDE F081          	movff	postinc2,sprintf@fval+1
  1752  0009AC  CFDD F082          	movff	postdec2,sprintf@fval+2
  1753                           
  1754                           ; BSR set to: 0
  1755  0009B0  0E03               	movlw	3
  1756  0009B2  0100               	movlb	0	; () banked
  1757  0009B4  2770               	addwf	sprintf@ap& (0+255),f,b
  1758  0009B6  0E00               	movlw	0
  1759  0009B8  2371               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;doprnt.c: 831: if(fval < 0.0) {
  1763  0009BA  0100               	movlb	0	; () banked
  1764  0009BC  AF82               	btfss	(sprintf@fval+2)& (0+255),7,b
  1765  0009BE  D011               	goto	l2839
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;doprnt.c: 832: fval = -fval;
  1769  0009C0  C080  F00F         	movff	sprintf@fval,___ftneg@f1
  1770  0009C4  C081  F010         	movff	sprintf@fval+1,___ftneg@f1+1
  1771  0009C8  C082  F011         	movff	sprintf@fval+2,___ftneg@f1+2
  1772  0009CC  EC75  F012         	call	___ftneg	;wreg free
  1773  0009D0  C00F  F080         	movff	?___ftneg,sprintf@fval
  1774  0009D4  C010  F081         	movff	?___ftneg+1,sprintf@fval+1
  1775  0009D8  C011  F082         	movff	?___ftneg+2,sprintf@fval+2
  1776                           
  1777                           ;doprnt.c: 833: flag |= 0x03;
  1778  0009DC  0E03               	movlw	3
  1779  0009DE  0100               	movlb	0	; () banked
  1780  0009E0  1372               	iorwf	sprintf@flag& (0+255),f,b
  1781  0009E2                     l2839:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;doprnt.c: 834: }
  1785                           ;doprnt.c: 835: exp = 0;
  1786  0009E2  0E00               	movlw	0
  1787  0009E4  0100               	movlb	0	; () banked
  1788  0009E6  6F79               	movwf	(sprintf@exp+1)& (0+255),b
  1789  0009E8  0E00               	movlw	0
  1790  0009EA  6F78               	movwf	sprintf@exp& (0+255),b
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;doprnt.c: 836: if( fval!=0) {
  1794  0009EC  0100               	movlb	0	; () banked
  1795  0009EE  5180               	movf	sprintf@fval& (0+255),w,b
  1796  0009F0  0100               	movlb	0	; () banked
  1797  0009F2  1181               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1798  0009F4  0100               	movlb	0	; () banked
  1799  0009F6  1182               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1800  0009F8  B4D8               	btfsc	status,2,c
  1801  0009FA  D091               	goto	l2867
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1805  0009FC  0E82               	movlw	130
  1806  0009FE  0100               	movlb	0	; () banked
  1807  000A00  6F67               	movwf	??_sprintf& (0+255),b
  1808  000A02  0EFF               	movlw	255
  1809  000A04  0100               	movlb	0	; () banked
  1810  000A06  6F68               	movwf	(??_sprintf+1)& (0+255),b
  1811  000A08  C080  F069         	movff	sprintf@fval,??_sprintf+2
  1812  000A0C  C081  F06A         	movff	sprintf@fval+1,??_sprintf+3
  1813  000A10  C082  F06B         	movff	sprintf@fval+2,??_sprintf+4
  1814  000A14  C083  F06C         	movff	sprintf@fval+3,??_sprintf+5
  1815  000A18  0E10               	movlw	16
  1816  000A1A  D006               	goto	u2590
  1817  000A1C                     u2595:
  1818  000A1C  0100               	movlb	0	; () banked
  1819  000A1E  90D8               	bcf	status,0,c
  1820  000A20  336C               	rrcf	(??_sprintf+5)& (0+255),f,b
  1821  000A22  336B               	rrcf	(??_sprintf+4)& (0+255),f,b
  1822  000A24  336A               	rrcf	(??_sprintf+3)& (0+255),f,b
  1823  000A26  3369               	rrcf	(??_sprintf+2)& (0+255),f,b
  1824  000A28                     u2590:
  1825  000A28  2EE8               	decfsz	wreg,f,c
  1826  000A2A  D7F8               	goto	u2595
  1827  000A2C  0100               	movlb	0	; () banked
  1828  000A2E  5169               	movf	(??_sprintf+2)& (0+255),w,b
  1829  000A30  0100               	movlb	0	; () banked
  1830  000A32  2567               	addwf	??_sprintf& (0+255),w,b
  1831  000A34  0100               	movlb	0	; () banked
  1832  000A36  6F78               	movwf	sprintf@exp& (0+255),b
  1833  000A38  0E00               	movlw	0
  1834  000A3A  0100               	movlb	0	; () banked
  1835  000A3C  2168               	addwfc	(??_sprintf+1)& (0+255),w,b
  1836  000A3E  0100               	movlb	0	; () banked
  1837  000A40  6F79               	movwf	(sprintf@exp+1)& (0+255),b
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;doprnt.c: 838: exp--;
  1841  000A42  0100               	movlb	0	; () banked
  1842  000A44  0778               	decf	sprintf@exp& (0+255),f,b
  1843  000A46  A0D8               	btfss	status,0,c
  1844  000A48  0779               	decf	(sprintf@exp+1)& (0+255),f,b
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;doprnt.c: 839: exp *= 3;
  1848  000A4A  C078  F01D         	movff	sprintf@exp,___wmul@multiplier
  1849  000A4E  C079  F01E         	movff	sprintf@exp+1,___wmul@multiplier+1
  1850  000A52  0E00               	movlw	0
  1851  000A54  6E20               	movwf	___wmul@multiplicand+1,c
  1852  000A56  0E03               	movlw	3
  1853  000A58  6E1F               	movwf	___wmul@multiplicand,c
  1854  000A5A  EC62  F012         	call	___wmul	;wreg free
  1855  000A5E  C01D  F078         	movff	?___wmul,sprintf@exp
  1856  000A62  C01E  F079         	movff	?___wmul+1,sprintf@exp+1
  1857                           
  1858                           ;doprnt.c: 840: exp /= 10;
  1859  000A66  C078  F015         	movff	sprintf@exp,___awdiv@dividend
  1860  000A6A  C079  F016         	movff	sprintf@exp+1,___awdiv@dividend+1
  1861  000A6E  0E00               	movlw	0
  1862  000A70  6E18               	movwf	___awdiv@divisor+1,c
  1863  000A72  0E0A               	movlw	10
  1864  000A74  6E17               	movwf	___awdiv@divisor,c
  1865  000A76  EC04  F010         	call	___awdiv	;wreg free
  1866  000A7A  C015  F078         	movff	?___awdiv,sprintf@exp
  1867  000A7E  C016  F079         	movff	?___awdiv+1,sprintf@exp+1
  1868                           
  1869                           ;doprnt.c: 841: if(exp < 0)
  1870  000A82  0100               	movlb	0	; () banked
  1871  000A84  AF79               	btfss	(sprintf@exp+1)& (0+255),7,b
  1872  000A86  D004               	goto	l2855
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;doprnt.c: 842: exp--;
  1876  000A88  0100               	movlb	0	; () banked
  1877  000A8A  0778               	decf	sprintf@exp& (0+255),f,b
  1878  000A8C  A0D8               	btfss	status,0,c
  1879  000A8E  0779               	decf	(sprintf@exp+1)& (0+255),f,b
  1880  000A90                     l2855:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1884  000A90  0100               	movlb	0	; () banked
  1885  000A92  5178               	movf	sprintf@exp& (0+255),w,b
  1886  000A94  0800               	sublw	0
  1887  000A96  EC48  F008         	call	_scale
  1888  000A9A  C032  F07A         	movff	?_scale,sprintf@tmpval
  1889  000A9E  C033  F07B         	movff	?_scale+1,sprintf@tmpval+1
  1890  000AA2  C034  F07C         	movff	?_scale+2,sprintf@tmpval+2
  1891                           
  1892                           ;doprnt.c: 847: tmpval.integ *= fval;
  1893  000AA6  C07A  F023         	movff	sprintf@tmpval,___ftmul@f1
  1894  000AAA  C07B  F024         	movff	sprintf@tmpval+1,___ftmul@f1+1
  1895  000AAE  C07C  F025         	movff	sprintf@tmpval+2,___ftmul@f1+2
  1896  000AB2  C080  F026         	movff	sprintf@fval,___ftmul@f2
  1897  000AB6  C081  F027         	movff	sprintf@fval+1,___ftmul@f2+1
  1898  000ABA  C082  F028         	movff	sprintf@fval+2,___ftmul@f2+2
  1899  000ABE  EC66  F00D         	call	___ftmul	;wreg free
  1900  000AC2  C023  F07A         	movff	?___ftmul,sprintf@tmpval
  1901  000AC6  C024  F07B         	movff	?___ftmul+1,sprintf@tmpval+1
  1902  000ACA  C025  F07C         	movff	?___ftmul+2,sprintf@tmpval+2
  1903                           
  1904                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1905  000ACE  C07A  F00F         	movff	sprintf@tmpval,___ftge@ff1
  1906  000AD2  C07B  F010         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1907  000AD6  C07C  F011         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1908  000ADA  0E00               	movlw	0
  1909  000ADC  6E12               	movwf	___ftge@ff2,c
  1910  000ADE  0E80               	movlw	128
  1911  000AE0  6E13               	movwf	___ftge@ff2+1,c
  1912  000AE2  0E3F               	movlw	63
  1913  000AE4  6E14               	movwf	___ftge@ff2+2,c
  1914  000AE6  EC76  F00F         	call	___ftge	;wreg free
  1915  000AEA  B0D8               	btfsc	status,0,c
  1916  000AEC  D005               	goto	l2863
  1917                           
  1918                           ;doprnt.c: 849: exp--;
  1919  000AEE  0100               	movlb	0	; () banked
  1920  000AF0  0778               	decf	sprintf@exp& (0+255),f,b
  1921  000AF2  A0D8               	btfss	status,0,c
  1922  000AF4  0779               	decf	(sprintf@exp+1)& (0+255),f,b
  1923  000AF6  D013               	goto	l2867
  1924  000AF8                     l2863:
  1925                           
  1926                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1927  000AF8  C07A  F00F         	movff	sprintf@tmpval,___ftge@ff1
  1928  000AFC  C07B  F010         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1929  000B00  C07C  F011         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1930  000B04  0E00               	movlw	0
  1931  000B06  6E12               	movwf	___ftge@ff2,c
  1932  000B08  0E20               	movlw	32
  1933  000B0A  6E13               	movwf	___ftge@ff2+1,c
  1934  000B0C  0E41               	movlw	65
  1935  000B0E  6E14               	movwf	___ftge@ff2+2,c
  1936  000B10  EC76  F00F         	call	___ftge	;wreg free
  1937  000B14  A0D8               	btfss	status,0,c
  1938  000B16  D003               	goto	l2867
  1939                           
  1940                           ;doprnt.c: 851: exp++;
  1941  000B18  0100               	movlb	0	; () banked
  1942  000B1A  4B78               	infsnz	sprintf@exp& (0+255),f,b
  1943  000B1C  2B79               	incf	(sprintf@exp+1)& (0+255),f,b
  1944  000B1E                     l2867:
  1945                           
  1946                           ;doprnt.c: 852: }
  1947                           ;doprnt.c: 1112: if(prec <= 12)
  1948  000B1E  0100               	movlb	0	; () banked
  1949  000B20  BF7F               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1950  000B22  D008               	goto	l2869
  1951  000B24  0100               	movlb	0	; () banked
  1952  000B26  517F               	movf	(sprintf@prec+1)& (0+255),w,b
  1953  000B28  E11D               	bnz	l2871
  1954  000B2A  0E0D               	movlw	13
  1955  000B2C  0100               	movlb	0	; () banked
  1956  000B2E  5D7E               	subwf	sprintf@prec& (0+255),w,b
  1957  000B30  B0D8               	btfsc	status,0,c
  1958  000B32  D018               	goto	l2871
  1959  000B34                     l2869:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1113: fval += fround(prec);
  1963  000B34  C080  F03C         	movff	sprintf@fval,___ftadd@f1
  1964  000B38  C081  F03D         	movff	sprintf@fval+1,___ftadd@f1+1
  1965  000B3C  C082  F03E         	movff	sprintf@fval+2,___ftadd@f1+2
  1966  000B40  0100               	movlb	0	; () banked
  1967  000B42  517E               	movf	sprintf@prec& (0+255),w,b
  1968  000B44  EC40  F00A         	call	_fround
  1969  000B48  C032  F03F         	movff	?_fround,___ftadd@f2
  1970  000B4C  C033  F040         	movff	?_fround+1,___ftadd@f2+1
  1971  000B50  C034  F041         	movff	?_fround+2,___ftadd@f2+2
  1972  000B54  EC63  F00B         	call	___ftadd	;wreg free
  1973  000B58  C03C  F080         	movff	?___ftadd,sprintf@fval
  1974  000B5C  C03D  F081         	movff	?___ftadd+1,sprintf@fval+1
  1975  000B60  C03E  F082         	movff	?___ftadd+2,sprintf@fval+2
  1976  000B64                     l2871:
  1977                           
  1978                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1979  000B64  0100               	movlb	0	; () banked
  1980  000B66  BF79               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1981  000B68  D008               	goto	l2873
  1982  000B6A  0100               	movlb	0	; () banked
  1983  000B6C  5179               	movf	(sprintf@exp+1)& (0+255),w,b
  1984  000B6E  E126               	bnz	l2879
  1985  000B70  0E0A               	movlw	10
  1986  000B72  0100               	movlb	0	; () banked
  1987  000B74  5D78               	subwf	sprintf@exp& (0+255),w,b
  1988  000B76  B0D8               	btfsc	status,0,c
  1989  000B78  D021               	goto	l2879
  1990  000B7A                     l2873:
  1991                           
  1992                           ; BSR set to: 0
  1993  000B7A  0100               	movlb	0	; () banked
  1994  000B7C  5180               	movf	sprintf@fval& (0+255),w,b
  1995  000B7E  0100               	movlb	0	; () banked
  1996  000B80  1181               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1997  000B82  0100               	movlb	0	; () banked
  1998  000B84  1182               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1999  000B86  B4D8               	btfsc	status,2,c
  2000  000B88  D05B               	goto	l2893
  2001                           
  2002                           ; BSR set to: 0
  2003  000B8A  C080  F039         	movff	sprintf@fval,___fttol@f1
  2004  000B8E  C081  F03A         	movff	sprintf@fval+1,___fttol@f1+1
  2005  000B92  C082  F03B         	movff	sprintf@fval+2,___fttol@f1+2
  2006  000B96  ECE0  F00D         	call	___fttol	;wreg free
  2007  000B9A  5039               	movf	?___fttol,w,c
  2008  000B9C  103A               	iorwf	?___fttol+1,w,c
  2009  000B9E  103B               	iorwf	?___fttol+2,w,c
  2010  000BA0  103C               	iorwf	?___fttol+3,w,c
  2011  000BA2  A4D8               	btfss	status,2,c
  2012  000BA4  D04D               	goto	l2893
  2013  000BA6  0100               	movlb	0	; () banked
  2014  000BA8  BF79               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2015  000BAA  D04A               	goto	l2893
  2016  000BAC  0100               	movlb	0	; () banked
  2017  000BAE  5179               	movf	(sprintf@exp+1)& (0+255),w,b
  2018  000BB0  E105               	bnz	l2879
  2019  000BB2  0E02               	movlw	2
  2020  000BB4  0100               	movlb	0	; () banked
  2021  000BB6  5D78               	subwf	sprintf@exp& (0+255),w,b
  2022  000BB8  A0D8               	btfss	status,0,c
  2023  000BBA  D042               	goto	l2893
  2024  000BBC                     l2879:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2028  000BBC  C07A  F00F         	movff	sprintf@tmpval,___ftge@ff1
  2029  000BC0  C07B  F010         	movff	sprintf@tmpval+1,___ftge@ff1+1
  2030  000BC4  C07C  F011         	movff	sprintf@tmpval+2,___ftge@ff1+2
  2031  000BC8  0E70               	movlw	112
  2032  000BCA  6E12               	movwf	___ftge@ff2,c
  2033  000BCC  0E89               	movlw	137
  2034  000BCE  6E13               	movwf	___ftge@ff2+1,c
  2035  000BD0  0E40               	movlw	64
  2036  000BD2  6E14               	movwf	___ftge@ff2+2,c
  2037  000BD4  EC76  F00F         	call	___ftge	;wreg free
  2038  000BD8  B0D8               	btfsc	status,0,c
  2039  000BDA  D003               	goto	l2883
  2040                           
  2041                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2042  000BDC  0100               	movlb	0	; () banked
  2043  000BDE  0EF7               	movlw	247
  2044  000BE0  D002               	goto	L1
  2045  000BE2                     l2883:
  2046                           
  2047                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2048  000BE2  0100               	movlb	0	; () banked
  2049  000BE4  0EF8               	movlw	248
  2050  000BE6                     L1:
  2051  000BE6  2778               	addwf	sprintf@exp& (0+255),f,b
  2052  000BE8  0EFF               	movlw	255
  2053  000BEA  2379               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;doprnt.c: 1124: }
  2057                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2058                           
  2059                           ; BSR set to: 0
  2060  000BEC  0100               	movlb	0	; () banked
  2061  000BEE  5178               	movf	sprintf@exp& (0+255),w,b
  2062  000BF0  EC48  F008         	call	_scale
  2063  000BF4  C032  F07A         	movff	?_scale,sprintf@tmpval
  2064  000BF8  C033  F07B         	movff	?_scale+1,sprintf@tmpval+1
  2065  000BFC  C034  F07C         	movff	?_scale+2,sprintf@tmpval+2
  2066                           
  2067                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2068  000C00  C080  F00F         	movff	sprintf@fval,__tdiv_to_l_@f1
  2069  000C04  C081  F010         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  2070  000C08  C082  F011         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  2071  000C0C  C07A  F012         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  2072  000C10  C07B  F013         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  2073  000C14  C07C  F014         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  2074  000C18  EC39  F00C         	call	__tdiv_to_l_	;wreg free
  2075  000C1C  C00F  F074         	movff	?__tdiv_to_l_,sprintf@val
  2076  000C20  C010  F075         	movff	?__tdiv_to_l_+1,sprintf@val+1
  2077  000C24  C011  F076         	movff	?__tdiv_to_l_+2,sprintf@val+2
  2078  000C28  C012  F077         	movff	?__tdiv_to_l_+3,sprintf@val+3
  2079                           
  2080                           ;doprnt.c: 1129: fval = 0.0;
  2081  000C2C  0E00               	movlw	0
  2082  000C2E  0100               	movlb	0	; () banked
  2083  000C30  6F80               	movwf	sprintf@fval& (0+255),b
  2084  000C32  0E00               	movlw	0
  2085  000C34  0100               	movlb	0	; () banked
  2086  000C36  6F81               	movwf	(sprintf@fval+1)& (0+255),b
  2087  000C38  0E00               	movlw	0
  2088  000C3A  0100               	movlb	0	; () banked
  2089  000C3C  6F82               	movwf	(sprintf@fval+2)& (0+255),b
  2090                           
  2091                           ;doprnt.c: 1130: } else {
  2092  000C3E  D033               	goto	l2897
  2093  000C40                     l2893:
  2094                           
  2095                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2096  000C40  C080  F039         	movff	sprintf@fval,___fttol@f1
  2097  000C44  C081  F03A         	movff	sprintf@fval+1,___fttol@f1+1
  2098  000C48  C082  F03B         	movff	sprintf@fval+2,___fttol@f1+2
  2099  000C4C  ECE0  F00D         	call	___fttol	;wreg free
  2100  000C50  C039  F074         	movff	?___fttol,sprintf@val
  2101  000C54  C03A  F075         	movff	?___fttol+1,sprintf@val+1
  2102  000C58  C03B  F076         	movff	?___fttol+2,sprintf@val+2
  2103  000C5C  C03C  F077         	movff	?___fttol+3,sprintf@val+3
  2104                           
  2105                           ;doprnt.c: 1132: fval -= (double)val;
  2106  000C60  C080  F048         	movff	sprintf@fval,___ftsub@f1
  2107  000C64  C081  F049         	movff	sprintf@fval+1,___ftsub@f1+1
  2108  000C68  C082  F04A         	movff	sprintf@fval+2,___ftsub@f1+2
  2109  000C6C  C074  F017         	movff	sprintf@val,___lltoft@c
  2110  000C70  C075  F018         	movff	sprintf@val+1,___lltoft@c+1
  2111  000C74  C076  F019         	movff	sprintf@val+2,___lltoft@c+2
  2112  000C78  C077  F01A         	movff	sprintf@val+3,___lltoft@c+3
  2113  000C7C  EC62  F011         	call	___lltoft	;wreg free
  2114  000C80  C017  F04B         	movff	?___lltoft,___ftsub@f2
  2115  000C84  C018  F04C         	movff	?___lltoft+1,___ftsub@f2+1
  2116  000C88  C019  F04D         	movff	?___lltoft+2,___ftsub@f2+2
  2117  000C8C  ECE7  F011         	call	___ftsub	;wreg free
  2118  000C90  C048  F080         	movff	?___ftsub,sprintf@fval
  2119  000C94  C049  F081         	movff	?___ftsub+1,sprintf@fval+1
  2120  000C98  C04A  F082         	movff	?___ftsub+2,sprintf@fval+2
  2121                           
  2122                           ;doprnt.c: 1133: exp = 0;
  2123  000C9C  0E00               	movlw	0
  2124  000C9E  0100               	movlb	0	; () banked
  2125  000CA0  6F79               	movwf	(sprintf@exp+1)& (0+255),b
  2126  000CA2  0E00               	movlw	0
  2127  000CA4  6F78               	movwf	sprintf@exp& (0+255),b
  2128  000CA6                     l2897:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;doprnt.c: 1134: }
  2132                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2133  000CA6  0E01               	movlw	1
  2134  000CA8  0100               	movlb	0	; () banked
  2135  000CAA  6F83               	movwf	sprintf@c& (0+255),b
  2136  000CAC                     l2899:
  2137                           
  2138                           ; BSR set to: 0
  2139  000CAC  0E0A               	movlw	10
  2140  000CAE  0100               	movlb	0	; () banked
  2141  000CB0  1983               	xorwf	sprintf@c& (0+255),w,b
  2142  000CB2  B4D8               	btfsc	status,2,c
  2143  000CB4  D01E               	goto	l2911
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;doprnt.c: 1137: if(val < dpowers[c])
  2147                           
  2148                           ; BSR set to: 0
  2149                           
  2150                           ; BSR set to: 0
  2151  000CB6  0100               	movlb	0	; () banked
  2152  000CB8  5183               	movf	sprintf@c& (0+255),w,b
  2153  000CBA  0D04               	mullw	4
  2154  000CBC  0E01               	movlw	low _dpowers
  2155  000CBE  24F3               	addwf	prodl,w,c
  2156  000CC0  6EF6               	movwf	tblptrl,c
  2157  000CC2  0E08               	movlw	high _dpowers
  2158  000CC4  20F4               	addwfc	prodh,w,c
  2159  000CC6  6EF7               	movwf	tblptrh,c
  2160  000CC8                     	if	0	;There are less than 3 active tblptr bytes
  2161  000CC8                     	endif
  2162  000CC8  0009               	tblrd		*+
  2163  000CCA  50F5               	movf	tablat,w,c
  2164  000CCC  0100               	movlb	0	; () banked
  2165  000CCE  5D74               	subwf	sprintf@val& (0+255),w,b
  2166  000CD0  0009               	tblrd		*+
  2167  000CD2  50F5               	movf	tablat,w,c
  2168  000CD4  0100               	movlb	0	; () banked
  2169  000CD6  5975               	subwfb	(sprintf@val+1)& (0+255),w,b
  2170  000CD8  0009               	tblrd		*+
  2171  000CDA  50F5               	movf	tablat,w,c
  2172  000CDC  0100               	movlb	0	; () banked
  2173  000CDE  5976               	subwfb	(sprintf@val+2)& (0+255),w,b
  2174  000CE0  0009               	tblrd		*+
  2175  000CE2  50F5               	movf	tablat,w,c
  2176  000CE4  0100               	movlb	0	; () banked
  2177  000CE6  5977               	subwfb	(sprintf@val+3)& (0+255),w,b
  2178  000CE8  A0D8               	btfss	status,0,c
  2179  000CEA  D003               	goto	l2911
  2180                           
  2181                           ; BSR set to: 0
  2182                           
  2183                           ; BSR set to: 0
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;doprnt.c: 1138: break;
  2187  000CEC  0100               	movlb	0	; () banked
  2188  000CEE  2B83               	incf	sprintf@c& (0+255),f,b
  2189  000CF0  D7DD               	goto	l2899
  2190  000CF2                     l2911:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;doprnt.c: 1175: {
  2194                           ;doprnt.c: 1188: if(flag & 0x03)
  2195  000CF2  0E03               	movlw	3
  2196  000CF4  0100               	movlb	0	; () banked
  2197  000CF6  1572               	andwf	sprintf@flag& (0+255),w,b
  2198  000CF8  0100               	movlb	0	; () banked
  2199  000CFA  6F67               	movwf	??_sprintf& (0+255),b
  2200  000CFC  0E00               	movlw	0
  2201  000CFE  0100               	movlb	0	; () banked
  2202  000D00  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  2203  000D02  0100               	movlb	0	; () banked
  2204  000D04  6F68               	movwf	(??_sprintf+1)& (0+255),b
  2205  000D06  0100               	movlb	0	; () banked
  2206  000D08  5167               	movf	??_sprintf& (0+255),w,b
  2207  000D0A  0100               	movlb	0	; () banked
  2208  000D0C  1168               	iorwf	(??_sprintf+1)& (0+255),w,b
  2209  000D0E  B4D8               	btfsc	status,2,c
  2210  000D10  D054               	goto	l2925
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  2214  000D12  C060  FFD9         	movff	sprintf@sp,fsr2l
  2215  000D16  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2216  000D1A  0E2D               	movlw	45
  2217  000D1C  D04C               	goto	L2
  2218  000D1E                     l2915:
  2219                           
  2220                           ; BSR set to: 0
  2221  000D1E  0100               	movlb	0	; () banked
  2222  000D20  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2223  000D22  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;doprnt.c: 1195: }
  2227                           ;doprnt.c: 1196: while(c--) {
  2228  000D24  D04A               	goto	l2925
  2229  000D26                     l2917:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;doprnt.c: 1200: {
  2233                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2234  000D26  C074  F00F         	movff	sprintf@val,___lldiv@dividend
  2235  000D2A  C075  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  2236  000D2E  C076  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  2237  000D32  C077  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  2238  000D36  0100               	movlb	0	; () banked
  2239  000D38  5183               	movf	sprintf@c& (0+255),w,b
  2240  000D3A  0D04               	mullw	4
  2241  000D3C  0E01               	movlw	low _dpowers
  2242  000D3E  24F3               	addwf	prodl,w,c
  2243  000D40  6EF6               	movwf	tblptrl,c
  2244  000D42  0E08               	movlw	high _dpowers
  2245  000D44  20F4               	addwfc	prodh,w,c
  2246  000D46  6EF7               	movwf	tblptrh,c
  2247  000D48                     	if	0	;There are less than 3 active tblptr bytes
  2248  000D48                     	endif
  2249  000D48  0009               	tblrd		*+
  2250  000D4A  CFF5 F013          	movff	tablat,___lldiv@divisor
  2251  000D4E  0009               	tblrd		*+
  2252  000D50  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  2253  000D54  0009               	tblrd		*+
  2254  000D56  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  2255  000D5A  000A               	tblrd		*-
  2256  000D5C  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  2257  000D60  EC46  F010         	call	___lldiv	;wreg free
  2258  000D64  C00F  F07A         	movff	?___lldiv,sprintf@tmpval
  2259  000D68  C010  F07B         	movff	?___lldiv+1,sprintf@tmpval+1
  2260  000D6C  C011  F07C         	movff	?___lldiv+2,sprintf@tmpval+2
  2261  000D70  C012  F07D         	movff	?___lldiv+3,sprintf@tmpval+3
  2262                           
  2263                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2264  000D74  C07A  F00F         	movff	sprintf@tmpval,___llmod@dividend
  2265  000D78  C07B  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2266  000D7C  C07C  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2267  000D80  C07D  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2268  000D84  0E0A               	movlw	10
  2269  000D86  6E13               	movwf	___llmod@divisor,c
  2270  000D88  0E00               	movlw	0
  2271  000D8A  6E14               	movwf	___llmod@divisor+1,c
  2272  000D8C  0E00               	movlw	0
  2273  000D8E  6E15               	movwf	___llmod@divisor+2,c
  2274  000D90  0E00               	movlw	0
  2275  000D92  6E16               	movwf	___llmod@divisor+3,c
  2276  000D94  EC00  F011         	call	___llmod	;wreg free
  2277  000D98  C00F  F07A         	movff	?___llmod,sprintf@tmpval
  2278  000D9C  C010  F07B         	movff	?___llmod+1,sprintf@tmpval+1
  2279  000DA0  C011  F07C         	movff	?___llmod+2,sprintf@tmpval+2
  2280  000DA4  C012  F07D         	movff	?___llmod+3,sprintf@tmpval+3
  2281                           
  2282                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2283  000DA8  0100               	movlb	0	; () banked
  2284  000DAA  517A               	movf	sprintf@tmpval& (0+255),w,b
  2285  000DAC  0F30               	addlw	48
  2286  000DAE  C060  FFD9         	movff	sprintf@sp,fsr2l
  2287  000DB2  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2288  000DB6                     L2:
  2289  000DB6  6EDF               	movwf	indf2,c
  2290  000DB8  D7B2               	goto	l2915
  2291  000DBA                     l2925:
  2292                           
  2293                           ; BSR set to: 0
  2294  000DBA  0100               	movlb	0	; () banked
  2295  000DBC  0783               	decf	sprintf@c& (0+255),f,b
  2296  000DBE  0100               	movlb	0	; () banked
  2297  000DC0  2983               	incf	sprintf@c& (0+255),w,b
  2298  000DC2  B4D8               	btfsc	status,2,c
  2299  000DC4  D00E               	goto	l2933
  2300  000DC6  D7AF               	goto	l2917
  2301  000DC8                     l2927:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2305  000DC8  C060  FFD9         	movff	sprintf@sp,fsr2l
  2306  000DCC  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2307  000DD0  0E30               	movlw	48
  2308  000DD2  6EDF               	movwf	indf2,c
  2309                           
  2310                           ; BSR set to: 0
  2311  000DD4  0100               	movlb	0	; () banked
  2312  000DD6  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2313  000DD8  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;doprnt.c: 1209: exp--;
  2317  000DDA  0100               	movlb	0	; () banked
  2318  000DDC  0778               	decf	sprintf@exp& (0+255),f,b
  2319  000DDE  A0D8               	btfss	status,0,c
  2320  000DE0  0779               	decf	(sprintf@exp+1)& (0+255),f,b
  2321  000DE2                     l2933:
  2322                           
  2323                           ; BSR set to: 0
  2324  000DE2  0100               	movlb	0	; () banked
  2325  000DE4  BF79               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2326  000DE6  D007               	goto	l2935
  2327  000DE8  0100               	movlb	0	; () banked
  2328  000DEA  5179               	movf	(sprintf@exp+1)& (0+255),w,b
  2329  000DEC  E1ED               	bnz	l2927
  2330  000DEE  0100               	movlb	0	; () banked
  2331  000DF0  0578               	decf	sprintf@exp& (0+255),w,b
  2332  000DF2  B0D8               	btfsc	status,0,c
  2333  000DF4  D7E9               	goto	l2927
  2334  000DF6                     l2935:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;doprnt.c: 1210: }
  2338                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2339  000DF6  0100               	movlb	0	; () banked
  2340  000DF8  BF7F               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2341  000DFA  D00C               	goto	l157
  2342  000DFC  0100               	movlb	0	; () banked
  2343  000DFE  517F               	movf	(sprintf@prec+1)& (0+255),w,b
  2344  000E00  E105               	bnz	u2750
  2345  000E02  0E09               	movlw	9
  2346  000E04  0100               	movlb	0	; () banked
  2347  000E06  5D7E               	subwf	sprintf@prec& (0+255),w,b
  2348  000E08  A0D8               	btfss	status,0,c
  2349  000E0A  D004               	goto	l157
  2350  000E0C                     u2750:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2354  000E0C  0E08               	movlw	8
  2355  000E0E  0100               	movlb	0	; () banked
  2356  000E10  6F83               	movwf	sprintf@c& (0+255),b
  2357  000E12  D002               	goto	l2939
  2358  000E14                     l157:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;doprnt.c: 1213: else
  2362                           ;doprnt.c: 1214: c = prec;
  2363  000E14  C07E  F083         	movff	sprintf@prec,sprintf@c
  2364  000E18                     l2939:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;doprnt.c: 1215: prec -= c;
  2368  000E18  0100               	movlb	0	; () banked
  2369  000E1A  5183               	movf	sprintf@c& (0+255),w,b
  2370  000E1C  0100               	movlb	0	; () banked
  2371  000E1E  5F7E               	subwf	sprintf@prec& (0+255),f,b
  2372  000E20  0E00               	movlw	0
  2373  000E22  0100               	movlb	0	; () banked
  2374  000E24  BF83               	btfsc	sprintf@c& (0+255),7,b
  2375  000E26  0EFF               	movlw	255
  2376  000E28  0100               	movlb	0	; () banked
  2377  000E2A  5B7F               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;doprnt.c: 1219: if(c)
  2381  000E2C  0100               	movlb	0	; () banked
  2382  000E2E  5183               	movf	sprintf@c& (0+255),w,b
  2383  000E30  0100               	movlb	0	; () banked
  2384  000E32  B4D8               	btfsc	status,2,c
  2385  000E34  D009               	goto	l2947
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2389  000E36  C060  FFD9         	movff	sprintf@sp,fsr2l
  2390  000E3A  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2391  000E3E  0E2E               	movlw	46
  2392  000E40  6EDF               	movwf	indf2,c
  2393                           
  2394                           ; BSR set to: 0
  2395  000E42  0100               	movlb	0	; () banked
  2396  000E44  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2397  000E46  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2398  000E48                     l2947:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2402  000E48  0100               	movlb	0	; () banked
  2403  000E4A  5183               	movf	sprintf@c& (0+255),w,b
  2404  000E4C  EC48  F008         	call	_scale
  2405  000E50  C032  F06D         	movff	?_scale,_sprintf$1319
  2406  000E54  C033  F06E         	movff	?_scale+1,_sprintf$1319+1
  2407  000E58  C034  F06F         	movff	?_scale+2,_sprintf$1319+2
  2408                           
  2409                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2410  000E5C  C080  F026         	movff	sprintf@fval,___ftmul@f2
  2411  000E60  C081  F027         	movff	sprintf@fval+1,___ftmul@f2+1
  2412  000E64  C082  F028         	movff	sprintf@fval+2,___ftmul@f2+2
  2413  000E68  C06D  F023         	movff	_sprintf$1319,___ftmul@f1
  2414  000E6C  C06E  F024         	movff	_sprintf$1319+1,___ftmul@f1+1
  2415  000E70  C06F  F025         	movff	_sprintf$1319+2,___ftmul@f1+2
  2416  000E74  EC66  F00D         	call	___ftmul	;wreg free
  2417  000E78  C023  F039         	movff	?___ftmul,___fttol@f1
  2418  000E7C  C024  F03A         	movff	?___ftmul+1,___fttol@f1+1
  2419  000E80  C025  F03B         	movff	?___ftmul+2,___fttol@f1+2
  2420  000E84  ECE0  F00D         	call	___fttol	;wreg free
  2421  000E88  C039  F074         	movff	?___fttol,sprintf@val
  2422  000E8C  C03A  F075         	movff	?___fttol+1,sprintf@val+1
  2423  000E90  C03B  F076         	movff	?___fttol+2,sprintf@val+2
  2424  000E94  C03C  F077         	movff	?___fttol+3,sprintf@val+3
  2425                           
  2426                           ;doprnt.c: 1228: while(c--) {
  2427  000E98  D073               	goto	l2961
  2428  000E9A                     l2951:
  2429                           
  2430                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2431  000E9A  C074  F00F         	movff	sprintf@val,___lldiv@dividend
  2432  000E9E  C075  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  2433  000EA2  C076  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  2434  000EA6  C077  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  2435  000EAA  0100               	movlb	0	; () banked
  2436  000EAC  5183               	movf	sprintf@c& (0+255),w,b
  2437  000EAE  0D04               	mullw	4
  2438  000EB0  0E01               	movlw	low _dpowers
  2439  000EB2  24F3               	addwf	prodl,w,c
  2440  000EB4  6EF6               	movwf	tblptrl,c
  2441  000EB6  0E08               	movlw	high _dpowers
  2442  000EB8  20F4               	addwfc	prodh,w,c
  2443  000EBA  6EF7               	movwf	tblptrh,c
  2444  000EBC                     	if	0	;There are less than 3 active tblptr bytes
  2445  000EBC                     	endif
  2446  000EBC  0009               	tblrd		*+
  2447  000EBE  CFF5 F013          	movff	tablat,___lldiv@divisor
  2448  000EC2  0009               	tblrd		*+
  2449  000EC4  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  2450  000EC8  0009               	tblrd		*+
  2451  000ECA  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  2452  000ECE  000A               	tblrd		*-
  2453  000ED0  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  2454  000ED4  EC46  F010         	call	___lldiv	;wreg free
  2455  000ED8  C00F  F07A         	movff	?___lldiv,sprintf@tmpval
  2456  000EDC  C010  F07B         	movff	?___lldiv+1,sprintf@tmpval+1
  2457  000EE0  C011  F07C         	movff	?___lldiv+2,sprintf@tmpval+2
  2458  000EE4  C012  F07D         	movff	?___lldiv+3,sprintf@tmpval+3
  2459                           
  2460                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2461  000EE8  C07A  F00F         	movff	sprintf@tmpval,___llmod@dividend
  2462  000EEC  C07B  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2463  000EF0  C07C  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2464  000EF4  C07D  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2465  000EF8  0E0A               	movlw	10
  2466  000EFA  6E13               	movwf	___llmod@divisor,c
  2467  000EFC  0E00               	movlw	0
  2468  000EFE  6E14               	movwf	___llmod@divisor+1,c
  2469  000F00  0E00               	movlw	0
  2470  000F02  6E15               	movwf	___llmod@divisor+2,c
  2471  000F04  0E00               	movlw	0
  2472  000F06  6E16               	movwf	___llmod@divisor+3,c
  2473  000F08  EC00  F011         	call	___llmod	;wreg free
  2474  000F0C  C00F  F07A         	movff	?___llmod,sprintf@tmpval
  2475  000F10  C010  F07B         	movff	?___llmod+1,sprintf@tmpval+1
  2476  000F14  C011  F07C         	movff	?___llmod+2,sprintf@tmpval+2
  2477  000F18  C012  F07D         	movff	?___llmod+3,sprintf@tmpval+3
  2478                           
  2479                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2480  000F1C  0100               	movlb	0	; () banked
  2481  000F1E  517A               	movf	sprintf@tmpval& (0+255),w,b
  2482  000F20  0F30               	addlw	48
  2483  000F22  C060  FFD9         	movff	sprintf@sp,fsr2l
  2484  000F26  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2485  000F2A  6EDF               	movwf	indf2,c
  2486                           
  2487                           ; BSR set to: 0
  2488  000F2C  0100               	movlb	0	; () banked
  2489  000F2E  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2490  000F30  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;doprnt.c: 1232: val %= dpowers[c];
  2494  000F32  C074  F00F         	movff	sprintf@val,___llmod@dividend
  2495  000F36  C075  F010         	movff	sprintf@val+1,___llmod@dividend+1
  2496  000F3A  C076  F011         	movff	sprintf@val+2,___llmod@dividend+2
  2497  000F3E  C077  F012         	movff	sprintf@val+3,___llmod@dividend+3
  2498  000F42  0100               	movlb	0	; () banked
  2499  000F44  5183               	movf	sprintf@c& (0+255),w,b
  2500  000F46  0D04               	mullw	4
  2501  000F48  0E01               	movlw	low _dpowers
  2502  000F4A  24F3               	addwf	prodl,w,c
  2503  000F4C  6EF6               	movwf	tblptrl,c
  2504  000F4E  0E08               	movlw	high _dpowers
  2505  000F50  20F4               	addwfc	prodh,w,c
  2506  000F52  6EF7               	movwf	tblptrh,c
  2507  000F54                     	if	0	;There are less than 3 active tblptr bytes
  2508  000F54                     	endif
  2509  000F54  0009               	tblrd		*+
  2510  000F56  CFF5 F013          	movff	tablat,___llmod@divisor
  2511  000F5A  0009               	tblrd		*+
  2512  000F5C  CFF5 F014          	movff	tablat,___llmod@divisor+1
  2513  000F60  0009               	tblrd		*+
  2514  000F62  CFF5 F015          	movff	tablat,___llmod@divisor+2
  2515  000F66  000A               	tblrd		*-
  2516  000F68  CFF5 F016          	movff	tablat,___llmod@divisor+3
  2517  000F6C  EC00  F011         	call	___llmod	;wreg free
  2518  000F70  C00F  F074         	movff	?___llmod,sprintf@val
  2519  000F74  C010  F075         	movff	?___llmod+1,sprintf@val+1
  2520  000F78  C011  F076         	movff	?___llmod+2,sprintf@val+2
  2521  000F7C  C012  F077         	movff	?___llmod+3,sprintf@val+3
  2522  000F80                     l2961:
  2523  000F80  0100               	movlb	0	; () banked
  2524  000F82  0783               	decf	sprintf@c& (0+255),f,b
  2525  000F84  0100               	movlb	0	; () banked
  2526  000F86  2983               	incf	sprintf@c& (0+255),w,b
  2527  000F88  B4D8               	btfsc	status,2,c
  2528  000F8A  D00E               	goto	l2969
  2529  000F8C  D786               	goto	l2951
  2530  000F8E                     l2963:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2534  000F8E  C060  FFD9         	movff	sprintf@sp,fsr2l
  2535  000F92  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2536  000F96  0E30               	movlw	48
  2537  000F98  6EDF               	movwf	indf2,c
  2538                           
  2539                           ; BSR set to: 0
  2540  000F9A  0100               	movlb	0	; () banked
  2541  000F9C  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2542  000F9E  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;doprnt.c: 1237: prec--;
  2546  000FA0  0100               	movlb	0	; () banked
  2547  000FA2  077E               	decf	sprintf@prec& (0+255),f,b
  2548  000FA4  A0D8               	btfss	status,0,c
  2549  000FA6  077F               	decf	(sprintf@prec+1)& (0+255),f,b
  2550  000FA8                     l2969:
  2551                           
  2552                           ; BSR set to: 0
  2553  000FA8  0100               	movlb	0	; () banked
  2554  000FAA  517E               	movf	sprintf@prec& (0+255),w,b
  2555  000FAC  0100               	movlb	0	; () banked
  2556  000FAE  117F               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2557  000FB0  B4D8               	btfsc	status,2,c
  2558  000FB2  D059               	goto	l2991
  2559  000FB4  D7EC               	goto	l2963
  2560  000FB6                     l2971:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;doprnt.c: 1246: }
  2564                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2565  000FB6  0100               	movlb	0	; () banked
  2566  000FB8  517E               	movf	sprintf@prec& (0+255),w,b
  2567  000FBA  0100               	movlb	0	; () banked
  2568  000FBC  117F               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2569  000FBE  A4D8               	btfss	status,2,c
  2570  000FC0  D00D               	goto	l2977
  2571                           
  2572                           ; BSR set to: 0
  2573  000FC2  0100               	movlb	0	; () banked
  2574  000FC4  5174               	movf	sprintf@val& (0+255),w,b
  2575  000FC6  0100               	movlb	0	; () banked
  2576  000FC8  1175               	iorwf	(sprintf@val+1)& (0+255),w,b
  2577  000FCA  0100               	movlb	0	; () banked
  2578  000FCC  1176               	iorwf	(sprintf@val+2)& (0+255),w,b
  2579  000FCE  0100               	movlb	0	; () banked
  2580  000FD0  1177               	iorwf	(sprintf@val+3)& (0+255),w,b
  2581  000FD2  A4D8               	btfss	status,2,c
  2582  000FD4  D003               	goto	l2977
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;doprnt.c: 1291: prec++;
  2586  000FD6  0100               	movlb	0	; () banked
  2587  000FD8  4B7E               	infsnz	sprintf@prec& (0+255),f,b
  2588  000FDA  2B7F               	incf	(sprintf@prec+1)& (0+255),f,b
  2589  000FDC                     l2977:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;doprnt.c: 1339: if(c < prec)
  2593  000FDC  0E80               	movlw	128
  2594  000FDE  0100               	movlb	0	; () banked
  2595  000FE0  BF83               	btfsc	sprintf@c& (0+255),7,b
  2596  000FE2  0E7F               	movlw	127
  2597  000FE4  0100               	movlb	0	; () banked
  2598  000FE6  6F67               	movwf	??_sprintf& (0+255),b
  2599  000FE8  0100               	movlb	0	; () banked
  2600  000FEA  517E               	movf	sprintf@prec& (0+255),w,b
  2601  000FEC  0100               	movlb	0	; () banked
  2602  000FEE  5D83               	subwf	sprintf@c& (0+255),w,b
  2603  000FF0  0100               	movlb	0	; () banked
  2604  000FF2  517F               	movf	(sprintf@prec+1)& (0+255),w,b
  2605  000FF4  0A80               	xorlw	128
  2606  000FF6  0100               	movlb	0	; () banked
  2607  000FF8  5967               	subwfb	??_sprintf& (0+255),w,b
  2608  000FFA  B0D8               	btfsc	status,0,c
  2609  000FFC  D003               	goto	l2981
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;doprnt.c: 1340: c = prec;
  2613  000FFE  C07E  F083         	movff	sprintf@prec,sprintf@c
  2614  001002  D018               	goto	l2985
  2615  001004                     l2981:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;doprnt.c: 1341: else if(prec < c)
  2619  001004  0100               	movlb	0	; () banked
  2620  001006  517F               	movf	(sprintf@prec+1)& (0+255),w,b
  2621  001008  0A80               	xorlw	128
  2622  00100A  0100               	movlb	0	; () banked
  2623  00100C  6F67               	movwf	??_sprintf& (0+255),b
  2624  00100E  0100               	movlb	0	; () banked
  2625  001010  5183               	movf	sprintf@c& (0+255),w,b
  2626  001012  0100               	movlb	0	; () banked
  2627  001014  5D7E               	subwf	sprintf@prec& (0+255),w,b
  2628  001016  0E80               	movlw	128
  2629  001018  0100               	movlb	0	; () banked
  2630  00101A  BF83               	btfsc	sprintf@c& (0+255),7,b
  2631  00101C  0E7F               	movlw	127
  2632  00101E  0100               	movlb	0	; () banked
  2633  001020  5967               	subwfb	??_sprintf& (0+255),w,b
  2634  001022  B0D8               	btfsc	status,0,c
  2635  001024  D007               	goto	l2985
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;doprnt.c: 1342: prec = c;
  2639  001026  0100               	movlb	0	; () banked
  2640  001028  5183               	movf	sprintf@c& (0+255),w,b
  2641  00102A  0100               	movlb	0	; () banked
  2642  00102C  6F7E               	movwf	sprintf@prec& (0+255),b
  2643  00102E  6B7F               	clrf	(sprintf@prec+1)& (0+255),b
  2644  001030  BF7E               	btfsc	sprintf@prec& (0+255),7,b
  2645  001032  077F               	decf	(sprintf@prec+1)& (0+255),f,b
  2646  001034                     l2985:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;doprnt.c: 1422: {
  2650                           ;doprnt.c: 1438: if(flag & 0x03)
  2651  001034  0E03               	movlw	3
  2652  001036  0100               	movlb	0	; () banked
  2653  001038  1572               	andwf	sprintf@flag& (0+255),w,b
  2654  00103A  0100               	movlb	0	; () banked
  2655  00103C  6F67               	movwf	??_sprintf& (0+255),b
  2656  00103E  0E00               	movlw	0
  2657  001040  0100               	movlb	0	; () banked
  2658  001042  1573               	andwf	(sprintf@flag+1)& (0+255),w,b
  2659  001044  0100               	movlb	0	; () banked
  2660  001046  6F68               	movwf	(??_sprintf+1)& (0+255),b
  2661  001048  0100               	movlb	0	; () banked
  2662  00104A  5167               	movf	??_sprintf& (0+255),w,b
  2663  00104C  0100               	movlb	0	; () banked
  2664  00104E  1168               	iorwf	(??_sprintf+1)& (0+255),w,b
  2665  001050  B4D8               	btfsc	status,2,c
  2666  001052  D009               	goto	l2991
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2670  001054  C060  FFD9         	movff	sprintf@sp,fsr2l
  2671  001058  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2672  00105C  0E2D               	movlw	45
  2673  00105E  6EDF               	movwf	indf2,c
  2674  001060                     l2989:
  2675                           
  2676                           ; BSR set to: 0
  2677  001060  0100               	movlb	0	; () banked
  2678  001062  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2679  001064  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2680  001066                     l2991:
  2681                           
  2682                           ; BSR set to: 0
  2683  001066  C062  FFF6         	movff	sprintf@f,tblptrl
  2684  00106A  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2685  00106E  0100               	movlb	0	; () banked
  2686  001070  4B62               	infsnz	sprintf@f& (0+255),f,b
  2687  001072  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2688  001074                     	if	0	;tblptru may be non-zero
  2689  001074                     	endif
  2690  001074                     	if	0	;tblptru may be non-zero
  2691  001074                     	endif
  2692  001074  0008               	tblrd		*
  2693  001076  CFF5 F083          	movff	tablat,sprintf@c
  2694  00107A  0100               	movlb	0	; () banked
  2695  00107C  5183               	movf	sprintf@c& (0+255),w,b
  2696  00107E  A4D8               	btfss	status,2,c
  2697  001080  D414               	goto	l2793
  2698  001082                     l2993:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;doprnt.c: 1538: *sp = 0;
  2702  001082  C060  FFD9         	movff	sprintf@sp,fsr2l
  2703  001086  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2704  00108A  0E00               	movlw	0
  2705  00108C  6EDF               	movwf	indf2,c
  2706  00108E  0012               	return	
  2707  001090                     __end_of_sprintf:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           intcon	equ	0xFF2
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           indf2	equ	0xFDF
  2719                           postinc2	equ	0xFDE
  2720                           postdec2	equ	0xFDD
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _scale *****************
  2726 ;; Defined at:
  2727 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  scl             1    wreg     char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  scl             1   55[COMRAM] char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  3   49[COMRAM] char 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2741 ;;      Params:         3       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2744 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:        7 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    3
  2748 ;; This function calls:
  2749 ;;		___awdiv
  2750 ;;		___awmod
  2751 ;;		___ftmul
  2752 ;;		___wmul
  2753 ;; This function is called by:
  2754 ;;		_sprintf
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text10
  2759  001090                     __ptext10:
  2760                           	opt stack 0
  2761  001090                     _scale:
  2762                           	opt stack 25
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;incstack = 0
  2766                           ;scale@scl stored from wreg
  2767  001090  6E38               	movwf	scale@scl,c
  2768                           
  2769                           ;doprnt.c: 428: if(scl < 0) {
  2770  001092  AE38               	btfss	scale@scl,7,c
  2771  001094  D0FB               	goto	l2429
  2772                           
  2773                           ;doprnt.c: 429: scl = -scl;
  2774  001096  6C38               	negf	scale@scl,c
  2775                           
  2776                           ;doprnt.c: 430: if(scl>=110)
  2777  001098  5038               	movf	scale@scl,w,c
  2778  00109A  0A80               	xorlw	128
  2779  00109C  0F12               	addlw	-238
  2780  00109E  A0D8               	btfss	status,0,c
  2781  0010A0  D091               	goto	l2419
  2782                           
  2783                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2784  0010A2  0E00               	movlw	0
  2785  0010A4  6E20               	movwf	___wmul@multiplicand+1,c
  2786  0010A6  0E03               	movlw	3
  2787  0010A8  6E1F               	movwf	___wmul@multiplicand,c
  2788  0010AA  0E00               	movlw	0
  2789  0010AC  6E18               	movwf	___awdiv@divisor+1,c
  2790  0010AE  0E0A               	movlw	10
  2791  0010B0  6E17               	movwf	___awdiv@divisor,c
  2792  0010B2  0E00               	movlw	0
  2793  0010B4  6E12               	movwf	___awmod@divisor+1,c
  2794  0010B6  0E64               	movlw	100
  2795  0010B8  6E11               	movwf	___awmod@divisor,c
  2796  0010BA  5038               	movf	scale@scl,w,c
  2797  0010BC  6E0F               	movwf	___awmod@dividend,c
  2798  0010BE  6A10               	clrf	___awmod@dividend+1,c
  2799  0010C0  BE0F               	btfsc	___awmod@dividend,7,c
  2800  0010C2  0610               	decf	___awmod@dividend+1,f,c
  2801  0010C4  ECC8  F010         	call	___awmod	;wreg free
  2802  0010C8  C00F  F015         	movff	?___awmod,___awdiv@dividend
  2803  0010CC  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  2804  0010D0  EC04  F010         	call	___awdiv	;wreg free
  2805  0010D4  0E09               	movlw	9
  2806  0010D6  2415               	addwf	?___awdiv,w,c
  2807  0010D8  6E1D               	movwf	___wmul@multiplier,c
  2808  0010DA  0E00               	movlw	0
  2809  0010DC  2016               	addwfc	?___awdiv+1,w,c
  2810  0010DE  6E1E               	movwf	___wmul@multiplier+1,c
  2811  0010E0  EC62  F012         	call	___wmul	;wreg free
  2812  0010E4  0E50               	movlw	low __npowers_
  2813  0010E6  241D               	addwf	?___wmul,w,c
  2814  0010E8  6EF6               	movwf	tblptrl,c
  2815  0010EA  0E08               	movlw	high __npowers_
  2816  0010EC  201E               	addwfc	?___wmul+1,w,c
  2817  0010EE  6EF7               	movwf	tblptrh,c
  2818  0010F0                     	if	0	;There are less than 3 active tblptr bytes
  2819  0010F0                     	endif
  2820  0010F0  0009               	tblrd		*+
  2821  0010F2  CFF5 F026          	movff	tablat,___ftmul@f2
  2822  0010F6  0009               	tblrd		*+
  2823  0010F8  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2824  0010FC  000A               	tblrd		*-
  2825  0010FE  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2826  001102  0E00               	movlw	0
  2827  001104  6E18               	movwf	___awdiv@divisor+1,c
  2828  001106  0E64               	movlw	100
  2829  001108  6E17               	movwf	___awdiv@divisor,c
  2830  00110A  5038               	movf	scale@scl,w,c
  2831  00110C  6E15               	movwf	___awdiv@dividend,c
  2832  00110E  6A16               	clrf	___awdiv@dividend+1,c
  2833  001110  BE15               	btfsc	___awdiv@dividend,7,c
  2834  001112  0616               	decf	___awdiv@dividend+1,f,c
  2835  001114  EC04  F010         	call	___awdiv	;wreg free
  2836  001118  0E12               	movlw	18
  2837  00111A  2415               	addwf	?___awdiv,w,c
  2838  00111C  6E1D               	movwf	___wmul@multiplier,c
  2839  00111E  0E00               	movlw	0
  2840  001120  2016               	addwfc	?___awdiv+1,w,c
  2841  001122  6E1E               	movwf	___wmul@multiplier+1,c
  2842  001124  0E00               	movlw	0
  2843  001126  6E20               	movwf	___wmul@multiplicand+1,c
  2844  001128  0E03               	movlw	3
  2845  00112A  6E1F               	movwf	___wmul@multiplicand,c
  2846  00112C  EC62  F012         	call	___wmul	;wreg free
  2847  001130  0E50               	movlw	low __npowers_
  2848  001132  241D               	addwf	?___wmul,w,c
  2849  001134  6EF6               	movwf	tblptrl,c
  2850  001136  0E08               	movlw	high __npowers_
  2851  001138  201E               	addwfc	?___wmul+1,w,c
  2852  00113A  6EF7               	movwf	tblptrh,c
  2853  00113C                     	if	0	;There are less than 3 active tblptr bytes
  2854  00113C                     	endif
  2855  00113C  0009               	tblrd		*+
  2856  00113E  CFF5 F023          	movff	tablat,___ftmul@f1
  2857  001142  0009               	tblrd		*+
  2858  001144  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2859  001148  000A               	tblrd		*-
  2860  00114A  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2861  00114E  EC66  F00D         	call	___ftmul	;wreg free
  2862  001152  C023  F035         	movff	?___ftmul,_scale$1318
  2863  001156  C024  F036         	movff	?___ftmul+1,_scale$1318+1
  2864  00115A  C025  F037         	movff	?___ftmul+2,_scale$1318+2
  2865                           
  2866                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2867  00115E  C035  F023         	movff	_scale$1318,___ftmul@f1
  2868  001162  C036  F024         	movff	_scale$1318+1,___ftmul@f1+1
  2869  001166  C037  F025         	movff	_scale$1318+2,___ftmul@f1+2
  2870  00116A  0E00               	movlw	0
  2871  00116C  6E20               	movwf	___wmul@multiplicand+1,c
  2872  00116E  0E03               	movlw	3
  2873  001170  6E1F               	movwf	___wmul@multiplicand,c
  2874  001172  0E00               	movlw	0
  2875  001174  6E12               	movwf	___awmod@divisor+1,c
  2876  001176  0E0A               	movlw	10
  2877  001178  6E11               	movwf	___awmod@divisor,c
  2878  00117A  5038               	movf	scale@scl,w,c
  2879  00117C  6E0F               	movwf	___awmod@dividend,c
  2880  00117E  6A10               	clrf	___awmod@dividend+1,c
  2881  001180  BE0F               	btfsc	___awmod@dividend,7,c
  2882  001182  0610               	decf	___awmod@dividend+1,f,c
  2883  001184  ECC8  F010         	call	___awmod	;wreg free
  2884  001188  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2885  00118C  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2886  001190  EC62  F012         	call	___wmul	;wreg free
  2887  001194  0E50               	movlw	low __npowers_
  2888  001196  241D               	addwf	?___wmul,w,c
  2889  001198  6EF6               	movwf	tblptrl,c
  2890  00119A  0E08               	movlw	high __npowers_
  2891  00119C  201E               	addwfc	?___wmul+1,w,c
  2892  00119E  6EF7               	movwf	tblptrh,c
  2893  0011A0                     	if	0	;There are less than 3 active tblptr bytes
  2894  0011A0                     	endif
  2895  0011A0  0009               	tblrd		*+
  2896  0011A2  CFF5 F026          	movff	tablat,___ftmul@f2
  2897  0011A6  0009               	tblrd		*+
  2898  0011A8  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2899  0011AC  000A               	tblrd		*-
  2900  0011AE  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2901  0011B2  EC66  F00D         	call	___ftmul	;wreg free
  2902  0011B6  C023  F032         	movff	?___ftmul,?_scale
  2903  0011BA  C024  F033         	movff	?___ftmul+1,?_scale+1
  2904  0011BE  C025  F034         	movff	?___ftmul+2,?_scale+2
  2905  0011C2  0012               	return	
  2906  0011C4                     l2419:
  2907                           
  2908                           ;doprnt.c: 432: else if(scl > 10)
  2909  0011C4  5038               	movf	scale@scl,w,c
  2910  0011C6  0A80               	xorlw	128
  2911  0011C8  0F75               	addlw	-139
  2912  0011CA  A0D8               	btfss	status,0,c
  2913  0011CC  D04D               	goto	l2425
  2914                           
  2915                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2916  0011CE  0E00               	movlw	0
  2917  0011D0  6E18               	movwf	___awdiv@divisor+1,c
  2918  0011D2  0E0A               	movlw	10
  2919  0011D4  6E17               	movwf	___awdiv@divisor,c
  2920  0011D6  5038               	movf	scale@scl,w,c
  2921  0011D8  6E15               	movwf	___awdiv@dividend,c
  2922  0011DA  6A16               	clrf	___awdiv@dividend+1,c
  2923  0011DC  BE15               	btfsc	___awdiv@dividend,7,c
  2924  0011DE  0616               	decf	___awdiv@dividend+1,f,c
  2925  0011E0  EC04  F010         	call	___awdiv	;wreg free
  2926  0011E4  0E09               	movlw	9
  2927  0011E6  2415               	addwf	?___awdiv,w,c
  2928  0011E8  6E1D               	movwf	___wmul@multiplier,c
  2929  0011EA  0E00               	movlw	0
  2930  0011EC  2016               	addwfc	?___awdiv+1,w,c
  2931  0011EE  6E1E               	movwf	___wmul@multiplier+1,c
  2932  0011F0  0E00               	movlw	0
  2933  0011F2  6E20               	movwf	___wmul@multiplicand+1,c
  2934  0011F4  0E03               	movlw	3
  2935  0011F6  6E1F               	movwf	___wmul@multiplicand,c
  2936  0011F8  EC62  F012         	call	___wmul	;wreg free
  2937  0011FC  0E50               	movlw	low __npowers_
  2938  0011FE  241D               	addwf	?___wmul,w,c
  2939  001200  6EF6               	movwf	tblptrl,c
  2940  001202  0E08               	movlw	high __npowers_
  2941  001204  201E               	addwfc	?___wmul+1,w,c
  2942  001206  6EF7               	movwf	tblptrh,c
  2943  001208                     	if	0	;There are less than 3 active tblptr bytes
  2944  001208                     	endif
  2945  001208  0009               	tblrd		*+
  2946  00120A  CFF5 F023          	movff	tablat,___ftmul@f1
  2947  00120E  0009               	tblrd		*+
  2948  001210  CFF5 F024          	movff	tablat,___ftmul@f1+1
  2949  001214  000A               	tblrd		*-
  2950  001216  CFF5 F025          	movff	tablat,___ftmul@f1+2
  2951  00121A  0E00               	movlw	0
  2952  00121C  6E20               	movwf	___wmul@multiplicand+1,c
  2953  00121E  0E03               	movlw	3
  2954  001220  6E1F               	movwf	___wmul@multiplicand,c
  2955  001222  0E00               	movlw	0
  2956  001224  6E12               	movwf	___awmod@divisor+1,c
  2957  001226  0E0A               	movlw	10
  2958  001228  6E11               	movwf	___awmod@divisor,c
  2959  00122A  5038               	movf	scale@scl,w,c
  2960  00122C  6E0F               	movwf	___awmod@dividend,c
  2961  00122E  6A10               	clrf	___awmod@dividend+1,c
  2962  001230  BE0F               	btfsc	___awmod@dividend,7,c
  2963  001232  0610               	decf	___awmod@dividend+1,f,c
  2964  001234  ECC8  F010         	call	___awmod	;wreg free
  2965  001238  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  2966  00123C  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  2967  001240  EC62  F012         	call	___wmul	;wreg free
  2968  001244  0E50               	movlw	low __npowers_
  2969  001246  241D               	addwf	?___wmul,w,c
  2970  001248  6EF6               	movwf	tblptrl,c
  2971  00124A  0E08               	movlw	high __npowers_
  2972  00124C  201E               	addwfc	?___wmul+1,w,c
  2973  00124E  6EF7               	movwf	tblptrh,c
  2974  001250                     	if	0	;There are less than 3 active tblptr bytes
  2975  001250                     	endif
  2976  001250  0009               	tblrd		*+
  2977  001252  CFF5 F026          	movff	tablat,___ftmul@f2
  2978  001256  0009               	tblrd		*+
  2979  001258  CFF5 F027          	movff	tablat,___ftmul@f2+1
  2980  00125C  000A               	tblrd		*-
  2981  00125E  CFF5 F028          	movff	tablat,___ftmul@f2+2
  2982  001262  EC66  F00D         	call	___ftmul	;wreg free
  2983  001266  D7A7               	goto	L3
  2984  001268                     l2425:
  2985                           
  2986                           ;doprnt.c: 434: return _npowers_[scl];
  2987  001268  5038               	movf	scale@scl,w,c
  2988  00126A  0D03               	mullw	3
  2989  00126C  0E50               	movlw	low __npowers_
  2990  00126E  24F3               	addwf	prodl,w,c
  2991  001270  6EF6               	movwf	tblptrl,c
  2992  001272  0E08               	movlw	high __npowers_
  2993  001274  20F4               	addwfc	prodh,w,c
  2994  001276  6EF7               	movwf	tblptrh,c
  2995  001278                     	if	0	;There are less than 3 active tblptr bytes
  2996  001278                     	endif
  2997  001278  0009               	tblrd		*+
  2998  00127A  CFF5 F032          	movff	tablat,?_scale
  2999  00127E  0009               	tblrd		*+
  3000  001280  CFF5 F033          	movff	tablat,?_scale+1
  3001  001284  000A               	tblrd		*-
  3002  001286  CFF5 F034          	movff	tablat,?_scale+2
  3003  00128A  0012               	return	
  3004  00128C                     l2429:
  3005                           
  3006                           ;doprnt.c: 435: }
  3007                           ;doprnt.c: 436: if(scl>=110)
  3008  00128C  5038               	movf	scale@scl,w,c
  3009  00128E  0A80               	xorlw	128
  3010  001290  0F12               	addlw	-238
  3011  001292  A0D8               	btfss	status,0,c
  3012  001294  D091               	goto	l2437
  3013                           
  3014                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3015  001296  0E00               	movlw	0
  3016  001298  6E20               	movwf	___wmul@multiplicand+1,c
  3017  00129A  0E03               	movlw	3
  3018  00129C  6E1F               	movwf	___wmul@multiplicand,c
  3019  00129E  0E00               	movlw	0
  3020  0012A0  6E18               	movwf	___awdiv@divisor+1,c
  3021  0012A2  0E0A               	movlw	10
  3022  0012A4  6E17               	movwf	___awdiv@divisor,c
  3023  0012A6  0E00               	movlw	0
  3024  0012A8  6E12               	movwf	___awmod@divisor+1,c
  3025  0012AA  0E64               	movlw	100
  3026  0012AC  6E11               	movwf	___awmod@divisor,c
  3027  0012AE  5038               	movf	scale@scl,w,c
  3028  0012B0  6E0F               	movwf	___awmod@dividend,c
  3029  0012B2  6A10               	clrf	___awmod@dividend+1,c
  3030  0012B4  BE0F               	btfsc	___awmod@dividend,7,c
  3031  0012B6  0610               	decf	___awmod@dividend+1,f,c
  3032  0012B8  ECC8  F010         	call	___awmod	;wreg free
  3033  0012BC  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3034  0012C0  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3035  0012C4  EC04  F010         	call	___awdiv	;wreg free
  3036  0012C8  0E09               	movlw	9
  3037  0012CA  2415               	addwf	?___awdiv,w,c
  3038  0012CC  6E1D               	movwf	___wmul@multiplier,c
  3039  0012CE  0E00               	movlw	0
  3040  0012D0  2016               	addwfc	?___awdiv+1,w,c
  3041  0012D2  6E1E               	movwf	___wmul@multiplier+1,c
  3042  0012D4  EC62  F012         	call	___wmul	;wreg free
  3043  0012D8  0E29               	movlw	low __powers_
  3044  0012DA  241D               	addwf	?___wmul,w,c
  3045  0012DC  6EF6               	movwf	tblptrl,c
  3046  0012DE  0E08               	movlw	high __powers_
  3047  0012E0  201E               	addwfc	?___wmul+1,w,c
  3048  0012E2  6EF7               	movwf	tblptrh,c
  3049  0012E4                     	if	0	;There are less than 3 active tblptr bytes
  3050  0012E4                     	endif
  3051  0012E4  0009               	tblrd		*+
  3052  0012E6  CFF5 F026          	movff	tablat,___ftmul@f2
  3053  0012EA  0009               	tblrd		*+
  3054  0012EC  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3055  0012F0  000A               	tblrd		*-
  3056  0012F2  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3057  0012F6  0E00               	movlw	0
  3058  0012F8  6E18               	movwf	___awdiv@divisor+1,c
  3059  0012FA  0E64               	movlw	100
  3060  0012FC  6E17               	movwf	___awdiv@divisor,c
  3061  0012FE  5038               	movf	scale@scl,w,c
  3062  001300  6E15               	movwf	___awdiv@dividend,c
  3063  001302  6A16               	clrf	___awdiv@dividend+1,c
  3064  001304  BE15               	btfsc	___awdiv@dividend,7,c
  3065  001306  0616               	decf	___awdiv@dividend+1,f,c
  3066  001308  EC04  F010         	call	___awdiv	;wreg free
  3067  00130C  0E12               	movlw	18
  3068  00130E  2415               	addwf	?___awdiv,w,c
  3069  001310  6E1D               	movwf	___wmul@multiplier,c
  3070  001312  0E00               	movlw	0
  3071  001314  2016               	addwfc	?___awdiv+1,w,c
  3072  001316  6E1E               	movwf	___wmul@multiplier+1,c
  3073  001318  0E00               	movlw	0
  3074  00131A  6E20               	movwf	___wmul@multiplicand+1,c
  3075  00131C  0E03               	movlw	3
  3076  00131E  6E1F               	movwf	___wmul@multiplicand,c
  3077  001320  EC62  F012         	call	___wmul	;wreg free
  3078  001324  0E29               	movlw	low __powers_
  3079  001326  241D               	addwf	?___wmul,w,c
  3080  001328  6EF6               	movwf	tblptrl,c
  3081  00132A  0E08               	movlw	high __powers_
  3082  00132C  201E               	addwfc	?___wmul+1,w,c
  3083  00132E  6EF7               	movwf	tblptrh,c
  3084  001330                     	if	0	;There are less than 3 active tblptr bytes
  3085  001330                     	endif
  3086  001330  0009               	tblrd		*+
  3087  001332  CFF5 F023          	movff	tablat,___ftmul@f1
  3088  001336  0009               	tblrd		*+
  3089  001338  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3090  00133C  000A               	tblrd		*-
  3091  00133E  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3092  001342  EC66  F00D         	call	___ftmul	;wreg free
  3093  001346  C023  F035         	movff	?___ftmul,_scale$1318
  3094  00134A  C024  F036         	movff	?___ftmul+1,_scale$1318+1
  3095  00134E  C025  F037         	movff	?___ftmul+2,_scale$1318+2
  3096                           
  3097                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3098  001352  C035  F023         	movff	_scale$1318,___ftmul@f1
  3099  001356  C036  F024         	movff	_scale$1318+1,___ftmul@f1+1
  3100  00135A  C037  F025         	movff	_scale$1318+2,___ftmul@f1+2
  3101  00135E  0E00               	movlw	0
  3102  001360  6E20               	movwf	___wmul@multiplicand+1,c
  3103  001362  0E03               	movlw	3
  3104  001364  6E1F               	movwf	___wmul@multiplicand,c
  3105  001366  0E00               	movlw	0
  3106  001368  6E12               	movwf	___awmod@divisor+1,c
  3107  00136A  0E0A               	movlw	10
  3108  00136C  6E11               	movwf	___awmod@divisor,c
  3109  00136E  5038               	movf	scale@scl,w,c
  3110  001370  6E0F               	movwf	___awmod@dividend,c
  3111  001372  6A10               	clrf	___awmod@dividend+1,c
  3112  001374  BE0F               	btfsc	___awmod@dividend,7,c
  3113  001376  0610               	decf	___awmod@dividend+1,f,c
  3114  001378  ECC8  F010         	call	___awmod	;wreg free
  3115  00137C  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  3116  001380  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  3117  001384  EC62  F012         	call	___wmul	;wreg free
  3118  001388  0E29               	movlw	low __powers_
  3119  00138A  241D               	addwf	?___wmul,w,c
  3120  00138C  6EF6               	movwf	tblptrl,c
  3121  00138E  0E08               	movlw	high __powers_
  3122  001390  201E               	addwfc	?___wmul+1,w,c
  3123  001392  6EF7               	movwf	tblptrh,c
  3124  001394                     	if	0	;There are less than 3 active tblptr bytes
  3125  001394                     	endif
  3126  001394  0009               	tblrd		*+
  3127  001396  CFF5 F026          	movff	tablat,___ftmul@f2
  3128  00139A  0009               	tblrd		*+
  3129  00139C  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3130  0013A0  000A               	tblrd		*-
  3131  0013A2  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3132  0013A6  EC66  F00D         	call	___ftmul	;wreg free
  3133  0013AA  C023  F032         	movff	?___ftmul,?_scale
  3134  0013AE  C024  F033         	movff	?___ftmul+1,?_scale+1
  3135  0013B2  C025  F034         	movff	?___ftmul+2,?_scale+2
  3136  0013B6  0012               	return	
  3137  0013B8                     l2437:
  3138                           
  3139                           ;doprnt.c: 438: else if(scl > 10)
  3140  0013B8  5038               	movf	scale@scl,w,c
  3141  0013BA  0A80               	xorlw	128
  3142  0013BC  0F75               	addlw	-139
  3143  0013BE  A0D8               	btfss	status,0,c
  3144  0013C0  D04D               	goto	l2443
  3145                           
  3146                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3147  0013C2  0E00               	movlw	0
  3148  0013C4  6E18               	movwf	___awdiv@divisor+1,c
  3149  0013C6  0E0A               	movlw	10
  3150  0013C8  6E17               	movwf	___awdiv@divisor,c
  3151  0013CA  5038               	movf	scale@scl,w,c
  3152  0013CC  6E15               	movwf	___awdiv@dividend,c
  3153  0013CE  6A16               	clrf	___awdiv@dividend+1,c
  3154  0013D0  BE15               	btfsc	___awdiv@dividend,7,c
  3155  0013D2  0616               	decf	___awdiv@dividend+1,f,c
  3156  0013D4  EC04  F010         	call	___awdiv	;wreg free
  3157  0013D8  0E09               	movlw	9
  3158  0013DA  2415               	addwf	?___awdiv,w,c
  3159  0013DC  6E1D               	movwf	___wmul@multiplier,c
  3160  0013DE  0E00               	movlw	0
  3161  0013E0  2016               	addwfc	?___awdiv+1,w,c
  3162  0013E2  6E1E               	movwf	___wmul@multiplier+1,c
  3163  0013E4  0E00               	movlw	0
  3164  0013E6  6E20               	movwf	___wmul@multiplicand+1,c
  3165  0013E8  0E03               	movlw	3
  3166  0013EA  6E1F               	movwf	___wmul@multiplicand,c
  3167  0013EC  EC62  F012         	call	___wmul	;wreg free
  3168  0013F0  0E29               	movlw	low __powers_
  3169  0013F2  241D               	addwf	?___wmul,w,c
  3170  0013F4  6EF6               	movwf	tblptrl,c
  3171  0013F6  0E08               	movlw	high __powers_
  3172  0013F8  201E               	addwfc	?___wmul+1,w,c
  3173  0013FA  6EF7               	movwf	tblptrh,c
  3174  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  3175  0013FC                     	endif
  3176  0013FC  0009               	tblrd		*+
  3177  0013FE  CFF5 F023          	movff	tablat,___ftmul@f1
  3178  001402  0009               	tblrd		*+
  3179  001404  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3180  001408  000A               	tblrd		*-
  3181  00140A  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3182  00140E  0E00               	movlw	0
  3183  001410  6E20               	movwf	___wmul@multiplicand+1,c
  3184  001412  0E03               	movlw	3
  3185  001414  6E1F               	movwf	___wmul@multiplicand,c
  3186  001416  0E00               	movlw	0
  3187  001418  6E12               	movwf	___awmod@divisor+1,c
  3188  00141A  0E0A               	movlw	10
  3189  00141C  6E11               	movwf	___awmod@divisor,c
  3190  00141E  5038               	movf	scale@scl,w,c
  3191  001420  6E0F               	movwf	___awmod@dividend,c
  3192  001422  6A10               	clrf	___awmod@dividend+1,c
  3193  001424  BE0F               	btfsc	___awmod@dividend,7,c
  3194  001426  0610               	decf	___awmod@dividend+1,f,c
  3195  001428  ECC8  F010         	call	___awmod	;wreg free
  3196  00142C  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  3197  001430  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  3198  001434  EC62  F012         	call	___wmul	;wreg free
  3199  001438  0E29               	movlw	low __powers_
  3200  00143A  241D               	addwf	?___wmul,w,c
  3201  00143C  6EF6               	movwf	tblptrl,c
  3202  00143E  0E08               	movlw	high __powers_
  3203  001440  201E               	addwfc	?___wmul+1,w,c
  3204  001442  6EF7               	movwf	tblptrh,c
  3205  001444                     	if	0	;There are less than 3 active tblptr bytes
  3206  001444                     	endif
  3207  001444  0009               	tblrd		*+
  3208  001446  CFF5 F026          	movff	tablat,___ftmul@f2
  3209  00144A  0009               	tblrd		*+
  3210  00144C  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3211  001450  000A               	tblrd		*-
  3212  001452  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3213  001456  EC66  F00D         	call	___ftmul	;wreg free
  3214  00145A  D7A7               	goto	L4
  3215  00145C                     l2443:
  3216                           
  3217                           ;doprnt.c: 440: return _powers_[scl];
  3218  00145C  5038               	movf	scale@scl,w,c
  3219  00145E  0D03               	mullw	3
  3220  001460  0E29               	movlw	low __powers_
  3221  001462  24F3               	addwf	prodl,w,c
  3222  001464  6EF6               	movwf	tblptrl,c
  3223  001466  0E08               	movlw	high __powers_
  3224  001468  20F4               	addwfc	prodh,w,c
  3225  00146A  6EF7               	movwf	tblptrh,c
  3226  00146C                     	if	0	;There are less than 3 active tblptr bytes
  3227  00146C                     	endif
  3228  00146C  0009               	tblrd		*+
  3229  00146E  CFF5 F032          	movff	tablat,?_scale
  3230  001472  0009               	tblrd		*+
  3231  001474  CFF5 F033          	movff	tablat,?_scale+1
  3232  001478  000A               	tblrd		*-
  3233  00147A  CFF5 F034          	movff	tablat,?_scale+2
  3234  00147E  0012               	return	
  3235  001480                     __end_of_scale:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           postinc0	equ	0xFEE
  3245                           wreg	equ	0xFE8
  3246                           indf2	equ	0xFDF
  3247                           postinc2	equ	0xFDE
  3248                           postdec2	equ	0xFDD
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _isdigit *****************
  3254 ;; Defined at:
  3255 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  c               1    wreg     unsigned char 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  c               1   16[COMRAM] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;		None               void
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        3 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_sprintf
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text11
  3284  002572                     __ptext11:
  3285                           	opt stack 0
  3286  002572                     _isdigit:
  3287                           	opt stack 27
  3288                           
  3289                           ;incstack = 0
  3290                           ;isdigit@c stored from wreg
  3291  002572  6E11               	movwf	isdigit@c,c
  3292  002574  0E00               	movlw	0
  3293  002576  6E10               	movwf	_isdigit$982,c
  3294  002578  0E3A               	movlw	58
  3295  00257A  6011               	cpfslt	isdigit@c,c
  3296  00257C  D005               	goto	l2455
  3297  00257E  0E2F               	movlw	47
  3298  002580  6411               	cpfsgt	isdigit@c,c
  3299  002582  D002               	goto	l2455
  3300  002584  0E01               	movlw	1
  3301  002586  6E10               	movwf	_isdigit$982,c
  3302  002588                     l2455:
  3303  002588  C010  F00F         	movff	_isdigit$982,??_isdigit
  3304  00258C  300F               	rrcf	??_isdigit,w,c
  3305  00258E  0012               	return	
  3306  002590                     __end_of_isdigit:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           indf2	equ	0xFDF
  3318                           postinc2	equ	0xFDE
  3319                           postdec2	equ	0xFDD
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _fround *****************
  3325 ;; Defined at:
  3326 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  prec            1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  prec            1   58[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  3   49[COMRAM] unsigned char 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3340 ;;      Params:         3       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3344 ;;Total ram usage:       10 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    3
  3347 ;; This function calls:
  3348 ;;		___awdiv
  3349 ;;		___awmod
  3350 ;;		___ftmul
  3351 ;;		___wmul
  3352 ;; This function is called by:
  3353 ;;		_sprintf
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text12
  3358  001480                     __ptext12:
  3359                           	opt stack 0
  3360  001480                     _fround:
  3361                           	opt stack 25
  3362                           
  3363                           ;incstack = 0
  3364                           ;fround@prec stored from wreg
  3365  001480  6E3B               	movwf	fround@prec,c
  3366                           
  3367                           ;doprnt.c: 413: if(prec>=110)
  3368  001482  0E6D               	movlw	109
  3369  001484  643B               	cpfsgt	fround@prec,c
  3370  001486  D09F               	goto	l2397
  3371                           
  3372                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3373  001488  0E00               	movlw	0
  3374  00148A  6E20               	movwf	___wmul@multiplicand+1,c
  3375  00148C  0E03               	movlw	3
  3376  00148E  6E1F               	movwf	___wmul@multiplicand,c
  3377  001490  0E00               	movlw	0
  3378  001492  6E18               	movwf	___awdiv@divisor+1,c
  3379  001494  0E0A               	movlw	10
  3380  001496  6E17               	movwf	___awdiv@divisor,c
  3381  001498  0E00               	movlw	0
  3382  00149A  6E12               	movwf	___awmod@divisor+1,c
  3383  00149C  0E64               	movlw	100
  3384  00149E  6E11               	movwf	___awmod@divisor,c
  3385  0014A0  C03B  F00F         	movff	fround@prec,___awmod@dividend
  3386  0014A4  6A10               	clrf	___awmod@dividend+1,c
  3387  0014A6  ECC8  F010         	call	___awmod	;wreg free
  3388  0014AA  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3389  0014AE  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3390  0014B2  EC04  F010         	call	___awdiv	;wreg free
  3391  0014B6  0E09               	movlw	9
  3392  0014B8  2415               	addwf	?___awdiv,w,c
  3393  0014BA  6E1D               	movwf	___wmul@multiplier,c
  3394  0014BC  0E00               	movlw	0
  3395  0014BE  2016               	addwfc	?___awdiv+1,w,c
  3396  0014C0  6E1E               	movwf	___wmul@multiplier+1,c
  3397  0014C2  EC62  F012         	call	___wmul	;wreg free
  3398  0014C6  0E50               	movlw	low __npowers_
  3399  0014C8  241D               	addwf	?___wmul,w,c
  3400  0014CA  6EF6               	movwf	tblptrl,c
  3401  0014CC  0E08               	movlw	high __npowers_
  3402  0014CE  201E               	addwfc	?___wmul+1,w,c
  3403  0014D0  6EF7               	movwf	tblptrh,c
  3404  0014D2                     	if	0	;There are less than 3 active tblptr bytes
  3405  0014D2                     	endif
  3406  0014D2  0009               	tblrd		*+
  3407  0014D4  CFF5 F026          	movff	tablat,___ftmul@f2
  3408  0014D8  0009               	tblrd		*+
  3409  0014DA  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3410  0014DE  000A               	tblrd		*-
  3411  0014E0  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3412  0014E4  0E00               	movlw	0
  3413  0014E6  6E18               	movwf	___awdiv@divisor+1,c
  3414  0014E8  0E64               	movlw	100
  3415  0014EA  6E17               	movwf	___awdiv@divisor,c
  3416  0014EC  C03B  F015         	movff	fround@prec,___awdiv@dividend
  3417  0014F0  6A16               	clrf	___awdiv@dividend+1,c
  3418  0014F2  EC04  F010         	call	___awdiv	;wreg free
  3419  0014F6  0E12               	movlw	18
  3420  0014F8  2415               	addwf	?___awdiv,w,c
  3421  0014FA  6E1D               	movwf	___wmul@multiplier,c
  3422  0014FC  0E00               	movlw	0
  3423  0014FE  2016               	addwfc	?___awdiv+1,w,c
  3424  001500  6E1E               	movwf	___wmul@multiplier+1,c
  3425  001502  0E00               	movlw	0
  3426  001504  6E20               	movwf	___wmul@multiplicand+1,c
  3427  001506  0E03               	movlw	3
  3428  001508  6E1F               	movwf	___wmul@multiplicand,c
  3429  00150A  EC62  F012         	call	___wmul	;wreg free
  3430  00150E  0E50               	movlw	low __npowers_
  3431  001510  241D               	addwf	?___wmul,w,c
  3432  001512  6EF6               	movwf	tblptrl,c
  3433  001514  0E08               	movlw	high __npowers_
  3434  001516  201E               	addwfc	?___wmul+1,w,c
  3435  001518  6EF7               	movwf	tblptrh,c
  3436  00151A                     	if	0	;There are less than 3 active tblptr bytes
  3437  00151A                     	endif
  3438  00151A  0009               	tblrd		*+
  3439  00151C  CFF5 F023          	movff	tablat,___ftmul@f1
  3440  001520  0009               	tblrd		*+
  3441  001522  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3442  001526  000A               	tblrd		*-
  3443  001528  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3444  00152C  EC66  F00D         	call	___ftmul	;wreg free
  3445  001530  C023  F038         	movff	?___ftmul,_fround$1316
  3446  001534  C024  F039         	movff	?___ftmul+1,_fround$1316+1
  3447  001538  C025  F03A         	movff	?___ftmul+2,_fround$1316+2
  3448                           
  3449                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3450  00153C  0E00               	movlw	0
  3451  00153E  6E20               	movwf	___wmul@multiplicand+1,c
  3452  001540  0E03               	movlw	3
  3453  001542  6E1F               	movwf	___wmul@multiplicand,c
  3454  001544  0E00               	movlw	0
  3455  001546  6E12               	movwf	___awmod@divisor+1,c
  3456  001548  0E0A               	movlw	10
  3457  00154A  6E11               	movwf	___awmod@divisor,c
  3458  00154C  C03B  F00F         	movff	fround@prec,___awmod@dividend
  3459  001550  6A10               	clrf	___awmod@dividend+1,c
  3460  001552  ECC8  F010         	call	___awmod	;wreg free
  3461  001556  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  3462  00155A  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  3463  00155E  EC62  F012         	call	___wmul	;wreg free
  3464  001562  0E50               	movlw	low __npowers_
  3465  001564  241D               	addwf	?___wmul,w,c
  3466  001566  6EF6               	movwf	tblptrl,c
  3467  001568  0E08               	movlw	high __npowers_
  3468  00156A  201E               	addwfc	?___wmul+1,w,c
  3469  00156C  6EF7               	movwf	tblptrh,c
  3470  00156E                     	if	0	;There are less than 3 active tblptr bytes
  3471  00156E                     	endif
  3472  00156E  0009               	tblrd		*+
  3473  001570  CFF5 F026          	movff	tablat,___ftmul@f2
  3474  001574  0009               	tblrd		*+
  3475  001576  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3476  00157A  000A               	tblrd		*-
  3477  00157C  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3478  001580  C038  F023         	movff	_fround$1316,___ftmul@f1
  3479  001584  C039  F024         	movff	_fround$1316+1,___ftmul@f1+1
  3480  001588  C03A  F025         	movff	_fround$1316+2,___ftmul@f1+2
  3481  00158C  EC66  F00D         	call	___ftmul	;wreg free
  3482  001590  C023  F035         	movff	?___ftmul,_fround$1317
  3483  001594  C024  F036         	movff	?___ftmul+1,_fround$1317+1
  3484  001598  C025  F037         	movff	?___ftmul+2,_fround$1317+2
  3485                           
  3486                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3487  00159C  C035  F023         	movff	_fround$1317,___ftmul@f1
  3488  0015A0  C036  F024         	movff	_fround$1317+1,___ftmul@f1+1
  3489  0015A4  C037  F025         	movff	_fround$1317+2,___ftmul@f1+2
  3490  0015A8  0E00               	movlw	0
  3491  0015AA  6E26               	movwf	___ftmul@f2,c
  3492  0015AC  0E00               	movlw	0
  3493  0015AE  6E27               	movwf	___ftmul@f2+1,c
  3494  0015B0  0E3F               	movlw	63
  3495  0015B2  6E28               	movwf	___ftmul@f2+2,c
  3496  0015B4  EC66  F00D         	call	___ftmul	;wreg free
  3497  0015B8  C023  F032         	movff	?___ftmul,?_fround
  3498  0015BC  C024  F033         	movff	?___ftmul+1,?_fround+1
  3499  0015C0  C025  F034         	movff	?___ftmul+2,?_fround+2
  3500  0015C4  0012               	return	
  3501  0015C6                     l2397:
  3502                           
  3503                           ;doprnt.c: 415: else if(prec > 10)
  3504  0015C6  0E0A               	movlw	10
  3505  0015C8  643B               	cpfsgt	fround@prec,c
  3506  0015CA  D05D               	goto	l2405
  3507                           
  3508                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3509  0015CC  0E00               	movlw	0
  3510  0015CE  6E20               	movwf	___wmul@multiplicand+1,c
  3511  0015D0  0E03               	movlw	3
  3512  0015D2  6E1F               	movwf	___wmul@multiplicand,c
  3513  0015D4  0E00               	movlw	0
  3514  0015D6  6E12               	movwf	___awmod@divisor+1,c
  3515  0015D8  0E0A               	movlw	10
  3516  0015DA  6E11               	movwf	___awmod@divisor,c
  3517  0015DC  C03B  F00F         	movff	fround@prec,___awmod@dividend
  3518  0015E0  6A10               	clrf	___awmod@dividend+1,c
  3519  0015E2  ECC8  F010         	call	___awmod	;wreg free
  3520  0015E6  C00F  F01D         	movff	?___awmod,___wmul@multiplier
  3521  0015EA  C010  F01E         	movff	?___awmod+1,___wmul@multiplier+1
  3522  0015EE  EC62  F012         	call	___wmul	;wreg free
  3523  0015F2  0E50               	movlw	low __npowers_
  3524  0015F4  241D               	addwf	?___wmul,w,c
  3525  0015F6  6EF6               	movwf	tblptrl,c
  3526  0015F8  0E08               	movlw	high __npowers_
  3527  0015FA  201E               	addwfc	?___wmul+1,w,c
  3528  0015FC  6EF7               	movwf	tblptrh,c
  3529  0015FE                     	if	0	;There are less than 3 active tblptr bytes
  3530  0015FE                     	endif
  3531  0015FE  0009               	tblrd		*+
  3532  001600  CFF5 F026          	movff	tablat,___ftmul@f2
  3533  001604  0009               	tblrd		*+
  3534  001606  CFF5 F027          	movff	tablat,___ftmul@f2+1
  3535  00160A  000A               	tblrd		*-
  3536  00160C  CFF5 F028          	movff	tablat,___ftmul@f2+2
  3537  001610  0E00               	movlw	0
  3538  001612  6E18               	movwf	___awdiv@divisor+1,c
  3539  001614  0E0A               	movlw	10
  3540  001616  6E17               	movwf	___awdiv@divisor,c
  3541  001618  C03B  F015         	movff	fround@prec,___awdiv@dividend
  3542  00161C  6A16               	clrf	___awdiv@dividend+1,c
  3543  00161E  EC04  F010         	call	___awdiv	;wreg free
  3544  001622  0E09               	movlw	9
  3545  001624  2415               	addwf	?___awdiv,w,c
  3546  001626  6E1D               	movwf	___wmul@multiplier,c
  3547  001628  0E00               	movlw	0
  3548  00162A  2016               	addwfc	?___awdiv+1,w,c
  3549  00162C  6E1E               	movwf	___wmul@multiplier+1,c
  3550  00162E  0E00               	movlw	0
  3551  001630  6E20               	movwf	___wmul@multiplicand+1,c
  3552  001632  0E03               	movlw	3
  3553  001634  6E1F               	movwf	___wmul@multiplicand,c
  3554  001636  EC62  F012         	call	___wmul	;wreg free
  3555  00163A  0E50               	movlw	low __npowers_
  3556  00163C  241D               	addwf	?___wmul,w,c
  3557  00163E  6EF6               	movwf	tblptrl,c
  3558  001640  0E08               	movlw	high __npowers_
  3559  001642  201E               	addwfc	?___wmul+1,w,c
  3560  001644  6EF7               	movwf	tblptrh,c
  3561  001646                     	if	0	;There are less than 3 active tblptr bytes
  3562  001646                     	endif
  3563  001646  0009               	tblrd		*+
  3564  001648  CFF5 F023          	movff	tablat,___ftmul@f1
  3565  00164C  0009               	tblrd		*+
  3566  00164E  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3567  001652  000A               	tblrd		*-
  3568  001654  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3569  001658  EC66  F00D         	call	___ftmul	;wreg free
  3570  00165C  C023  F038         	movff	?___ftmul,_fround$1316
  3571  001660  C024  F039         	movff	?___ftmul+1,_fround$1316+1
  3572  001664  C025  F03A         	movff	?___ftmul+2,_fround$1316+2
  3573                           
  3574                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3575  001668  C038  F023         	movff	_fround$1316,___ftmul@f1
  3576  00166C  C039  F024         	movff	_fround$1316+1,___ftmul@f1+1
  3577  001670  C03A  F025         	movff	_fround$1316+2,___ftmul@f1+2
  3578  001674  0E00               	movlw	0
  3579  001676  6E26               	movwf	___ftmul@f2,c
  3580  001678  0E00               	movlw	0
  3581  00167A  6E27               	movwf	___ftmul@f2+1,c
  3582  00167C  0E3F               	movlw	63
  3583  00167E  6E28               	movwf	___ftmul@f2+2,c
  3584  001680  EC66  F00D         	call	___ftmul	;wreg free
  3585  001684  D799               	goto	L5
  3586  001686                     l2405:
  3587                           
  3588                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3589  001686  503B               	movf	fround@prec,w,c
  3590  001688  0D03               	mullw	3
  3591  00168A  0E50               	movlw	low __npowers_
  3592  00168C  24F3               	addwf	prodl,w,c
  3593  00168E  6EF6               	movwf	tblptrl,c
  3594  001690  0E08               	movlw	high __npowers_
  3595  001692  20F4               	addwfc	prodh,w,c
  3596  001694  6EF7               	movwf	tblptrh,c
  3597  001696                     	if	0	;There are less than 3 active tblptr bytes
  3598  001696                     	endif
  3599  001696  0009               	tblrd		*+
  3600  001698  CFF5 F023          	movff	tablat,___ftmul@f1
  3601  00169C  0009               	tblrd		*+
  3602  00169E  CFF5 F024          	movff	tablat,___ftmul@f1+1
  3603  0016A2  000A               	tblrd		*-
  3604  0016A4  CFF5 F025          	movff	tablat,___ftmul@f1+2
  3605  0016A8  0E00               	movlw	0
  3606  0016AA  6E26               	movwf	___ftmul@f2,c
  3607  0016AC  0E00               	movlw	0
  3608  0016AE  6E27               	movwf	___ftmul@f2+1,c
  3609  0016B0  0E3F               	movlw	63
  3610  0016B2  6E28               	movwf	___ftmul@f2+2,c
  3611  0016B4  EC66  F00D         	call	___ftmul	;wreg free
  3612  0016B8  C023  F032         	movff	?___ftmul,?_fround
  3613  0016BC  C024  F033         	movff	?___ftmul+1,?_fround+1
  3614  0016C0  C025  F034         	movff	?___ftmul+2,?_fround+2
  3615  0016C4  0012               	return	
  3616  0016C6                     __end_of_fround:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           intcon	equ	0xFF2
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           fsr2h	equ	0xFDA
  3631                           fsr2l	equ	0xFD9
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function ___wmul *****************
  3635 ;; Defined at:
  3636 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  multiplier      2   28[COMRAM] unsigned int 
  3639 ;;  multiplicand    2   30[COMRAM] unsigned int 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  product         2   32[COMRAM] unsigned int 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   28[COMRAM] unsigned int 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, prodl, prodh
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         4       0       0       0       0       0       0       0       0
  3652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3654 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3655 ;;Total ram usage:        6 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_fround
  3662 ;;		_scale
  3663 ;;		_sprintf
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text13
  3668  0024C4                     __ptext13:
  3669                           	opt stack 0
  3670  0024C4                     ___wmul:
  3671                           	opt stack 26
  3672                           
  3673                           ;incstack = 0
  3674  0024C4  501D               	movf	___wmul@multiplier,w,c
  3675  0024C6  021F               	mulwf	___wmul@multiplicand,c
  3676  0024C8  CFF3 F021          	movff	prodl,___wmul@product
  3677  0024CC  CFF4 F022          	movff	prodh,___wmul@product+1
  3678  0024D0  501D               	movf	___wmul@multiplier,w,c
  3679  0024D2  0220               	mulwf	___wmul@multiplicand+1,c
  3680  0024D4  50F3               	movf	prodl,w,c
  3681  0024D6  2622               	addwf	___wmul@product+1,f,c
  3682  0024D8  501E               	movf	___wmul@multiplier+1,w,c
  3683  0024DA  021F               	mulwf	___wmul@multiplicand,c
  3684  0024DC  50F3               	movf	prodl,w,c
  3685  0024DE  2622               	addwf	___wmul@product+1,f,c
  3686  0024E0  C021  F01D         	movff	___wmul@product,?___wmul
  3687  0024E4  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  3688  0024E8  0012               	return	
  3689  0024EA                     __end_of___wmul:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           indf2	equ	0xFDF
  3701                           postinc2	equ	0xFDE
  3702                           postdec2	equ	0xFDD
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function ___ftmul *****************
  3708 ;; Defined at:
  3709 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  f1              3   34[COMRAM] float 
  3712 ;;  f2              3   37[COMRAM] float 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  f3_as_produc    3   44[COMRAM] unsigned um
  3715 ;;  sign            1   48[COMRAM] unsigned char 
  3716 ;;  cntr            1   47[COMRAM] unsigned char 
  3717 ;;  exp             1   43[COMRAM] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  3   34[COMRAM] float 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3727 ;;      Params:         6       0       0       0       0       0       0       0       0
  3728 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3729 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3730 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:       15 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    2
  3734 ;; This function calls:
  3735 ;;		___ftpack
  3736 ;; This function is called by:
  3737 ;;		_WriteTemp
  3738 ;;		_fround
  3739 ;;		_scale
  3740 ;;		_sprintf
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text14
  3745  001ACC                     __ptext14:
  3746                           	opt stack 0
  3747  001ACC                     ___ftmul:
  3748                           	opt stack 25
  3749                           
  3750                           ;incstack = 0
  3751  001ACC  C025  F029         	movff	___ftmul@f1+2,??___ftmul
  3752  001AD0  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  3753  001AD2  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  3754  001AD4  3424               	rlcf	___ftmul@f1+1,w,c
  3755  001AD6  3629               	rlcf	??___ftmul& (0+255),f,c
  3756  001AD8  E301               	bnc	u1761
  3757  001ADA  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  3758  001ADC                     u1761:
  3759  001ADC  5029               	movf	??___ftmul,w,c
  3760  001ADE  6E2C               	movwf	___ftmul@exp,c
  3761  001AE0  502C               	movf	___ftmul@exp,w,c
  3762  001AE2  A4D8               	btfss	status,2,c
  3763  001AE4  D007               	goto	l2179
  3764  001AE6  0E00               	movlw	0
  3765  001AE8  6E23               	movwf	?___ftmul,c
  3766  001AEA  0E00               	movlw	0
  3767  001AEC  6E24               	movwf	?___ftmul+1,c
  3768  001AEE  0E00               	movlw	0
  3769  001AF0  6E25               	movwf	?___ftmul+2,c
  3770  001AF2  0012               	return	
  3771  001AF4                     l2179:
  3772  001AF4  C028  F029         	movff	___ftmul@f2+2,??___ftmul
  3773  001AF8  6A2A               	clrf	(??___ftmul+1)& (0+255),c
  3774  001AFA  6A2B               	clrf	(??___ftmul+2)& (0+255),c
  3775  001AFC  3427               	rlcf	___ftmul@f2+1,w,c
  3776  001AFE  3629               	rlcf	??___ftmul& (0+255),f,c
  3777  001B00  E301               	bnc	u1781
  3778  001B02  802A               	bsf	(??___ftmul+1)& (0+255),0,c
  3779  001B04                     u1781:
  3780  001B04  5029               	movf	??___ftmul,w,c
  3781  001B06  6E31               	movwf	___ftmul@sign,c
  3782  001B08  5031               	movf	___ftmul@sign,w,c
  3783  001B0A  A4D8               	btfss	status,2,c
  3784  001B0C  D007               	goto	l2185
  3785  001B0E  0E00               	movlw	0
  3786  001B10  6E23               	movwf	?___ftmul,c
  3787  001B12  0E00               	movlw	0
  3788  001B14  6E24               	movwf	?___ftmul+1,c
  3789  001B16  0E00               	movlw	0
  3790  001B18  6E25               	movwf	?___ftmul+2,c
  3791  001B1A  0012               	return	
  3792  001B1C                     l2185:
  3793  001B1C  5031               	movf	___ftmul@sign,w,c
  3794  001B1E  0F7B               	addlw	123
  3795  001B20  262C               	addwf	___ftmul@exp,f,c
  3796  001B22  C025  F031         	movff	___ftmul@f1+2,___ftmul@sign
  3797  001B26  5028               	movf	___ftmul@f2+2,w,c
  3798  001B28  1A31               	xorwf	___ftmul@sign,f,c
  3799  001B2A  0E80               	movlw	128
  3800  001B2C  1631               	andwf	___ftmul@sign,f,c
  3801  001B2E  8E24               	bsf	___ftmul@f1+1,7,c
  3802  001B30  8E27               	bsf	___ftmul@f2+1,7,c
  3803  001B32  0EFF               	movlw	255
  3804  001B34  1626               	andwf	___ftmul@f2,f,c
  3805  001B36  0EFF               	movlw	255
  3806  001B38  1627               	andwf	___ftmul@f2+1,f,c
  3807  001B3A  0E00               	movlw	0
  3808  001B3C  1628               	andwf	___ftmul@f2+2,f,c
  3809  001B3E  0E00               	movlw	0
  3810  001B40  6E2D               	movwf	___ftmul@f3_as_product,c
  3811  001B42  0E00               	movlw	0
  3812  001B44  6E2E               	movwf	___ftmul@f3_as_product+1,c
  3813  001B46  0E00               	movlw	0
  3814  001B48  6E2F               	movwf	___ftmul@f3_as_product+2,c
  3815  001B4A  0E07               	movlw	7
  3816  001B4C  6E30               	movwf	___ftmul@cntr,c
  3817  001B4E                     l2199:
  3818  001B4E  A023               	btfss	___ftmul@f1,0,c
  3819  001B50  D006               	goto	l2203
  3820  001B52  5026               	movf	___ftmul@f2,w,c
  3821  001B54  262D               	addwf	___ftmul@f3_as_product,f,c
  3822  001B56  5027               	movf	___ftmul@f2+1,w,c
  3823  001B58  222E               	addwfc	___ftmul@f3_as_product+1,f,c
  3824  001B5A  5028               	movf	___ftmul@f2+2,w,c
  3825  001B5C  222F               	addwfc	___ftmul@f3_as_product+2,f,c
  3826  001B5E                     l2203:
  3827  001B5E  90D8               	bcf	status,0,c
  3828  001B60  3225               	rrcf	___ftmul@f1+2,f,c
  3829  001B62  3224               	rrcf	___ftmul@f1+1,f,c
  3830  001B64  3223               	rrcf	___ftmul@f1,f,c
  3831  001B66  90D8               	bcf	status,0,c
  3832  001B68  3626               	rlcf	___ftmul@f2,f,c
  3833  001B6A  3627               	rlcf	___ftmul@f2+1,f,c
  3834  001B6C  3628               	rlcf	___ftmul@f2+2,f,c
  3835  001B6E  2E30               	decfsz	___ftmul@cntr,f,c
  3836  001B70  D7EE               	goto	l2199
  3837  001B72  0E09               	movlw	9
  3838  001B74  6E30               	movwf	___ftmul@cntr,c
  3839  001B76                     l2209:
  3840  001B76  A023               	btfss	___ftmul@f1,0,c
  3841  001B78  D006               	goto	l2213
  3842  001B7A  5026               	movf	___ftmul@f2,w,c
  3843  001B7C  262D               	addwf	___ftmul@f3_as_product,f,c
  3844  001B7E  5027               	movf	___ftmul@f2+1,w,c
  3845  001B80  222E               	addwfc	___ftmul@f3_as_product+1,f,c
  3846  001B82  5028               	movf	___ftmul@f2+2,w,c
  3847  001B84  222F               	addwfc	___ftmul@f3_as_product+2,f,c
  3848  001B86                     l2213:
  3849  001B86  90D8               	bcf	status,0,c
  3850  001B88  3225               	rrcf	___ftmul@f1+2,f,c
  3851  001B8A  3224               	rrcf	___ftmul@f1+1,f,c
  3852  001B8C  3223               	rrcf	___ftmul@f1,f,c
  3853  001B8E  90D8               	bcf	status,0,c
  3854  001B90  322F               	rrcf	___ftmul@f3_as_product+2,f,c
  3855  001B92  322E               	rrcf	___ftmul@f3_as_product+1,f,c
  3856  001B94  322D               	rrcf	___ftmul@f3_as_product,f,c
  3857  001B96  2E30               	decfsz	___ftmul@cntr,f,c
  3858  001B98  D7EE               	goto	l2209
  3859  001B9A  C02D  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  3860  001B9E  C02E  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3861  001BA2  C02F  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3862  001BA6  C02C  F012         	movff	___ftmul@exp,___ftpack@exp
  3863  001BAA  C031  F013         	movff	___ftmul@sign,___ftpack@sign
  3864  001BAE  ECCD  F00E         	call	___ftpack	;wreg free
  3865  001BB2  C00F  F023         	movff	?___ftpack,?___ftmul
  3866  001BB6  C010  F024         	movff	?___ftpack+1,?___ftmul+1
  3867  001BBA  C011  F025         	movff	?___ftpack+2,?___ftmul+2
  3868  001BBE  0012               	return	
  3869  001BC0                     __end_of___ftmul:
  3870                           	opt stack 0
  3871                           tblptru	equ	0xFF8
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           prodh	equ	0xFF4
  3876                           prodl	equ	0xFF3
  3877                           intcon	equ	0xFF2
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           postdec2	equ	0xFDD
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function ___awmod *****************
  3888 ;; Defined at:
  3889 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  dividend        2   14[COMRAM] int 
  3892 ;;  divisor         2   16[COMRAM] int 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  sign            1   19[COMRAM] unsigned char 
  3895 ;;  counter         1   18[COMRAM] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2   14[COMRAM] int 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3905 ;;      Params:         4       0       0       0       0       0       0       0       0
  3906 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3908 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3909 ;;Total ram usage:        6 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_fround
  3916 ;;		_scale
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text15
  3921  002190                     __ptext15:
  3922                           	opt stack 0
  3923  002190                     ___awmod:
  3924                           	opt stack 26
  3925                           
  3926                           ;incstack = 0
  3927  002190  0E00               	movlw	0
  3928  002192  6E14               	movwf	___awmod@sign,c
  3929  002194  AE10               	btfss	___awmod@dividend+1,7,c
  3930  002196  D006               	goto	l2273
  3931  002198  6C0F               	negf	___awmod@dividend,c
  3932  00219A  1E10               	comf	___awmod@dividend+1,f,c
  3933  00219C  B0D8               	btfsc	status,0,c
  3934  00219E  2A10               	incf	___awmod@dividend+1,f,c
  3935  0021A0  0E01               	movlw	1
  3936  0021A2  6E14               	movwf	___awmod@sign,c
  3937  0021A4                     l2273:
  3938  0021A4  AE12               	btfss	___awmod@divisor+1,7,c
  3939  0021A6  D004               	goto	l2277
  3940  0021A8  6C11               	negf	___awmod@divisor,c
  3941  0021AA  1E12               	comf	___awmod@divisor+1,f,c
  3942  0021AC  B0D8               	btfsc	status,0,c
  3943  0021AE  2A12               	incf	___awmod@divisor+1,f,c
  3944  0021B0                     l2277:
  3945  0021B0  5011               	movf	___awmod@divisor,w,c
  3946  0021B2  1012               	iorwf	___awmod@divisor+1,w,c
  3947  0021B4  B4D8               	btfsc	status,2,c
  3948  0021B6  D018               	goto	l2293
  3949  0021B8  0E01               	movlw	1
  3950  0021BA  6E13               	movwf	___awmod@counter,c
  3951  0021BC  D004               	goto	l2283
  3952  0021BE                     l2281:
  3953  0021BE  90D8               	bcf	status,0,c
  3954  0021C0  3611               	rlcf	___awmod@divisor,f,c
  3955  0021C2  3612               	rlcf	___awmod@divisor+1,f,c
  3956  0021C4  2A13               	incf	___awmod@counter,f,c
  3957  0021C6                     l2283:
  3958  0021C6  AE12               	btfss	___awmod@divisor+1,7,c
  3959  0021C8  D7FA               	goto	l2281
  3960  0021CA                     l2285:
  3961  0021CA  5011               	movf	___awmod@divisor,w,c
  3962  0021CC  5C0F               	subwf	___awmod@dividend,w,c
  3963  0021CE  5012               	movf	___awmod@divisor+1,w,c
  3964  0021D0  5810               	subwfb	___awmod@dividend+1,w,c
  3965  0021D2  A0D8               	btfss	status,0,c
  3966  0021D4  D004               	goto	l2289
  3967  0021D6  5011               	movf	___awmod@divisor,w,c
  3968  0021D8  5E0F               	subwf	___awmod@dividend,f,c
  3969  0021DA  5012               	movf	___awmod@divisor+1,w,c
  3970  0021DC  5A10               	subwfb	___awmod@dividend+1,f,c
  3971  0021DE                     l2289:
  3972  0021DE  90D8               	bcf	status,0,c
  3973  0021E0  3212               	rrcf	___awmod@divisor+1,f,c
  3974  0021E2  3211               	rrcf	___awmod@divisor,f,c
  3975  0021E4  2E13               	decfsz	___awmod@counter,f,c
  3976  0021E6  D7F1               	goto	l2285
  3977  0021E8                     l2293:
  3978  0021E8  5014               	movf	___awmod@sign,w,c
  3979  0021EA  B4D8               	btfsc	status,2,c
  3980  0021EC  D004               	goto	l2297
  3981  0021EE  6C0F               	negf	___awmod@dividend,c
  3982  0021F0  1E10               	comf	___awmod@dividend+1,f,c
  3983  0021F2  B0D8               	btfsc	status,0,c
  3984  0021F4  2A10               	incf	___awmod@dividend+1,f,c
  3985  0021F6                     l2297:
  3986  0021F6  C00F  F00F         	movff	___awmod@dividend,?___awmod
  3987  0021FA  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  3988  0021FE  0012               	return	
  3989  002200                     __end_of___awmod:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           prodh	equ	0xFF4
  3996                           prodl	equ	0xFF3
  3997                           intcon	equ	0xFF2
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           postdec2	equ	0xFDD
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           status	equ	0xFD8
  4006                           
  4007 ;; *************** function ___awdiv *****************
  4008 ;; Defined at:
  4009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  dividend        2   20[COMRAM] int 
  4012 ;;  divisor         2   22[COMRAM] int 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  quotient        2   26[COMRAM] int 
  4015 ;;  sign            1   25[COMRAM] unsigned char 
  4016 ;;  counter         1   24[COMRAM] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2   20[COMRAM] int 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4026 ;;      Params:         4       0       0       0       0       0       0       0       0
  4027 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4029 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        8 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    1
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_fround
  4037 ;;		_scale
  4038 ;;		_sprintf
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text16
  4043  002008                     __ptext16:
  4044                           	opt stack 0
  4045  002008                     ___awdiv:
  4046                           	opt stack 26
  4047                           
  4048                           ;incstack = 0
  4049  002008  0E00               	movlw	0
  4050  00200A  6E1A               	movwf	___awdiv@sign,c
  4051  00200C  AE18               	btfss	___awdiv@divisor+1,7,c
  4052  00200E  D006               	goto	l2229
  4053  002010  6C17               	negf	___awdiv@divisor,c
  4054  002012  1E18               	comf	___awdiv@divisor+1,f,c
  4055  002014  B0D8               	btfsc	status,0,c
  4056  002016  2A18               	incf	___awdiv@divisor+1,f,c
  4057  002018  0E01               	movlw	1
  4058  00201A  6E1A               	movwf	___awdiv@sign,c
  4059  00201C                     l2229:
  4060  00201C  AE16               	btfss	___awdiv@dividend+1,7,c
  4061  00201E  D006               	goto	l2235
  4062  002020  6C15               	negf	___awdiv@dividend,c
  4063  002022  1E16               	comf	___awdiv@dividend+1,f,c
  4064  002024  B0D8               	btfsc	status,0,c
  4065  002026  2A16               	incf	___awdiv@dividend+1,f,c
  4066  002028  0E01               	movlw	1
  4067  00202A  1A1A               	xorwf	___awdiv@sign,f,c
  4068  00202C                     l2235:
  4069  00202C  0E00               	movlw	0
  4070  00202E  6E1C               	movwf	___awdiv@quotient+1,c
  4071  002030  0E00               	movlw	0
  4072  002032  6E1B               	movwf	___awdiv@quotient,c
  4073  002034  5017               	movf	___awdiv@divisor,w,c
  4074  002036  1018               	iorwf	___awdiv@divisor+1,w,c
  4075  002038  B4D8               	btfsc	status,2,c
  4076  00203A  D01C               	goto	l2257
  4077  00203C  0E01               	movlw	1
  4078  00203E  6E19               	movwf	___awdiv@counter,c
  4079  002040  D004               	goto	l2243
  4080  002042                     l2241:
  4081  002042  90D8               	bcf	status,0,c
  4082  002044  3617               	rlcf	___awdiv@divisor,f,c
  4083  002046  3618               	rlcf	___awdiv@divisor+1,f,c
  4084  002048  2A19               	incf	___awdiv@counter,f,c
  4085  00204A                     l2243:
  4086  00204A  AE18               	btfss	___awdiv@divisor+1,7,c
  4087  00204C  D7FA               	goto	l2241
  4088  00204E                     l2245:
  4089  00204E  90D8               	bcf	status,0,c
  4090  002050  361B               	rlcf	___awdiv@quotient,f,c
  4091  002052  361C               	rlcf	___awdiv@quotient+1,f,c
  4092  002054  5017               	movf	___awdiv@divisor,w,c
  4093  002056  5C15               	subwf	___awdiv@dividend,w,c
  4094  002058  5018               	movf	___awdiv@divisor+1,w,c
  4095  00205A  5816               	subwfb	___awdiv@dividend+1,w,c
  4096  00205C  A0D8               	btfss	status,0,c
  4097  00205E  D005               	goto	l2253
  4098  002060  5017               	movf	___awdiv@divisor,w,c
  4099  002062  5E15               	subwf	___awdiv@dividend,f,c
  4100  002064  5018               	movf	___awdiv@divisor+1,w,c
  4101  002066  5A16               	subwfb	___awdiv@dividend+1,f,c
  4102  002068  801B               	bsf	___awdiv@quotient,0,c
  4103  00206A                     l2253:
  4104  00206A  90D8               	bcf	status,0,c
  4105  00206C  3218               	rrcf	___awdiv@divisor+1,f,c
  4106  00206E  3217               	rrcf	___awdiv@divisor,f,c
  4107  002070  2E19               	decfsz	___awdiv@counter,f,c
  4108  002072  D7ED               	goto	l2245
  4109  002074                     l2257:
  4110  002074  501A               	movf	___awdiv@sign,w,c
  4111  002076  B4D8               	btfsc	status,2,c
  4112  002078  D004               	goto	l2261
  4113  00207A  6C1B               	negf	___awdiv@quotient,c
  4114  00207C  1E1C               	comf	___awdiv@quotient+1,f,c
  4115  00207E  B0D8               	btfsc	status,0,c
  4116  002080  2A1C               	incf	___awdiv@quotient+1,f,c
  4117  002082                     l2261:
  4118  002082  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  4119  002086  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  4120  00208A  0012               	return	
  4121  00208C                     __end_of___awdiv:
  4122                           	opt stack 0
  4123                           tblptru	equ	0xFF8
  4124                           tblptrh	equ	0xFF7
  4125                           tblptrl	equ	0xFF6
  4126                           tablat	equ	0xFF5
  4127                           prodh	equ	0xFF4
  4128                           prodl	equ	0xFF3
  4129                           intcon	equ	0xFF2
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           indf2	equ	0xFDF
  4133                           postinc2	equ	0xFDE
  4134                           postdec2	equ	0xFDD
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8
  4138                           
  4139 ;; *************** function __tdiv_to_l_ *****************
  4140 ;; Defined at:
  4141 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdivl.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  f1              3   14[COMRAM] float 
  4144 ;;  f2              3   17[COMRAM] float 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  quot            4   23[COMRAM] unsigned long 
  4147 ;;  exp1            1   28[COMRAM] unsigned char 
  4148 ;;  cntr            1   27[COMRAM] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  4   14[COMRAM] unsigned long 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         6       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4161 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:       15 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    1
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_sprintf
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text17
  4173  001872                     __ptext17:
  4174                           	opt stack 0
  4175  001872                     __tdiv_to_l_:
  4176                           	opt stack 27
  4177                           
  4178                           ;incstack = 0
  4179  001872  C011  F015         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4180  001876  6A16               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4181  001878  6A17               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4182  00187A  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  4183  00187C  3615               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4184  00187E  E301               	bnc	u2051
  4185  001880  8016               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4186  001882                     u2051:
  4187  001882  5015               	movf	??__tdiv_to_l_,w,c
  4188  001884  6E1D               	movwf	__tdiv_to_l_@exp1,c
  4189  001886  501D               	movf	__tdiv_to_l_@exp1,w,c
  4190  001888  A4D8               	btfss	status,2,c
  4191  00188A  D009               	goto	l2465
  4192  00188C  0E00               	movlw	0
  4193  00188E  6E0F               	movwf	?__tdiv_to_l_,c
  4194  001890  0E00               	movlw	0
  4195  001892  6E10               	movwf	?__tdiv_to_l_+1,c
  4196  001894  0E00               	movlw	0
  4197  001896  6E11               	movwf	?__tdiv_to_l_+2,c
  4198  001898  0E00               	movlw	0
  4199  00189A  6E12               	movwf	?__tdiv_to_l_+3,c
  4200  00189C  0012               	return	
  4201  00189E                     l2465:
  4202  00189E  C014  F015         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4203  0018A2  6A16               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4204  0018A4  6A17               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4205  0018A6  3413               	rlcf	__tdiv_to_l_@f2+1,w,c
  4206  0018A8  3615               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4207  0018AA  E301               	bnc	u2071
  4208  0018AC  8016               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4209  0018AE                     u2071:
  4210  0018AE  5015               	movf	??__tdiv_to_l_,w,c
  4211  0018B0  6E1C               	movwf	__tdiv_to_l_@cntr,c
  4212  0018B2  501C               	movf	__tdiv_to_l_@cntr,w,c
  4213  0018B4  A4D8               	btfss	status,2,c
  4214  0018B6  D009               	goto	l2471
  4215  0018B8  0E00               	movlw	0
  4216  0018BA  6E0F               	movwf	?__tdiv_to_l_,c
  4217  0018BC  0E00               	movlw	0
  4218  0018BE  6E10               	movwf	?__tdiv_to_l_+1,c
  4219  0018C0  0E00               	movlw	0
  4220  0018C2  6E11               	movwf	?__tdiv_to_l_+2,c
  4221  0018C4  0E00               	movlw	0
  4222  0018C6  6E12               	movwf	?__tdiv_to_l_+3,c
  4223  0018C8  0012               	return	
  4224  0018CA                     l2471:
  4225  0018CA  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  4226  0018CC  0EFF               	movlw	255
  4227  0018CE  160F               	andwf	__tdiv_to_l_@f1,f,c
  4228  0018D0  0EFF               	movlw	255
  4229  0018D2  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  4230  0018D4  0E00               	movlw	0
  4231  0018D6  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  4232  0018D8  8E13               	bsf	__tdiv_to_l_@f2+1,7,c
  4233  0018DA  0EFF               	movlw	255
  4234  0018DC  1612               	andwf	__tdiv_to_l_@f2,f,c
  4235  0018DE  0EFF               	movlw	255
  4236  0018E0  1613               	andwf	__tdiv_to_l_@f2+1,f,c
  4237  0018E2  0E00               	movlw	0
  4238  0018E4  1614               	andwf	__tdiv_to_l_@f2+2,f,c
  4239  0018E6  0E00               	movlw	0
  4240  0018E8  6E18               	movwf	__tdiv_to_l_@quot,c
  4241  0018EA  0E00               	movlw	0
  4242  0018EC  6E19               	movwf	__tdiv_to_l_@quot+1,c
  4243  0018EE  0E00               	movlw	0
  4244  0018F0  6E1A               	movwf	__tdiv_to_l_@quot+2,c
  4245  0018F2  0E00               	movlw	0
  4246  0018F4  6E1B               	movwf	__tdiv_to_l_@quot+3,c
  4247  0018F6  0E7F               	movlw	127
  4248  0018F8  5E1D               	subwf	__tdiv_to_l_@exp1,f,c
  4249  0018FA  501C               	movf	__tdiv_to_l_@cntr,w,c
  4250  0018FC  0F98               	addlw	152
  4251  0018FE  5E1D               	subwf	__tdiv_to_l_@exp1,f,c
  4252  001900  0E18               	movlw	24
  4253  001902  6E1C               	movwf	__tdiv_to_l_@cntr,c
  4254  001904                     l599:
  4255  001904  90D8               	bcf	status,0,c
  4256  001906  3618               	rlcf	__tdiv_to_l_@quot,f,c
  4257  001908  3619               	rlcf	__tdiv_to_l_@quot+1,f,c
  4258  00190A  361A               	rlcf	__tdiv_to_l_@quot+2,f,c
  4259  00190C  361B               	rlcf	__tdiv_to_l_@quot+3,f,c
  4260  00190E  5012               	movf	__tdiv_to_l_@f2,w,c
  4261  001910  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  4262  001912  5013               	movf	__tdiv_to_l_@f2+1,w,c
  4263  001914  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  4264  001916  5014               	movf	__tdiv_to_l_@f2+2,w,c
  4265  001918  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  4266  00191A  A0D8               	btfss	status,0,c
  4267  00191C  D007               	goto	l600
  4268  00191E  5012               	movf	__tdiv_to_l_@f2,w,c
  4269  001920  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  4270  001922  5013               	movf	__tdiv_to_l_@f2+1,w,c
  4271  001924  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  4272  001926  5014               	movf	__tdiv_to_l_@f2+2,w,c
  4273  001928  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  4274  00192A  8018               	bsf	__tdiv_to_l_@quot,0,c
  4275  00192C                     l600:
  4276  00192C  90D8               	bcf	status,0,c
  4277  00192E  360F               	rlcf	__tdiv_to_l_@f1,f,c
  4278  001930  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  4279  001932  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  4280  001934  2E1C               	decfsz	__tdiv_to_l_@cntr,f,c
  4281  001936  D7E6               	goto	l599
  4282  001938  AE1D               	btfss	__tdiv_to_l_@exp1,7,c
  4283  00193A  D016               	goto	l2505
  4284  00193C  501D               	movf	__tdiv_to_l_@exp1,w,c
  4285  00193E  0A80               	xorlw	128
  4286  001940  0F97               	addlw	151
  4287  001942  B0D8               	btfsc	status,0,c
  4288  001944  D009               	goto	l2501
  4289  001946  0E00               	movlw	0
  4290  001948  6E0F               	movwf	?__tdiv_to_l_,c
  4291  00194A  0E00               	movlw	0
  4292  00194C  6E10               	movwf	?__tdiv_to_l_+1,c
  4293  00194E  0E00               	movlw	0
  4294  001950  6E11               	movwf	?__tdiv_to_l_+2,c
  4295  001952  0E00               	movlw	0
  4296  001954  6E12               	movwf	?__tdiv_to_l_+3,c
  4297  001956  0012               	return	
  4298  001958                     l2501:
  4299  001958  90D8               	bcf	status,0,c
  4300  00195A  321B               	rrcf	__tdiv_to_l_@quot+3,f,c
  4301  00195C  321A               	rrcf	__tdiv_to_l_@quot+2,f,c
  4302  00195E  3219               	rrcf	__tdiv_to_l_@quot+1,f,c
  4303  001960  3218               	rrcf	__tdiv_to_l_@quot,f,c
  4304  001962  3E1D               	incfsz	__tdiv_to_l_@exp1,f,c
  4305  001964  D7F9               	goto	l2501
  4306  001966  D015               	goto	l606
  4307  001968                     l2505:
  4308  001968  0E17               	movlw	23
  4309  00196A  641D               	cpfsgt	__tdiv_to_l_@exp1,c
  4310  00196C  D00F               	goto	l2513
  4311  00196E  0E00               	movlw	0
  4312  001970  6E0F               	movwf	?__tdiv_to_l_,c
  4313  001972  0E00               	movlw	0
  4314  001974  6E10               	movwf	?__tdiv_to_l_+1,c
  4315  001976  0E00               	movlw	0
  4316  001978  6E11               	movwf	?__tdiv_to_l_+2,c
  4317  00197A  0E00               	movlw	0
  4318  00197C  6E12               	movwf	?__tdiv_to_l_+3,c
  4319  00197E  0012               	return	
  4320  001980                     l2511:
  4321  001980  90D8               	bcf	status,0,c
  4322  001982  3618               	rlcf	__tdiv_to_l_@quot,f,c
  4323  001984  3619               	rlcf	__tdiv_to_l_@quot+1,f,c
  4324  001986  361A               	rlcf	__tdiv_to_l_@quot+2,f,c
  4325  001988  361B               	rlcf	__tdiv_to_l_@quot+3,f,c
  4326  00198A  061D               	decf	__tdiv_to_l_@exp1,f,c
  4327  00198C                     l2513:
  4328  00198C  501D               	movf	__tdiv_to_l_@exp1,w,c
  4329  00198E  A4D8               	btfss	status,2,c
  4330  001990  D7F7               	goto	l2511
  4331  001992                     l606:
  4332  001992  C018  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4333  001996  C019  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4334  00199A  C01A  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4335  00199E  C01B  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4336  0019A2  0012               	return		;funcret
  4337  0019A4                     __end_of__tdiv_to_l_:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           indf2	equ	0xFDF
  4349                           postinc2	equ	0xFDE
  4350                           postdec2	equ	0xFDD
  4351                           fsr2h	equ	0xFDA
  4352                           fsr2l	equ	0xFD9
  4353                           status	equ	0xFD8
  4354                           
  4355 ;; *************** function __div_to_l_ *****************
  4356 ;; Defined at:
  4357 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fldivl.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  f1              3   14[COMRAM] unsigned long 
  4360 ;;  f2              3   17[COMRAM] unsigned long 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  quot            4   20[COMRAM] unsigned long 
  4363 ;;  exp1            1   25[COMRAM] unsigned char 
  4364 ;;  cntr            1   24[COMRAM] unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  4   14[COMRAM] unsigned long 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4374 ;;      Params:         6       0       0       0       0       0       0       0       0
  4375 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4377 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4378 ;;Total ram usage:       12 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    1
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_sprintf
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text18
  4389  0019A4                     __ptext18:
  4390                           	opt stack 0
  4391  0019A4                     __div_to_l_:
  4392                           	opt stack 27
  4393                           
  4394                           ;incstack = 0
  4395  0019A4  3411               	rlcf	__div_to_l_@f1+2,w,c
  4396  0019A6  3412               	rlcf	__div_to_l_@f1+3,w,c
  4397  0019A8  6E1A               	movwf	__div_to_l_@exp1,c
  4398  0019AA  501A               	movf	__div_to_l_@exp1,w,c
  4399  0019AC  A4D8               	btfss	status,2,c
  4400  0019AE  D009               	goto	l2521
  4401  0019B0  0E00               	movlw	0
  4402  0019B2  6E0F               	movwf	?__div_to_l_,c
  4403  0019B4  0E00               	movlw	0
  4404  0019B6  6E10               	movwf	?__div_to_l_+1,c
  4405  0019B8  0E00               	movlw	0
  4406  0019BA  6E11               	movwf	?__div_to_l_+2,c
  4407  0019BC  0E00               	movlw	0
  4408  0019BE  6E12               	movwf	?__div_to_l_+3,c
  4409  0019C0  0012               	return	
  4410  0019C2                     l2521:
  4411  0019C2  3414               	rlcf	__div_to_l_@f2+2,w,c
  4412  0019C4  3415               	rlcf	__div_to_l_@f2+3,w,c
  4413  0019C6  6E19               	movwf	__div_to_l_@cntr,c
  4414  0019C8  5019               	movf	__div_to_l_@cntr,w,c
  4415  0019CA  A4D8               	btfss	status,2,c
  4416  0019CC  D009               	goto	l2527
  4417  0019CE  0E00               	movlw	0
  4418  0019D0  6E0F               	movwf	?__div_to_l_,c
  4419  0019D2  0E00               	movlw	0
  4420  0019D4  6E10               	movwf	?__div_to_l_+1,c
  4421  0019D6  0E00               	movlw	0
  4422  0019D8  6E11               	movwf	?__div_to_l_+2,c
  4423  0019DA  0E00               	movlw	0
  4424  0019DC  6E12               	movwf	?__div_to_l_+3,c
  4425  0019DE  0012               	return	
  4426  0019E0                     l2527:
  4427  0019E0  8E11               	bsf	__div_to_l_@f1+2,7,c
  4428  0019E2  0EFF               	movlw	255
  4429  0019E4  160F               	andwf	__div_to_l_@f1,f,c
  4430  0019E6  0EFF               	movlw	255
  4431  0019E8  1610               	andwf	__div_to_l_@f1+1,f,c
  4432  0019EA  0EFF               	movlw	255
  4433  0019EC  1611               	andwf	__div_to_l_@f1+2,f,c
  4434  0019EE  0E00               	movlw	0
  4435  0019F0  1612               	andwf	__div_to_l_@f1+3,f,c
  4436  0019F2  8E14               	bsf	__div_to_l_@f2+2,7,c
  4437  0019F4  0EFF               	movlw	255
  4438  0019F6  1612               	andwf	__div_to_l_@f2,f,c
  4439  0019F8  0EFF               	movlw	255
  4440  0019FA  1613               	andwf	__div_to_l_@f2+1,f,c
  4441  0019FC  0EFF               	movlw	255
  4442  0019FE  1614               	andwf	__div_to_l_@f2+2,f,c
  4443  001A00  0E00               	movlw	0
  4444  001A02  1615               	andwf	__div_to_l_@f2+3,f,c
  4445  001A04  0E00               	movlw	0
  4446  001A06  6E15               	movwf	__div_to_l_@quot,c
  4447  001A08  0E00               	movlw	0
  4448  001A0A  6E16               	movwf	__div_to_l_@quot+1,c
  4449  001A0C  0E00               	movlw	0
  4450  001A0E  6E17               	movwf	__div_to_l_@quot+2,c
  4451  001A10  0E00               	movlw	0
  4452  001A12  6E18               	movwf	__div_to_l_@quot+3,c
  4453  001A14  0E7F               	movlw	127
  4454  001A16  5E1A               	subwf	__div_to_l_@exp1,f,c
  4455  001A18  5019               	movf	__div_to_l_@cntr,w,c
  4456  001A1A  0FA0               	addlw	160
  4457  001A1C  5E1A               	subwf	__div_to_l_@exp1,f,c
  4458  001A1E  0E20               	movlw	32
  4459  001A20  6E19               	movwf	__div_to_l_@cntr,c
  4460  001A22                     l2541:
  4461  001A22  90D8               	bcf	status,0,c
  4462  001A24  3615               	rlcf	__div_to_l_@quot,f,c
  4463  001A26  3616               	rlcf	__div_to_l_@quot+1,f,c
  4464  001A28  3617               	rlcf	__div_to_l_@quot+2,f,c
  4465  001A2A  3618               	rlcf	__div_to_l_@quot+3,f,c
  4466  001A2C  5012               	movf	__div_to_l_@f2,w,c
  4467  001A2E  5C0F               	subwf	__div_to_l_@f1,w,c
  4468  001A30  5013               	movf	__div_to_l_@f2+1,w,c
  4469  001A32  5810               	subwfb	__div_to_l_@f1+1,w,c
  4470  001A34  5014               	movf	__div_to_l_@f2+2,w,c
  4471  001A36  5811               	subwfb	__div_to_l_@f1+2,w,c
  4472  001A38  5015               	movf	__div_to_l_@f2+3,w,c
  4473  001A3A  5812               	subwfb	__div_to_l_@f1+3,w,c
  4474  001A3C  A0D8               	btfss	status,0,c
  4475  001A3E  D009               	goto	l2549
  4476  001A40  5012               	movf	__div_to_l_@f2,w,c
  4477  001A42  5E0F               	subwf	__div_to_l_@f1,f,c
  4478  001A44  5013               	movf	__div_to_l_@f2+1,w,c
  4479  001A46  5A10               	subwfb	__div_to_l_@f1+1,f,c
  4480  001A48  5014               	movf	__div_to_l_@f2+2,w,c
  4481  001A4A  5A11               	subwfb	__div_to_l_@f1+2,f,c
  4482  001A4C  5015               	movf	__div_to_l_@f2+3,w,c
  4483  001A4E  5A12               	subwfb	__div_to_l_@f1+3,f,c
  4484  001A50  8015               	bsf	__div_to_l_@quot,0,c
  4485  001A52                     l2549:
  4486  001A52  90D8               	bcf	status,0,c
  4487  001A54  360F               	rlcf	__div_to_l_@f1,f,c
  4488  001A56  3610               	rlcf	__div_to_l_@f1+1,f,c
  4489  001A58  3611               	rlcf	__div_to_l_@f1+2,f,c
  4490  001A5A  3612               	rlcf	__div_to_l_@f1+3,f,c
  4491  001A5C  2E19               	decfsz	__div_to_l_@cntr,f,c
  4492  001A5E  D7E1               	goto	l2541
  4493  001A60  AE1A               	btfss	__div_to_l_@exp1,7,c
  4494  001A62  D016               	goto	l2565
  4495  001A64  501A               	movf	__div_to_l_@exp1,w,c
  4496  001A66  0A80               	xorlw	128
  4497  001A68  0F9F               	addlw	159
  4498  001A6A  B0D8               	btfsc	status,0,c
  4499  001A6C  D009               	goto	l2561
  4500  001A6E  0E00               	movlw	0
  4501  001A70  6E0F               	movwf	?__div_to_l_,c
  4502  001A72  0E00               	movlw	0
  4503  001A74  6E10               	movwf	?__div_to_l_+1,c
  4504  001A76  0E00               	movlw	0
  4505  001A78  6E11               	movwf	?__div_to_l_+2,c
  4506  001A7A  0E00               	movlw	0
  4507  001A7C  6E12               	movwf	?__div_to_l_+3,c
  4508  001A7E  0012               	return	
  4509  001A80                     l2561:
  4510  001A80  90D8               	bcf	status,0,c
  4511  001A82  3218               	rrcf	__div_to_l_@quot+3,f,c
  4512  001A84  3217               	rrcf	__div_to_l_@quot+2,f,c
  4513  001A86  3216               	rrcf	__div_to_l_@quot+1,f,c
  4514  001A88  3215               	rrcf	__div_to_l_@quot,f,c
  4515  001A8A  3E1A               	incfsz	__div_to_l_@exp1,f,c
  4516  001A8C  D7F9               	goto	l2561
  4517  001A8E  D015               	goto	l502
  4518  001A90                     l2565:
  4519  001A90  0E1F               	movlw	31
  4520  001A92  641A               	cpfsgt	__div_to_l_@exp1,c
  4521  001A94  D00F               	goto	l2573
  4522  001A96  0E00               	movlw	0
  4523  001A98  6E0F               	movwf	?__div_to_l_,c
  4524  001A9A  0E00               	movlw	0
  4525  001A9C  6E10               	movwf	?__div_to_l_+1,c
  4526  001A9E  0E00               	movlw	0
  4527  001AA0  6E11               	movwf	?__div_to_l_+2,c
  4528  001AA2  0E00               	movlw	0
  4529  001AA4  6E12               	movwf	?__div_to_l_+3,c
  4530  001AA6  0012               	return	
  4531  001AA8                     l2571:
  4532  001AA8  90D8               	bcf	status,0,c
  4533  001AAA  3615               	rlcf	__div_to_l_@quot,f,c
  4534  001AAC  3616               	rlcf	__div_to_l_@quot+1,f,c
  4535  001AAE  3617               	rlcf	__div_to_l_@quot+2,f,c
  4536  001AB0  3618               	rlcf	__div_to_l_@quot+3,f,c
  4537  001AB2  061A               	decf	__div_to_l_@exp1,f,c
  4538  001AB4                     l2573:
  4539  001AB4  501A               	movf	__div_to_l_@exp1,w,c
  4540  001AB6  A4D8               	btfss	status,2,c
  4541  001AB8  D7F7               	goto	l2571
  4542  001ABA                     l502:
  4543  001ABA  C015  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  4544  001ABE  C016  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4545  001AC2  C017  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4546  001AC6  C018  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4547  001ACA  0012               	return		;funcret
  4548  001ACC                     __end_of__div_to_l_:
  4549                           	opt stack 0
  4550                           tblptru	equ	0xFF8
  4551                           tblptrh	equ	0xFF7
  4552                           tblptrl	equ	0xFF6
  4553                           tablat	equ	0xFF5
  4554                           prodh	equ	0xFF4
  4555                           prodl	equ	0xFF3
  4556                           intcon	equ	0xFF2
  4557                           postinc0	equ	0xFEE
  4558                           wreg	equ	0xFE8
  4559                           indf2	equ	0xFDF
  4560                           postinc2	equ	0xFDE
  4561                           postdec2	equ	0xFDD
  4562                           fsr2h	equ	0xFDA
  4563                           fsr2l	equ	0xFD9
  4564                           status	equ	0xFD8
  4565                           
  4566 ;; *************** function ___lltoft *****************
  4567 ;; Defined at:
  4568 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lltoft.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  c               4   22[COMRAM] unsigned long 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  exp             1   30[COMRAM] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  3   22[COMRAM] float 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         4       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        9 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    2
  4589 ;; This function calls:
  4590 ;;		___ftpack
  4591 ;; This function is called by:
  4592 ;;		_sprintf
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text19
  4597  0022C4                     __ptext19:
  4598                           	opt stack 0
  4599  0022C4                     ___lltoft:
  4600                           	opt stack 26
  4601                           
  4602                           ;incstack = 0
  4603  0022C4  0E8E               	movlw	142
  4604  0022C6  6E1F               	movwf	___lltoft@exp,c
  4605  0022C8  D006               	goto	l2721
  4606  0022CA                     l2719:
  4607  0022CA  90D8               	bcf	status,0,c
  4608  0022CC  321A               	rrcf	___lltoft@c+3,f,c
  4609  0022CE  3219               	rrcf	___lltoft@c+2,f,c
  4610  0022D0  3218               	rrcf	___lltoft@c+1,f,c
  4611  0022D2  3217               	rrcf	___lltoft@c,f,c
  4612  0022D4  2A1F               	incf	___lltoft@exp,f,c
  4613  0022D6                     l2721:
  4614  0022D6  0E00               	movlw	0
  4615  0022D8  1417               	andwf	___lltoft@c,w,c
  4616  0022DA  6E1B               	movwf	??___lltoft& (0+255),c
  4617  0022DC  0E00               	movlw	0
  4618  0022DE  1418               	andwf	___lltoft@c+1,w,c
  4619  0022E0  6E1C               	movwf	(??___lltoft+1)& (0+255),c
  4620  0022E2  0E00               	movlw	0
  4621  0022E4  1419               	andwf	___lltoft@c+2,w,c
  4622  0022E6  6E1D               	movwf	(??___lltoft+2)& (0+255),c
  4623  0022E8  0EFF               	movlw	255
  4624  0022EA  141A               	andwf	___lltoft@c+3,w,c
  4625  0022EC  6E1E               	movwf	(??___lltoft+3)& (0+255),c
  4626  0022EE  501B               	movf	??___lltoft,w,c
  4627  0022F0  101C               	iorwf	??___lltoft+1,w,c
  4628  0022F2  101D               	iorwf	??___lltoft+2,w,c
  4629  0022F4  101E               	iorwf	??___lltoft+3,w,c
  4630  0022F6  A4D8               	btfss	status,2,c
  4631  0022F8  D7E8               	goto	l2719
  4632  0022FA  C017  F00F         	movff	___lltoft@c,___ftpack@arg
  4633  0022FE  C018  F010         	movff	___lltoft@c+1,___ftpack@arg+1
  4634  002302  C019  F011         	movff	___lltoft@c+2,___ftpack@arg+2
  4635  002306  C01F  F012         	movff	___lltoft@exp,___ftpack@exp
  4636  00230A  0E00               	movlw	0
  4637  00230C  6E13               	movwf	___ftpack@sign,c
  4638  00230E  ECCD  F00E         	call	___ftpack	;wreg free
  4639  002312  C00F  F017         	movff	?___ftpack,?___lltoft
  4640  002316  C010  F018         	movff	?___ftpack+1,?___lltoft+1
  4641  00231A  C011  F019         	movff	?___ftpack+2,?___lltoft+2
  4642  00231E  0012               	return	
  4643  002320                     __end_of___lltoft:
  4644                           	opt stack 0
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           indf2	equ	0xFDF
  4655                           postinc2	equ	0xFDE
  4656                           postdec2	equ	0xFDD
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function ___llmod *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  dividend        4   14[COMRAM] unsigned long 
  4666 ;;  divisor         4   18[COMRAM] unsigned long 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  counter         1   22[COMRAM] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  4   14[COMRAM] unsigned long 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         8       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        9 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_sprintf
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text20
  4693  002200                     __ptext20:
  4694                           	opt stack 0
  4695  002200                     ___llmod:
  4696                           	opt stack 27
  4697                           
  4698                           ;incstack = 0
  4699  002200  5013               	movf	___llmod@divisor,w,c
  4700  002202  1014               	iorwf	___llmod@divisor+1,w,c
  4701  002204  1015               	iorwf	___llmod@divisor+2,w,c
  4702  002206  1016               	iorwf	___llmod@divisor+3,w,c
  4703  002208  B4D8               	btfsc	status,2,c
  4704  00220A  D024               	goto	l691
  4705  00220C  0E01               	movlw	1
  4706  00220E  6E17               	movwf	___llmod@counter,c
  4707  002210  D006               	goto	l2707
  4708  002212                     l2705:
  4709  002212  90D8               	bcf	status,0,c
  4710  002214  3613               	rlcf	___llmod@divisor,f,c
  4711  002216  3614               	rlcf	___llmod@divisor+1,f,c
  4712  002218  3615               	rlcf	___llmod@divisor+2,f,c
  4713  00221A  3616               	rlcf	___llmod@divisor+3,f,c
  4714  00221C  2A17               	incf	___llmod@counter,f,c
  4715  00221E                     l2707:
  4716  00221E  AE16               	btfss	___llmod@divisor+3,7,c
  4717  002220  D7F8               	goto	l2705
  4718  002222                     l2709:
  4719  002222  5013               	movf	___llmod@divisor,w,c
  4720  002224  5C0F               	subwf	___llmod@dividend,w,c
  4721  002226  5014               	movf	___llmod@divisor+1,w,c
  4722  002228  5810               	subwfb	___llmod@dividend+1,w,c
  4723  00222A  5015               	movf	___llmod@divisor+2,w,c
  4724  00222C  5811               	subwfb	___llmod@dividend+2,w,c
  4725  00222E  5016               	movf	___llmod@divisor+3,w,c
  4726  002230  5812               	subwfb	___llmod@dividend+3,w,c
  4727  002232  A0D8               	btfss	status,0,c
  4728  002234  D008               	goto	l2713
  4729  002236  5013               	movf	___llmod@divisor,w,c
  4730  002238  5E0F               	subwf	___llmod@dividend,f,c
  4731  00223A  5014               	movf	___llmod@divisor+1,w,c
  4732  00223C  5A10               	subwfb	___llmod@dividend+1,f,c
  4733  00223E  5015               	movf	___llmod@divisor+2,w,c
  4734  002240  5A11               	subwfb	___llmod@dividend+2,f,c
  4735  002242  5016               	movf	___llmod@divisor+3,w,c
  4736  002244  5A12               	subwfb	___llmod@dividend+3,f,c
  4737  002246                     l2713:
  4738  002246  90D8               	bcf	status,0,c
  4739  002248  3216               	rrcf	___llmod@divisor+3,f,c
  4740  00224A  3215               	rrcf	___llmod@divisor+2,f,c
  4741  00224C  3214               	rrcf	___llmod@divisor+1,f,c
  4742  00224E  3213               	rrcf	___llmod@divisor,f,c
  4743  002250  2E17               	decfsz	___llmod@counter,f,c
  4744  002252  D7E7               	goto	l2709
  4745  002254                     l691:
  4746  002254  C00F  F00F         	movff	___llmod@dividend,?___llmod
  4747  002258  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  4748  00225C  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  4749  002260  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  4750  002264  0012               	return		;funcret
  4751  002266                     __end_of___llmod:
  4752                           	opt stack 0
  4753                           tblptru	equ	0xFF8
  4754                           tblptrh	equ	0xFF7
  4755                           tblptrl	equ	0xFF6
  4756                           tablat	equ	0xFF5
  4757                           prodh	equ	0xFF4
  4758                           prodl	equ	0xFF3
  4759                           intcon	equ	0xFF2
  4760                           postinc0	equ	0xFEE
  4761                           wreg	equ	0xFE8
  4762                           indf2	equ	0xFDF
  4763                           postinc2	equ	0xFDE
  4764                           postdec2	equ	0xFDD
  4765                           fsr2h	equ	0xFDA
  4766                           fsr2l	equ	0xFD9
  4767                           status	equ	0xFD8
  4768                           
  4769 ;; *************** function ___lldiv *****************
  4770 ;; Defined at:
  4771 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  dividend        4   14[COMRAM] unsigned long 
  4774 ;;  divisor         4   18[COMRAM] unsigned long 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  quotient        4   22[COMRAM] unsigned long 
  4777 ;;  counter         1   26[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  4   14[COMRAM] unsigned long 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4787 ;;      Params:         8       0       0       0       0       0       0       0       0
  4788 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4790 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4791 ;;Total ram usage:       13 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_sprintf
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text21
  4802  00208C                     __ptext21:
  4803                           	opt stack 0
  4804  00208C                     ___lldiv:
  4805                           	opt stack 27
  4806                           
  4807                           ;incstack = 0
  4808  00208C  0E00               	movlw	0
  4809  00208E  6E17               	movwf	___lldiv@quotient,c
  4810  002090  0E00               	movlw	0
  4811  002092  6E18               	movwf	___lldiv@quotient+1,c
  4812  002094  0E00               	movlw	0
  4813  002096  6E19               	movwf	___lldiv@quotient+2,c
  4814  002098  0E00               	movlw	0
  4815  00209A  6E1A               	movwf	___lldiv@quotient+3,c
  4816  00209C  5013               	movf	___lldiv@divisor,w,c
  4817  00209E  1014               	iorwf	___lldiv@divisor+1,w,c
  4818  0020A0  1015               	iorwf	___lldiv@divisor+2,w,c
  4819  0020A2  1016               	iorwf	___lldiv@divisor+3,w,c
  4820  0020A4  B4D8               	btfsc	status,2,c
  4821  0020A6  D02A               	goto	l681
  4822  0020A8  0E01               	movlw	1
  4823  0020AA  6E1B               	movwf	___lldiv@counter,c
  4824  0020AC  D006               	goto	l2687
  4825  0020AE                     l2685:
  4826  0020AE  90D8               	bcf	status,0,c
  4827  0020B0  3613               	rlcf	___lldiv@divisor,f,c
  4828  0020B2  3614               	rlcf	___lldiv@divisor+1,f,c
  4829  0020B4  3615               	rlcf	___lldiv@divisor+2,f,c
  4830  0020B6  3616               	rlcf	___lldiv@divisor+3,f,c
  4831  0020B8  2A1B               	incf	___lldiv@counter,f,c
  4832  0020BA                     l2687:
  4833  0020BA  AE16               	btfss	___lldiv@divisor+3,7,c
  4834  0020BC  D7F8               	goto	l2685
  4835  0020BE                     l2689:
  4836  0020BE  90D8               	bcf	status,0,c
  4837  0020C0  3617               	rlcf	___lldiv@quotient,f,c
  4838  0020C2  3618               	rlcf	___lldiv@quotient+1,f,c
  4839  0020C4  3619               	rlcf	___lldiv@quotient+2,f,c
  4840  0020C6  361A               	rlcf	___lldiv@quotient+3,f,c
  4841  0020C8  5013               	movf	___lldiv@divisor,w,c
  4842  0020CA  5C0F               	subwf	___lldiv@dividend,w,c
  4843  0020CC  5014               	movf	___lldiv@divisor+1,w,c
  4844  0020CE  5810               	subwfb	___lldiv@dividend+1,w,c
  4845  0020D0  5015               	movf	___lldiv@divisor+2,w,c
  4846  0020D2  5811               	subwfb	___lldiv@dividend+2,w,c
  4847  0020D4  5016               	movf	___lldiv@divisor+3,w,c
  4848  0020D6  5812               	subwfb	___lldiv@dividend+3,w,c
  4849  0020D8  A0D8               	btfss	status,0,c
  4850  0020DA  D009               	goto	l2697
  4851  0020DC  5013               	movf	___lldiv@divisor,w,c
  4852  0020DE  5E0F               	subwf	___lldiv@dividend,f,c
  4853  0020E0  5014               	movf	___lldiv@divisor+1,w,c
  4854  0020E2  5A10               	subwfb	___lldiv@dividend+1,f,c
  4855  0020E4  5015               	movf	___lldiv@divisor+2,w,c
  4856  0020E6  5A11               	subwfb	___lldiv@dividend+2,f,c
  4857  0020E8  5016               	movf	___lldiv@divisor+3,w,c
  4858  0020EA  5A12               	subwfb	___lldiv@dividend+3,f,c
  4859  0020EC  8017               	bsf	___lldiv@quotient,0,c
  4860  0020EE                     l2697:
  4861  0020EE  90D8               	bcf	status,0,c
  4862  0020F0  3216               	rrcf	___lldiv@divisor+3,f,c
  4863  0020F2  3215               	rrcf	___lldiv@divisor+2,f,c
  4864  0020F4  3214               	rrcf	___lldiv@divisor+1,f,c
  4865  0020F6  3213               	rrcf	___lldiv@divisor,f,c
  4866  0020F8  2E1B               	decfsz	___lldiv@counter,f,c
  4867  0020FA  D7E1               	goto	l2689
  4868  0020FC                     l681:
  4869  0020FC  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4870  002100  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4871  002104  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4872  002108  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4873  00210C  0012               	return		;funcret
  4874  00210E                     __end_of___lldiv:
  4875                           	opt stack 0
  4876                           tblptru	equ	0xFF8
  4877                           tblptrh	equ	0xFF7
  4878                           tblptrl	equ	0xFF6
  4879                           tablat	equ	0xFF5
  4880                           prodh	equ	0xFF4
  4881                           prodl	equ	0xFF3
  4882                           intcon	equ	0xFF2
  4883                           postinc0	equ	0xFEE
  4884                           wreg	equ	0xFE8
  4885                           indf2	equ	0xFDF
  4886                           postinc2	equ	0xFDE
  4887                           postdec2	equ	0xFDD
  4888                           fsr2h	equ	0xFDA
  4889                           fsr2l	equ	0xFD9
  4890                           status	equ	0xFD8
  4891                           
  4892 ;; *************** function ___fttol *****************
  4893 ;; Defined at:
  4894 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  f1              3   56[COMRAM] float 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  lval            4   66[COMRAM] unsigned long 
  4899 ;;  exp1            1   70[COMRAM] unsigned char 
  4900 ;;  sign1           1   65[COMRAM] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  4   56[COMRAM] long 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4910 ;;      Params:         4       0       0       0       0       0       0       0       0
  4911 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4912 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4913 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4914 ;;Total ram usage:       15 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_sprintf
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text22
  4925  001BC0                     __ptext22:
  4926                           	opt stack 0
  4927  001BC0                     ___fttol:
  4928                           	opt stack 27
  4929                           
  4930                           ;incstack = 0
  4931  001BC0  C03B  F03D         	movff	___fttol@f1+2,??___fttol
  4932  001BC4  6A3E               	clrf	(??___fttol+1)& (0+255),c
  4933  001BC6  6A3F               	clrf	(??___fttol+2)& (0+255),c
  4934  001BC8  343A               	rlcf	___fttol@f1+1,w,c
  4935  001BCA  363D               	rlcf	??___fttol& (0+255),f,c
  4936  001BCC  E301               	bnc	u2261
  4937  001BCE  803E               	bsf	(??___fttol+1)& (0+255),0,c
  4938  001BD0                     u2261:
  4939  001BD0  503D               	movf	??___fttol,w,c
  4940  001BD2  6E47               	movwf	___fttol@exp1,c
  4941  001BD4  5047               	movf	___fttol@exp1,w,c
  4942  001BD6  A4D8               	btfss	status,2,c
  4943  001BD8  D009               	goto	l2639
  4944  001BDA  0E00               	movlw	0
  4945  001BDC  6E39               	movwf	?___fttol,c
  4946  001BDE  0E00               	movlw	0
  4947  001BE0  6E3A               	movwf	?___fttol+1,c
  4948  001BE2  0E00               	movlw	0
  4949  001BE4  6E3B               	movwf	?___fttol+2,c
  4950  001BE6  0E00               	movlw	0
  4951  001BE8  6E3C               	movwf	?___fttol+3,c
  4952  001BEA  0012               	return	
  4953  001BEC                     l2639:
  4954  001BEC  0E17               	movlw	23
  4955  001BEE  6E3D               	movwf	??___fttol& (0+255),c
  4956  001BF0  C039  F03E         	movff	___fttol@f1,??___fttol+1
  4957  001BF4  C03A  F03F         	movff	___fttol@f1+1,??___fttol+2
  4958  001BF8  C03B  F040         	movff	___fttol@f1+2,??___fttol+3
  4959  001BFC  283D               	incf	??___fttol,w,c
  4960  001BFE  6E41               	movwf	(??___fttol+4)& (0+255),c
  4961  001C00  D004               	goto	u2280
  4962  001C02                     u2285:
  4963  001C02  90D8               	bcf	status,0,c
  4964  001C04  3240               	rrcf	??___fttol+3,f,c
  4965  001C06  323F               	rrcf	??___fttol+2,f,c
  4966  001C08  323E               	rrcf	??___fttol+1,f,c
  4967  001C0A                     u2280:
  4968  001C0A  2E41               	decfsz	(??___fttol+4)& (0+255),f,c
  4969  001C0C  D7FA               	goto	u2285
  4970  001C0E  503E               	movf	??___fttol+1,w,c
  4971  001C10  6E42               	movwf	___fttol@sign1,c
  4972  001C12  8E3A               	bsf	___fttol@f1+1,7,c
  4973  001C14  0EFF               	movlw	255
  4974  001C16  1639               	andwf	___fttol@f1,f,c
  4975  001C18  0EFF               	movlw	255
  4976  001C1A  163A               	andwf	___fttol@f1+1,f,c
  4977  001C1C  0E00               	movlw	0
  4978  001C1E  163B               	andwf	___fttol@f1+2,f,c
  4979  001C20  5039               	movf	___fttol@f1,w,c
  4980  001C22  6E43               	movwf	___fttol@lval,c
  4981  001C24  503A               	movf	___fttol@f1+1,w,c
  4982  001C26  6E44               	movwf	___fttol@lval+1,c
  4983  001C28  503B               	movf	___fttol@f1+2,w,c
  4984  001C2A  6E45               	movwf	___fttol@lval+2,c
  4985  001C2C  6A46               	clrf	___fttol@lval+3,c
  4986  001C2E  0E8E               	movlw	142
  4987  001C30  5E47               	subwf	___fttol@exp1,f,c
  4988  001C32  AE47               	btfss	___fttol@exp1,7,c
  4989  001C34  D016               	goto	l2661
  4990  001C36  5047               	movf	___fttol@exp1,w,c
  4991  001C38  0A80               	xorlw	128
  4992  001C3A  0F8F               	addlw	143
  4993  001C3C  B0D8               	btfsc	status,0,c
  4994  001C3E  D009               	goto	l2657
  4995  001C40  0E00               	movlw	0
  4996  001C42  6E39               	movwf	?___fttol,c
  4997  001C44  0E00               	movlw	0
  4998  001C46  6E3A               	movwf	?___fttol+1,c
  4999  001C48  0E00               	movlw	0
  5000  001C4A  6E3B               	movwf	?___fttol+2,c
  5001  001C4C  0E00               	movlw	0
  5002  001C4E  6E3C               	movwf	?___fttol+3,c
  5003  001C50  0012               	return	
  5004  001C52                     l2657:
  5005  001C52  90D8               	bcf	status,0,c
  5006  001C54  3246               	rrcf	___fttol@lval+3,f,c
  5007  001C56  3245               	rrcf	___fttol@lval+2,f,c
  5008  001C58  3244               	rrcf	___fttol@lval+1,f,c
  5009  001C5A  3243               	rrcf	___fttol@lval,f,c
  5010  001C5C  3E47               	incfsz	___fttol@exp1,f,c
  5011  001C5E  D7F9               	goto	l2657
  5012  001C60  D015               	goto	l2671
  5013  001C62                     l2661:
  5014  001C62  0E17               	movlw	23
  5015  001C64  6447               	cpfsgt	___fttol@exp1,c
  5016  001C66  D00F               	goto	l2669
  5017  001C68  0E00               	movlw	0
  5018  001C6A  6E39               	movwf	?___fttol,c
  5019  001C6C  0E00               	movlw	0
  5020  001C6E  6E3A               	movwf	?___fttol+1,c
  5021  001C70  0E00               	movlw	0
  5022  001C72  6E3B               	movwf	?___fttol+2,c
  5023  001C74  0E00               	movlw	0
  5024  001C76  6E3C               	movwf	?___fttol+3,c
  5025  001C78  0012               	return	
  5026  001C7A                     l2667:
  5027  001C7A  90D8               	bcf	status,0,c
  5028  001C7C  3643               	rlcf	___fttol@lval,f,c
  5029  001C7E  3644               	rlcf	___fttol@lval+1,f,c
  5030  001C80  3645               	rlcf	___fttol@lval+2,f,c
  5031  001C82  3646               	rlcf	___fttol@lval+3,f,c
  5032  001C84  0647               	decf	___fttol@exp1,f,c
  5033  001C86                     l2669:
  5034  001C86  5047               	movf	___fttol@exp1,w,c
  5035  001C88  A4D8               	btfss	status,2,c
  5036  001C8A  D7F7               	goto	l2667
  5037  001C8C                     l2671:
  5038  001C8C  5042               	movf	___fttol@sign1,w,c
  5039  001C8E  B4D8               	btfsc	status,2,c
  5040  001C90  D008               	goto	l2675
  5041  001C92  1E46               	comf	___fttol@lval+3,f,c
  5042  001C94  1E45               	comf	___fttol@lval+2,f,c
  5043  001C96  1E44               	comf	___fttol@lval+1,f,c
  5044  001C98  6C43               	negf	___fttol@lval,c
  5045  001C9A  0E00               	movlw	0
  5046  001C9C  2244               	addwfc	___fttol@lval+1,f,c
  5047  001C9E  2245               	addwfc	___fttol@lval+2,f,c
  5048  001CA0  2246               	addwfc	___fttol@lval+3,f,c
  5049  001CA2                     l2675:
  5050  001CA2  C043  F039         	movff	___fttol@lval,?___fttol
  5051  001CA6  C044  F03A         	movff	___fttol@lval+1,?___fttol+1
  5052  001CAA  C045  F03B         	movff	___fttol@lval+2,?___fttol+2
  5053  001CAE  C046  F03C         	movff	___fttol@lval+3,?___fttol+3
  5054  001CB2  0012               	return	
  5055  001CB4                     __end_of___fttol:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           postinc0	equ	0xFEE
  5065                           wreg	equ	0xFE8
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function ___ftsub *****************
  5074 ;; Defined at:
  5075 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  f1              3   71[COMRAM] float 
  5078 ;;  f2              3   74[COMRAM] float 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  3   71[COMRAM] float 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5090 ;;      Params:         6       0       0       0       0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5093 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5094 ;;Total ram usage:        6 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    3
  5097 ;; This function calls:
  5098 ;;		___ftadd
  5099 ;; This function is called by:
  5100 ;;		_sprintf
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text23
  5105  0023CE                     __ptext23:
  5106                           	opt stack 0
  5107  0023CE                     ___ftsub:
  5108                           	opt stack 25
  5109                           
  5110                           ;incstack = 0
  5111  0023CE  504B               	movf	___ftsub@f2,w,c
  5112  0023D0  104C               	iorwf	___ftsub@f2+1,w,c
  5113  0023D2  104D               	iorwf	___ftsub@f2+2,w,c
  5114  0023D4  B4D8               	btfsc	status,2,c
  5115  0023D6  D006               	goto	l2607
  5116  0023D8  0E00               	movlw	0
  5117  0023DA  1A4B               	xorwf	___ftsub@f2,f,c
  5118  0023DC  0E00               	movlw	0
  5119  0023DE  1A4C               	xorwf	___ftsub@f2+1,f,c
  5120  0023E0  0E80               	movlw	128
  5121  0023E2  1A4D               	xorwf	___ftsub@f2+2,f,c
  5122  0023E4                     l2607:
  5123  0023E4  C048  F03C         	movff	___ftsub@f1,___ftadd@f1
  5124  0023E8  C049  F03D         	movff	___ftsub@f1+1,___ftadd@f1+1
  5125  0023EC  C04A  F03E         	movff	___ftsub@f1+2,___ftadd@f1+2
  5126  0023F0  C04B  F03F         	movff	___ftsub@f2,___ftadd@f2
  5127  0023F4  C04C  F040         	movff	___ftsub@f2+1,___ftadd@f2+1
  5128  0023F8  C04D  F041         	movff	___ftsub@f2+2,___ftadd@f2+2
  5129  0023FC  EC63  F00B         	call	___ftadd	;wreg free
  5130  002400  C03C  F048         	movff	?___ftadd,?___ftsub
  5131  002404  C03D  F049         	movff	?___ftadd+1,?___ftsub+1
  5132  002408  C03E  F04A         	movff	?___ftadd+2,?___ftsub+2
  5133  00240C  0012               	return	
  5134  00240E                     __end_of___ftsub:
  5135                           	opt stack 0
  5136                           tblptru	equ	0xFF8
  5137                           tblptrh	equ	0xFF7
  5138                           tblptrl	equ	0xFF6
  5139                           tablat	equ	0xFF5
  5140                           prodh	equ	0xFF4
  5141                           prodl	equ	0xFF3
  5142                           intcon	equ	0xFF2
  5143                           postinc0	equ	0xFEE
  5144                           wreg	equ	0xFE8
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           postdec2	equ	0xFDD
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function ___ftadd *****************
  5153 ;; Defined at:
  5154 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  f1              3   59[COMRAM] float 
  5157 ;;  f2              3   62[COMRAM] float 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  exp1            1   70[COMRAM] unsigned char 
  5160 ;;  exp2            1   69[COMRAM] unsigned char 
  5161 ;;  sign            1   68[COMRAM] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  3   59[COMRAM] float 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5171 ;;      Params:         6       0       0       0       0       0       0       0       0
  5172 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5173 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5174 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5175 ;;Total ram usage:       12 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    2
  5178 ;; This function calls:
  5179 ;;		___ftpack
  5180 ;; This function is called by:
  5181 ;;		_sprintf
  5182 ;;		___ftsub
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text24
  5187  0016C6                     __ptext24:
  5188                           	opt stack 0
  5189  0016C6                     ___ftadd:
  5190                           	opt stack 25
  5191                           
  5192                           ;incstack = 0
  5193  0016C6  C03E  F042         	movff	___ftadd@f1+2,??___ftadd
  5194  0016CA  6A43               	clrf	(??___ftadd+1)& (0+255),c
  5195  0016CC  6A44               	clrf	(??___ftadd+2)& (0+255),c
  5196  0016CE  343D               	rlcf	___ftadd@f1+1,w,c
  5197  0016D0  3642               	rlcf	??___ftadd& (0+255),f,c
  5198  0016D2  E301               	bnc	u1551
  5199  0016D4  8043               	bsf	(??___ftadd+1)& (0+255),0,c
  5200  0016D6                     u1551:
  5201  0016D6  5042               	movf	??___ftadd,w,c
  5202  0016D8  6E47               	movwf	___ftadd@exp1,c
  5203  0016DA  C041  F042         	movff	___ftadd@f2+2,??___ftadd
  5204  0016DE  6A43               	clrf	(??___ftadd+1)& (0+255),c
  5205  0016E0  6A44               	clrf	(??___ftadd+2)& (0+255),c
  5206  0016E2  3440               	rlcf	___ftadd@f2+1,w,c
  5207  0016E4  3642               	rlcf	??___ftadd& (0+255),f,c
  5208  0016E6  E301               	bnc	u1561
  5209  0016E8  8043               	bsf	(??___ftadd+1)& (0+255),0,c
  5210  0016EA                     u1561:
  5211  0016EA  5042               	movf	??___ftadd,w,c
  5212  0016EC  6E46               	movwf	___ftadd@exp2,c
  5213  0016EE  5047               	movf	___ftadd@exp1,w,c
  5214  0016F0  B4D8               	btfsc	status,2,c
  5215  0016F2  D00B               	goto	l557
  5216  0016F4  5046               	movf	___ftadd@exp2,w,c
  5217  0016F6  5C47               	subwf	___ftadd@exp1,w,c
  5218  0016F8  B0D8               	btfsc	status,0,c
  5219  0016FA  D00E               	goto	l2111
  5220  0016FC  5047               	movf	___ftadd@exp1,w,c
  5221  0016FE  0800               	sublw	0
  5222  001700  2446               	addwf	___ftadd@exp2,w,c
  5223  001702  6E42               	movwf	??___ftadd& (0+255),c
  5224  001704  0E18               	movlw	24
  5225  001706  6442               	cpfsgt	??___ftadd,c
  5226  001708  D007               	goto	l2111
  5227  00170A                     l557:
  5228  00170A  C03F  F03C         	movff	___ftadd@f2,?___ftadd
  5229  00170E  C040  F03D         	movff	___ftadd@f2+1,?___ftadd+1
  5230  001712  C041  F03E         	movff	___ftadd@f2+2,?___ftadd+2
  5231  001716  0012               	return	
  5232  001718                     l2111:
  5233  001718  5046               	movf	___ftadd@exp2,w,c
  5234  00171A  B4D8               	btfsc	status,2,c
  5235  00171C  D00B               	goto	l561
  5236  00171E  5047               	movf	___ftadd@exp1,w,c
  5237  001720  5C46               	subwf	___ftadd@exp2,w,c
  5238  001722  B0D8               	btfsc	status,0,c
  5239  001724  D00E               	goto	l2117
  5240  001726  5046               	movf	___ftadd@exp2,w,c
  5241  001728  0800               	sublw	0
  5242  00172A  2447               	addwf	___ftadd@exp1,w,c
  5243  00172C  6E42               	movwf	??___ftadd& (0+255),c
  5244  00172E  0E18               	movlw	24
  5245  001730  6442               	cpfsgt	??___ftadd,c
  5246  001732  D007               	goto	l2117
  5247  001734                     l561:
  5248  001734  C03C  F03C         	movff	___ftadd@f1,?___ftadd
  5249  001738  C03D  F03D         	movff	___ftadd@f1+1,?___ftadd+1
  5250  00173C  C03E  F03E         	movff	___ftadd@f1+2,?___ftadd+2
  5251  001740  0012               	return	
  5252  001742                     l2117:
  5253  001742  0E06               	movlw	6
  5254  001744  6E45               	movwf	___ftadd@sign,c
  5255  001746  BE3E               	btfsc	___ftadd@f1+2,7,c
  5256  001748  8E45               	bsf	___ftadd@sign,7,c
  5257  00174A  BE41               	btfsc	___ftadd@f2+2,7,c
  5258  00174C  8C45               	bsf	___ftadd@sign,6,c
  5259  00174E  8E3D               	bsf	___ftadd@f1+1,7,c
  5260  001750  0EFF               	movlw	255
  5261  001752  163C               	andwf	___ftadd@f1,f,c
  5262  001754  0EFF               	movlw	255
  5263  001756  163D               	andwf	___ftadd@f1+1,f,c
  5264  001758  0E00               	movlw	0
  5265  00175A  163E               	andwf	___ftadd@f1+2,f,c
  5266  00175C  8E40               	bsf	___ftadd@f2+1,7,c
  5267  00175E  0EFF               	movlw	255
  5268  001760  163F               	andwf	___ftadd@f2,f,c
  5269  001762  0EFF               	movlw	255
  5270  001764  1640               	andwf	___ftadd@f2+1,f,c
  5271  001766  0E00               	movlw	0
  5272  001768  1641               	andwf	___ftadd@f2+2,f,c
  5273  00176A  5046               	movf	___ftadd@exp2,w,c
  5274  00176C  5C47               	subwf	___ftadd@exp1,w,c
  5275  00176E  B0D8               	btfsc	status,0,c
  5276  001770  D01B               	goto	l2143
  5277  001772                     l2133:
  5278  001772  90D8               	bcf	status,0,c
  5279  001774  363F               	rlcf	___ftadd@f2,f,c
  5280  001776  3640               	rlcf	___ftadd@f2+1,f,c
  5281  001778  3641               	rlcf	___ftadd@f2+2,f,c
  5282  00177A  0646               	decf	___ftadd@exp2,f,c
  5283  00177C  5047               	movf	___ftadd@exp1,w,c
  5284  00177E  1846               	xorwf	___ftadd@exp2,w,c
  5285  001780  B4D8               	btfsc	status,2,c
  5286  001782  D00D               	goto	l2141
  5287  001784  0645               	decf	___ftadd@sign,f,c
  5288  001786  C045  F042         	movff	___ftadd@sign,??___ftadd
  5289  00178A  0E07               	movlw	7
  5290  00178C  1642               	andwf	??___ftadd,f,c
  5291  00178E  B4D8               	btfsc	status,2,c
  5292  001790  D006               	goto	l2141
  5293  001792  D7EF               	goto	l2133
  5294  001794                     l2139:
  5295  001794  90D8               	bcf	status,0,c
  5296  001796  323E               	rrcf	___ftadd@f1+2,f,c
  5297  001798  323D               	rrcf	___ftadd@f1+1,f,c
  5298  00179A  323C               	rrcf	___ftadd@f1,f,c
  5299  00179C  2A47               	incf	___ftadd@exp1,f,c
  5300  00179E                     l2141:
  5301  00179E  5046               	movf	___ftadd@exp2,w,c
  5302  0017A0  1847               	xorwf	___ftadd@exp1,w,c
  5303  0017A2  B4D8               	btfsc	status,2,c
  5304  0017A4  D01F               	goto	l572
  5305  0017A6  D7F6               	goto	l2139
  5306  0017A8                     l2143:
  5307  0017A8  5047               	movf	___ftadd@exp1,w,c
  5308  0017AA  5C46               	subwf	___ftadd@exp2,w,c
  5309  0017AC  B0D8               	btfsc	status,0,c
  5310  0017AE  D01A               	goto	l572
  5311  0017B0                     l2145:
  5312  0017B0  90D8               	bcf	status,0,c
  5313  0017B2  363C               	rlcf	___ftadd@f1,f,c
  5314  0017B4  363D               	rlcf	___ftadd@f1+1,f,c
  5315  0017B6  363E               	rlcf	___ftadd@f1+2,f,c
  5316  0017B8  0647               	decf	___ftadd@exp1,f,c
  5317  0017BA  5047               	movf	___ftadd@exp1,w,c
  5318  0017BC  1846               	xorwf	___ftadd@exp2,w,c
  5319  0017BE  B4D8               	btfsc	status,2,c
  5320  0017C0  D00D               	goto	l2153
  5321  0017C2  0645               	decf	___ftadd@sign,f,c
  5322  0017C4  C045  F042         	movff	___ftadd@sign,??___ftadd
  5323  0017C8  0E07               	movlw	7
  5324  0017CA  1642               	andwf	??___ftadd,f,c
  5325  0017CC  B4D8               	btfsc	status,2,c
  5326  0017CE  D006               	goto	l2153
  5327  0017D0  D7EF               	goto	l2145
  5328  0017D2                     l2151:
  5329  0017D2  90D8               	bcf	status,0,c
  5330  0017D4  3241               	rrcf	___ftadd@f2+2,f,c
  5331  0017D6  3240               	rrcf	___ftadd@f2+1,f,c
  5332  0017D8  323F               	rrcf	___ftadd@f2,f,c
  5333  0017DA  2A46               	incf	___ftadd@exp2,f,c
  5334  0017DC                     l2153:
  5335  0017DC  5046               	movf	___ftadd@exp2,w,c
  5336  0017DE  1847               	xorwf	___ftadd@exp1,w,c
  5337  0017E0  A4D8               	btfss	status,2,c
  5338  0017E2  D7F7               	goto	l2151
  5339  0017E4                     l572:
  5340  0017E4  AE45               	btfss	___ftadd@sign,7,c
  5341  0017E6  D00C               	goto	l581
  5342  0017E8  0EFF               	movlw	255
  5343  0017EA  1A3C               	xorwf	___ftadd@f1,f,c
  5344  0017EC  0EFF               	movlw	255
  5345  0017EE  1A3D               	xorwf	___ftadd@f1+1,f,c
  5346  0017F0  0EFF               	movlw	255
  5347  0017F2  1A3E               	xorwf	___ftadd@f1+2,f,c
  5348  0017F4  0E01               	movlw	1
  5349  0017F6  263C               	addwf	___ftadd@f1,f,c
  5350  0017F8  0E00               	movlw	0
  5351  0017FA  223D               	addwfc	___ftadd@f1+1,f,c
  5352  0017FC  0E00               	movlw	0
  5353  0017FE  223E               	addwfc	___ftadd@f1+2,f,c
  5354  001800                     l581:
  5355  001800  AC45               	btfss	___ftadd@sign,6,c
  5356  001802  D00C               	goto	l2159
  5357  001804  0EFF               	movlw	255
  5358  001806  1A3F               	xorwf	___ftadd@f2,f,c
  5359  001808  0EFF               	movlw	255
  5360  00180A  1A40               	xorwf	___ftadd@f2+1,f,c
  5361  00180C  0EFF               	movlw	255
  5362  00180E  1A41               	xorwf	___ftadd@f2+2,f,c
  5363  001810  0E01               	movlw	1
  5364  001812  263F               	addwf	___ftadd@f2,f,c
  5365  001814  0E00               	movlw	0
  5366  001816  2240               	addwfc	___ftadd@f2+1,f,c
  5367  001818  0E00               	movlw	0
  5368  00181A  2241               	addwfc	___ftadd@f2+2,f,c
  5369  00181C                     l2159:
  5370  00181C  0E00               	movlw	0
  5371  00181E  6E45               	movwf	___ftadd@sign,c
  5372  001820  503C               	movf	___ftadd@f1,w,c
  5373  001822  263F               	addwf	___ftadd@f2,f,c
  5374  001824  503D               	movf	___ftadd@f1+1,w,c
  5375  001826  2240               	addwfc	___ftadd@f2+1,f,c
  5376  001828  503E               	movf	___ftadd@f1+2,w,c
  5377  00182A  2241               	addwfc	___ftadd@f2+2,f,c
  5378  00182C  AE41               	btfss	___ftadd@f2+2,7,c
  5379  00182E  D00E               	goto	l2169
  5380  001830  0EFF               	movlw	255
  5381  001832  1A3F               	xorwf	___ftadd@f2,f,c
  5382  001834  0EFF               	movlw	255
  5383  001836  1A40               	xorwf	___ftadd@f2+1,f,c
  5384  001838  0EFF               	movlw	255
  5385  00183A  1A41               	xorwf	___ftadd@f2+2,f,c
  5386  00183C  0E01               	movlw	1
  5387  00183E  263F               	addwf	___ftadd@f2,f,c
  5388  001840  0E00               	movlw	0
  5389  001842  2240               	addwfc	___ftadd@f2+1,f,c
  5390  001844  0E00               	movlw	0
  5391  001846  2241               	addwfc	___ftadd@f2+2,f,c
  5392  001848  0E01               	movlw	1
  5393  00184A  6E45               	movwf	___ftadd@sign,c
  5394  00184C                     l2169:
  5395  00184C  C03F  F00F         	movff	___ftadd@f2,___ftpack@arg
  5396  001850  C040  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  5397  001854  C041  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  5398  001858  C047  F012         	movff	___ftadd@exp1,___ftpack@exp
  5399  00185C  C045  F013         	movff	___ftadd@sign,___ftpack@sign
  5400  001860  ECCD  F00E         	call	___ftpack	;wreg free
  5401  001864  C00F  F03C         	movff	?___ftpack,?___ftadd
  5402  001868  C010  F03D         	movff	?___ftpack+1,?___ftadd+1
  5403  00186C  C011  F03E         	movff	?___ftpack+2,?___ftadd+2
  5404  001870  0012               	return	
  5405  001872                     __end_of___ftadd:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           postinc0	equ	0xFEE
  5415                           wreg	equ	0xFE8
  5416                           indf2	equ	0xFDF
  5417                           postinc2	equ	0xFDE
  5418                           postdec2	equ	0xFDD
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function ___ftneg *****************
  5424 ;; Defined at:
  5425 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  f1              3   14[COMRAM] float 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  3   14[COMRAM] float 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5439 ;;      Params:         3       0       0       0       0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5442 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5443 ;;Total ram usage:        3 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_sprintf
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text25
  5454  0024EA                     __ptext25:
  5455                           	opt stack 0
  5456  0024EA                     ___ftneg:
  5457                           	opt stack 27
  5458                           
  5459                           ;incstack = 0
  5460  0024EA  500F               	movf	___ftneg@f1,w,c
  5461  0024EC  1010               	iorwf	___ftneg@f1+1,w,c
  5462  0024EE  1011               	iorwf	___ftneg@f1+2,w,c
  5463  0024F0  B4D8               	btfsc	status,2,c
  5464  0024F2  D006               	goto	l631
  5465  0024F4  0E00               	movlw	0
  5466  0024F6  1A0F               	xorwf	___ftneg@f1,f,c
  5467  0024F8  0E00               	movlw	0
  5468  0024FA  1A10               	xorwf	___ftneg@f1+1,f,c
  5469  0024FC  0E80               	movlw	128
  5470  0024FE  1A11               	xorwf	___ftneg@f1+2,f,c
  5471  002500                     l631:
  5472  002500  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  5473  002504  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  5474  002508  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  5475  00250C  0012               	return		;funcret
  5476  00250E                     __end_of___ftneg:
  5477                           	opt stack 0
  5478                           tblptru	equ	0xFF8
  5479                           tblptrh	equ	0xFF7
  5480                           tblptrl	equ	0xFF6
  5481                           tablat	equ	0xFF5
  5482                           prodh	equ	0xFF4
  5483                           prodl	equ	0xFF3
  5484                           intcon	equ	0xFF2
  5485                           postinc0	equ	0xFEE
  5486                           wreg	equ	0xFE8
  5487                           indf2	equ	0xFDF
  5488                           postinc2	equ	0xFDE
  5489                           postdec2	equ	0xFDD
  5490                           fsr2h	equ	0xFDA
  5491                           fsr2l	equ	0xFD9
  5492                           status	equ	0xFD8
  5493                           
  5494 ;; *************** function ___ftge *****************
  5495 ;; Defined at:
  5496 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  ff1             3   14[COMRAM] float 
  5499 ;;  ff2             3   17[COMRAM] float 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;		None               void
  5504 ;; Registers used:
  5505 ;;		wreg, status,2, status,0
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         6       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5514 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:        9 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_sprintf
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text26
  5526  001EEC                     __ptext26:
  5527                           	opt stack 0
  5528  001EEC                     ___ftge:
  5529                           	opt stack 27
  5530                           
  5531                           ;incstack = 0
  5532  001EEC  AE11               	btfss	___ftge@ff1+2,7,c
  5533  001EEE  D016               	goto	l2615
  5534  001EF0  C00F  F015         	movff	___ftge@ff1,??___ftge
  5535  001EF4  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  5536  001EF8  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  5537  001EFC  1E15               	comf	??___ftge,f,c
  5538  001EFE  1E16               	comf	??___ftge+1,f,c
  5539  001F00  1E17               	comf	??___ftge+2,f,c
  5540  001F02  2A15               	incf	??___ftge,f,c
  5541  001F04  0E00               	movlw	0
  5542  001F06  2216               	addwfc	??___ftge+1,f,c
  5543  001F08  2217               	addwfc	??___ftge+2,f,c
  5544  001F0A  0E00               	movlw	0
  5545  001F0C  2415               	addwf	??___ftge,w,c
  5546  001F0E  6E0F               	movwf	___ftge@ff1,c
  5547  001F10  0E00               	movlw	0
  5548  001F12  2016               	addwfc	??___ftge+1,w,c
  5549  001F14  6E10               	movwf	___ftge@ff1+1,c
  5550  001F16  0E80               	movlw	128
  5551  001F18  2017               	addwfc	??___ftge+2,w,c
  5552  001F1A  6E11               	movwf	___ftge@ff1+2,c
  5553  001F1C                     l2615:
  5554  001F1C  AE14               	btfss	___ftge@ff2+2,7,c
  5555  001F1E  D016               	goto	l2619
  5556  001F20  C012  F015         	movff	___ftge@ff2,??___ftge
  5557  001F24  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  5558  001F28  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  5559  001F2C  1E15               	comf	??___ftge,f,c
  5560  001F2E  1E16               	comf	??___ftge+1,f,c
  5561  001F30  1E17               	comf	??___ftge+2,f,c
  5562  001F32  2A15               	incf	??___ftge,f,c
  5563  001F34  0E00               	movlw	0
  5564  001F36  2216               	addwfc	??___ftge+1,f,c
  5565  001F38  2217               	addwfc	??___ftge+2,f,c
  5566  001F3A  0E00               	movlw	0
  5567  001F3C  2415               	addwf	??___ftge,w,c
  5568  001F3E  6E12               	movwf	___ftge@ff2,c
  5569  001F40  0E00               	movlw	0
  5570  001F42  2016               	addwfc	??___ftge+1,w,c
  5571  001F44  6E13               	movwf	___ftge@ff2+1,c
  5572  001F46  0E80               	movlw	128
  5573  001F48  2017               	addwfc	??___ftge+2,w,c
  5574  001F4A  6E14               	movwf	___ftge@ff2+2,c
  5575  001F4C                     l2619:
  5576  001F4C  0E00               	movlw	0
  5577  001F4E  1A0F               	xorwf	___ftge@ff1,f,c
  5578  001F50  0E00               	movlw	0
  5579  001F52  1A10               	xorwf	___ftge@ff1+1,f,c
  5580  001F54  0E80               	movlw	128
  5581  001F56  1A11               	xorwf	___ftge@ff1+2,f,c
  5582  001F58  0E00               	movlw	0
  5583  001F5A  1A12               	xorwf	___ftge@ff2,f,c
  5584  001F5C  0E00               	movlw	0
  5585  001F5E  1A13               	xorwf	___ftge@ff2+1,f,c
  5586  001F60  0E80               	movlw	128
  5587  001F62  1A14               	xorwf	___ftge@ff2+2,f,c
  5588  001F64  5012               	movf	___ftge@ff2,w,c
  5589  001F66  5C0F               	subwf	___ftge@ff1,w,c
  5590  001F68  5013               	movf	___ftge@ff2+1,w,c
  5591  001F6A  5810               	subwfb	___ftge@ff1+1,w,c
  5592  001F6C  5014               	movf	___ftge@ff2+2,w,c
  5593  001F6E  5811               	subwfb	___ftge@ff1+2,w,c
  5594  001F70  B0D8               	btfsc	status,0,c
  5595  001F72  D002               	goto	l2625
  5596  001F74  90D8               	bcf	status,0,c
  5597  001F76  0012               	return	
  5598  001F78                     l2625:
  5599  001F78  80D8               	bsf	status,0,c
  5600  001F7A  0012               	return	
  5601  001F7C                     __end_of___ftge:
  5602                           	opt stack 0
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           postinc0	equ	0xFEE
  5611                           wreg	equ	0xFE8
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           postdec2	equ	0xFDD
  5615                           fsr2h	equ	0xFDA
  5616                           fsr2l	equ	0xFD9
  5617                           status	equ	0xFD8
  5618                           
  5619 ;; *************** function ___lwtoft *****************
  5620 ;; Defined at:
  5621 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  c               2   22[COMRAM] unsigned int 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  3   22[COMRAM] float 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5635 ;;      Params:         3       0       0       0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5638 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5639 ;;Total ram usage:        3 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    2
  5642 ;; This function calls:
  5643 ;;		___ftpack
  5644 ;; This function is called by:
  5645 ;;		_WriteTemp
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text27
  5650  00250E                     __ptext27:
  5651                           	opt stack 0
  5652  00250E                     ___lwtoft:
  5653                           	opt stack 27
  5654                           
  5655                           ;incstack = 0
  5656  00250E  C017  F00F         	movff	___lwtoft@c,___ftpack@arg
  5657  002512  C018  F010         	movff	___lwtoft@c+1,___ftpack@arg+1
  5658  002516  6A11               	clrf	___ftpack@arg+2,c
  5659  002518  0E8E               	movlw	142
  5660  00251A  6E12               	movwf	___ftpack@exp,c
  5661  00251C  0E00               	movlw	0
  5662  00251E  6E13               	movwf	___ftpack@sign,c
  5663  002520  ECCD  F00E         	call	___ftpack	;wreg free
  5664  002524  C00F  F017         	movff	?___ftpack,?___lwtoft
  5665  002528  C010  F018         	movff	?___ftpack+1,?___lwtoft+1
  5666  00252C  C011  F019         	movff	?___ftpack+2,?___lwtoft+2
  5667  002530  0012               	return	
  5668  002532                     __end_of___lwtoft:
  5669                           	opt stack 0
  5670                           tblptru	equ	0xFF8
  5671                           tblptrh	equ	0xFF7
  5672                           tblptrl	equ	0xFF6
  5673                           tablat	equ	0xFF5
  5674                           prodh	equ	0xFF4
  5675                           prodl	equ	0xFF3
  5676                           intcon	equ	0xFF2
  5677                           postinc0	equ	0xFEE
  5678                           wreg	equ	0xFE8
  5679                           indf2	equ	0xFDF
  5680                           postinc2	equ	0xFDE
  5681                           postdec2	equ	0xFDD
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function ___ftdiv *****************
  5687 ;; Defined at:
  5688 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  f1              3   49[COMRAM] float 
  5691 ;;  f2              3   52[COMRAM] float 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  f3              3   59[COMRAM] float 
  5694 ;;  sign            1   63[COMRAM] unsigned char 
  5695 ;;  exp             1   62[COMRAM] unsigned char 
  5696 ;;  cntr            1   58[COMRAM] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  3   49[COMRAM] float 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5706 ;;      Params:         6       0       0       0       0       0       0       0       0
  5707 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5708 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5709 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5710 ;;Total ram usage:       15 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    2
  5713 ;; This function calls:
  5714 ;;		___ftpack
  5715 ;; This function is called by:
  5716 ;;		_WriteTemp
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text28
  5721  001CB4                     __ptext28:
  5722                           	opt stack 0
  5723  001CB4                     ___ftdiv:
  5724                           	opt stack 27
  5725                           
  5726                           ;incstack = 0
  5727  001CB4  C034  F038         	movff	___ftdiv@f1+2,??___ftdiv
  5728  001CB8  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  5729  001CBA  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  5730  001CBC  3433               	rlcf	___ftdiv@f1+1,w,c
  5731  001CBE  3638               	rlcf	??___ftdiv& (0+255),f,c
  5732  001CC0  E301               	bnc	u2851
  5733  001CC2  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  5734  001CC4                     u2851:
  5735  001CC4  5038               	movf	??___ftdiv,w,c
  5736  001CC6  6E3F               	movwf	___ftdiv@exp,c
  5737  001CC8  503F               	movf	___ftdiv@exp,w,c
  5738  001CCA  A4D8               	btfss	status,2,c
  5739  001CCC  D007               	goto	l3003
  5740  001CCE  0E00               	movlw	0
  5741  001CD0  6E32               	movwf	?___ftdiv,c
  5742  001CD2  0E00               	movlw	0
  5743  001CD4  6E33               	movwf	?___ftdiv+1,c
  5744  001CD6  0E00               	movlw	0
  5745  001CD8  6E34               	movwf	?___ftdiv+2,c
  5746  001CDA  0012               	return	
  5747  001CDC                     l3003:
  5748  001CDC  C037  F038         	movff	___ftdiv@f2+2,??___ftdiv
  5749  001CE0  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  5750  001CE2  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  5751  001CE4  3436               	rlcf	___ftdiv@f2+1,w,c
  5752  001CE6  3638               	rlcf	??___ftdiv& (0+255),f,c
  5753  001CE8  E301               	bnc	u2871
  5754  001CEA  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  5755  001CEC                     u2871:
  5756  001CEC  5038               	movf	??___ftdiv,w,c
  5757  001CEE  6E40               	movwf	___ftdiv@sign,c
  5758  001CF0  5040               	movf	___ftdiv@sign,w,c
  5759  001CF2  A4D8               	btfss	status,2,c
  5760  001CF4  D007               	goto	l3009
  5761  001CF6  0E00               	movlw	0
  5762  001CF8  6E32               	movwf	?___ftdiv,c
  5763  001CFA  0E00               	movlw	0
  5764  001CFC  6E33               	movwf	?___ftdiv+1,c
  5765  001CFE  0E00               	movlw	0
  5766  001D00  6E34               	movwf	?___ftdiv+2,c
  5767  001D02  0012               	return	
  5768  001D04                     l3009:
  5769  001D04  0E00               	movlw	0
  5770  001D06  6E3C               	movwf	___ftdiv@f3,c
  5771  001D08  0E00               	movlw	0
  5772  001D0A  6E3D               	movwf	___ftdiv@f3+1,c
  5773  001D0C  0E00               	movlw	0
  5774  001D0E  6E3E               	movwf	___ftdiv@f3+2,c
  5775  001D10  5040               	movf	___ftdiv@sign,w,c
  5776  001D12  0F89               	addlw	137
  5777  001D14  5E3F               	subwf	___ftdiv@exp,f,c
  5778  001D16  C034  F040         	movff	___ftdiv@f1+2,___ftdiv@sign
  5779  001D1A  5037               	movf	___ftdiv@f2+2,w,c
  5780  001D1C  1A40               	xorwf	___ftdiv@sign,f,c
  5781  001D1E  0E80               	movlw	128
  5782  001D20  1640               	andwf	___ftdiv@sign,f,c
  5783  001D22  8E33               	bsf	___ftdiv@f1+1,7,c
  5784  001D24  0EFF               	movlw	255
  5785  001D26  1632               	andwf	___ftdiv@f1,f,c
  5786  001D28  0EFF               	movlw	255
  5787  001D2A  1633               	andwf	___ftdiv@f1+1,f,c
  5788  001D2C  0E00               	movlw	0
  5789  001D2E  1634               	andwf	___ftdiv@f1+2,f,c
  5790  001D30  8E36               	bsf	___ftdiv@f2+1,7,c
  5791  001D32  0EFF               	movlw	255
  5792  001D34  1635               	andwf	___ftdiv@f2,f,c
  5793  001D36  0EFF               	movlw	255
  5794  001D38  1636               	andwf	___ftdiv@f2+1,f,c
  5795  001D3A  0E00               	movlw	0
  5796  001D3C  1637               	andwf	___ftdiv@f2+2,f,c
  5797  001D3E  0E18               	movlw	24
  5798  001D40  6E3B               	movwf	___ftdiv@cntr,c
  5799  001D42                     l3029:
  5800  001D42  90D8               	bcf	status,0,c
  5801  001D44  363C               	rlcf	___ftdiv@f3,f,c
  5802  001D46  363D               	rlcf	___ftdiv@f3+1,f,c
  5803  001D48  363E               	rlcf	___ftdiv@f3+2,f,c
  5804  001D4A  5035               	movf	___ftdiv@f2,w,c
  5805  001D4C  5C32               	subwf	___ftdiv@f1,w,c
  5806  001D4E  5036               	movf	___ftdiv@f2+1,w,c
  5807  001D50  5833               	subwfb	___ftdiv@f1+1,w,c
  5808  001D52  5037               	movf	___ftdiv@f2+2,w,c
  5809  001D54  5834               	subwfb	___ftdiv@f1+2,w,c
  5810  001D56  A0D8               	btfss	status,0,c
  5811  001D58  D007               	goto	l592
  5812  001D5A  5035               	movf	___ftdiv@f2,w,c
  5813  001D5C  5E32               	subwf	___ftdiv@f1,f,c
  5814  001D5E  5036               	movf	___ftdiv@f2+1,w,c
  5815  001D60  5A33               	subwfb	___ftdiv@f1+1,f,c
  5816  001D62  5037               	movf	___ftdiv@f2+2,w,c
  5817  001D64  5A34               	subwfb	___ftdiv@f1+2,f,c
  5818  001D66  803C               	bsf	___ftdiv@f3,0,c
  5819  001D68                     l592:
  5820  001D68  90D8               	bcf	status,0,c
  5821  001D6A  3632               	rlcf	___ftdiv@f1,f,c
  5822  001D6C  3633               	rlcf	___ftdiv@f1+1,f,c
  5823  001D6E  3634               	rlcf	___ftdiv@f1+2,f,c
  5824  001D70  2E3B               	decfsz	___ftdiv@cntr,f,c
  5825  001D72  D7E7               	goto	l3029
  5826  001D74  C03C  F00F         	movff	___ftdiv@f3,___ftpack@arg
  5827  001D78  C03D  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5828  001D7C  C03E  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5829  001D80  C03F  F012         	movff	___ftdiv@exp,___ftpack@exp
  5830  001D84  C040  F013         	movff	___ftdiv@sign,___ftpack@sign
  5831  001D88  ECCD  F00E         	call	___ftpack	;wreg free
  5832  001D8C  C00F  F032         	movff	?___ftpack,?___ftdiv
  5833  001D90  C010  F033         	movff	?___ftpack+1,?___ftdiv+1
  5834  001D94  C011  F034         	movff	?___ftpack+2,?___ftdiv+2
  5835  001D98  0012               	return	
  5836  001D9A                     __end_of___ftdiv:
  5837                           	opt stack 0
  5838                           tblptru	equ	0xFF8
  5839                           tblptrh	equ	0xFF7
  5840                           tblptrl	equ	0xFF6
  5841                           tablat	equ	0xFF5
  5842                           prodh	equ	0xFF4
  5843                           prodl	equ	0xFF3
  5844                           intcon	equ	0xFF2
  5845                           postinc0	equ	0xFEE
  5846                           wreg	equ	0xFE8
  5847                           indf2	equ	0xFDF
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           fsr2h	equ	0xFDA
  5851                           fsr2l	equ	0xFD9
  5852                           status	equ	0xFD8
  5853                           
  5854 ;; *************** function ___ftpack *****************
  5855 ;; Defined at:
  5856 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  arg             3   14[COMRAM] unsigned um
  5859 ;;  exp             1   17[COMRAM] unsigned char 
  5860 ;;  sign            1   18[COMRAM] unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  3   14[COMRAM] float 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5872 ;;      Params:         5       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5875 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        8 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		___ftadd
  5883 ;;		___ftdiv
  5884 ;;		___ftmul
  5885 ;;		___lltoft
  5886 ;;		___lwtoft
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text29
  5891  001D9A                     __ptext29:
  5892                           	opt stack 0
  5893  001D9A                     ___ftpack:
  5894                           	opt stack 25
  5895                           
  5896                           ;incstack = 0
  5897  001D9A  5012               	movf	___ftpack@exp,w,c
  5898  001D9C  B4D8               	btfsc	status,2,c
  5899  001D9E  D005               	goto	l2059
  5900  001DA0  500F               	movf	___ftpack@arg,w,c
  5901  001DA2  1010               	iorwf	___ftpack@arg+1,w,c
  5902  001DA4  1011               	iorwf	___ftpack@arg+2,w,c
  5903  001DA6  A4D8               	btfss	status,2,c
  5904  001DA8  D00C               	goto	l2065
  5905  001DAA                     l2059:
  5906  001DAA  0E00               	movlw	0
  5907  001DAC  6E0F               	movwf	?___ftpack,c
  5908  001DAE  0E00               	movlw	0
  5909  001DB0  6E10               	movwf	?___ftpack+1,c
  5910  001DB2  0E00               	movlw	0
  5911  001DB4  6E11               	movwf	?___ftpack+2,c
  5912  001DB6  0012               	return	
  5913  001DB8                     l2063:
  5914  001DB8  2A12               	incf	___ftpack@exp,f,c
  5915  001DBA  90D8               	bcf	status,0,c
  5916  001DBC  3211               	rrcf	___ftpack@arg+2,f,c
  5917  001DBE  3210               	rrcf	___ftpack@arg+1,f,c
  5918  001DC0  320F               	rrcf	___ftpack@arg,f,c
  5919  001DC2                     l2065:
  5920  001DC2  0E00               	movlw	0
  5921  001DC4  140F               	andwf	___ftpack@arg,w,c
  5922  001DC6  6E14               	movwf	??___ftpack& (0+255),c
  5923  001DC8  0E00               	movlw	0
  5924  001DCA  1410               	andwf	___ftpack@arg+1,w,c
  5925  001DCC  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5926  001DCE  0EFE               	movlw	254
  5927  001DD0  1411               	andwf	___ftpack@arg+2,w,c
  5928  001DD2  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5929  001DD4  5014               	movf	??___ftpack,w,c
  5930  001DD6  1015               	iorwf	??___ftpack+1,w,c
  5931  001DD8  1016               	iorwf	??___ftpack+2,w,c
  5932  001DDA  B4D8               	btfsc	status,2,c
  5933  001DDC  D00C               	goto	l2071
  5934  001DDE  D7EC               	goto	l2063
  5935  001DE0                     l2067:
  5936  001DE0  2A12               	incf	___ftpack@exp,f,c
  5937  001DE2  0E01               	movlw	1
  5938  001DE4  260F               	addwf	___ftpack@arg,f,c
  5939  001DE6  0E00               	movlw	0
  5940  001DE8  2210               	addwfc	___ftpack@arg+1,f,c
  5941  001DEA  0E00               	movlw	0
  5942  001DEC  2211               	addwfc	___ftpack@arg+2,f,c
  5943  001DEE  90D8               	bcf	status,0,c
  5944  001DF0  3211               	rrcf	___ftpack@arg+2,f,c
  5945  001DF2  3210               	rrcf	___ftpack@arg+1,f,c
  5946  001DF4  320F               	rrcf	___ftpack@arg,f,c
  5947  001DF6                     l2071:
  5948  001DF6  0E00               	movlw	0
  5949  001DF8  140F               	andwf	___ftpack@arg,w,c
  5950  001DFA  6E14               	movwf	??___ftpack& (0+255),c
  5951  001DFC  0E00               	movlw	0
  5952  001DFE  1410               	andwf	___ftpack@arg+1,w,c
  5953  001E00  6E15               	movwf	(??___ftpack+1)& (0+255),c
  5954  001E02  0EFF               	movlw	255
  5955  001E04  1411               	andwf	___ftpack@arg+2,w,c
  5956  001E06  6E16               	movwf	(??___ftpack+2)& (0+255),c
  5957  001E08  5014               	movf	??___ftpack,w,c
  5958  001E0A  1015               	iorwf	??___ftpack+1,w,c
  5959  001E0C  1016               	iorwf	??___ftpack+2,w,c
  5960  001E0E  B4D8               	btfsc	status,2,c
  5961  001E10  D006               	goto	l2075
  5962  001E12  D7E6               	goto	l2067
  5963  001E14                     l2073:
  5964  001E14  0612               	decf	___ftpack@exp,f,c
  5965  001E16  90D8               	bcf	status,0,c
  5966  001E18  360F               	rlcf	___ftpack@arg,f,c
  5967  001E1A  3610               	rlcf	___ftpack@arg+1,f,c
  5968  001E1C  3611               	rlcf	___ftpack@arg+2,f,c
  5969  001E1E                     l2075:
  5970  001E1E  BE10               	btfsc	___ftpack@arg+1,7,c
  5971  001E20  D003               	goto	l534
  5972  001E22  0E02               	movlw	2
  5973  001E24  6012               	cpfslt	___ftpack@exp,c
  5974  001E26  D7F6               	goto	l2073
  5975  001E28                     l534:
  5976  001E28  A012               	btfss	___ftpack@exp,0,c
  5977  001E2A  9E10               	bcf	___ftpack@arg+1,7,c
  5978  001E2C  90D8               	bcf	status,0,c
  5979  001E2E  3212               	rrcf	___ftpack@exp,f,c
  5980  001E30  5012               	movf	___ftpack@exp,w,c
  5981  001E32  1211               	iorwf	___ftpack@arg+2,f,c
  5982  001E34  5013               	movf	___ftpack@sign,w,c
  5983  001E36  A4D8               	btfss	status,2,c
  5984  001E38  8E11               	bsf	___ftpack@arg+2,7,c
  5985  001E3A  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  5986  001E3E  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  5987  001E42  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  5988  001E46  0012               	return	
  5989  001E48                     __end_of___ftpack:
  5990                           	opt stack 0
  5991                           tblptru	equ	0xFF8
  5992                           tblptrh	equ	0xFF7
  5993                           tblptrl	equ	0xFF6
  5994                           tablat	equ	0xFF5
  5995                           prodh	equ	0xFF4
  5996                           prodl	equ	0xFF3
  5997                           intcon	equ	0xFF2
  5998                           postinc0	equ	0xFEE
  5999                           wreg	equ	0xFE8
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function _WriteLCD *****************
  6008 ;; Defined at:
  6009 ;;		line 51 in file "main.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;  nome           16    0        unsigned char [16]
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    5
  6030 ;; This function calls:
  6031 ;;		_SetDDRamAddr
  6032 ;;		_putrsXLCD
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text30
  6039  0025C0                     __ptext30:
  6040                           	opt stack 0
  6041  0025C0                     _WriteLCD:
  6042                           	opt stack 25
  6043                           
  6044                           ;main.c: 52: char nome[16];
  6045                           ;main.c: 53: SetDDRamAddr(0x00);
  6046                           
  6047                           ;incstack = 0
  6048  0025C0  0E00               	movlw	0
  6049  0025C2  ECBE  F011         	call	_SetDDRamAddr
  6050                           
  6051                           ;main.c: 54: putrsXLCD("Temp:");
  6052  0025C6  0E8E               	movlw	low STR_1
  6053  0025C8  6E11               	movwf	putrsXLCD@buffer,c
  6054  0025CA  0E08               	movlw	high STR_1
  6055  0025CC  6E12               	movwf	putrsXLCD@buffer+1,c
  6056  0025CE  EC90  F011         	call	_putrsXLCD	;wreg free
  6057  0025D2  0012               	return		;funcret
  6058  0025D4                     __end_of_WriteLCD:
  6059                           	opt stack 0
  6060                           tblptru	equ	0xFF8
  6061                           tblptrh	equ	0xFF7
  6062                           tblptrl	equ	0xFF6
  6063                           tablat	equ	0xFF5
  6064                           prodh	equ	0xFF4
  6065                           prodl	equ	0xFF3
  6066                           intcon	equ	0xFF2
  6067                           postinc0	equ	0xFEE
  6068                           wreg	equ	0xFE8
  6069                           indf2	equ	0xFDF
  6070                           postinc2	equ	0xFDE
  6071                           postdec2	equ	0xFDD
  6072                           fsr2h	equ	0xFDA
  6073                           fsr2l	equ	0xFD9
  6074                           status	equ	0xFD8
  6075                           
  6076 ;; *************** function _putrsXLCD *****************
  6077 ;; Defined at:
  6078 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  buffer          2   16[COMRAM] PTR const unsigned char 
  6081 ;;		 -> STR_3(23), valor(16), STR_1(6), 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6093 ;;      Params:         2       0       0       0       0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6096 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6097 ;;Total ram usage:        2 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    4
  6100 ;; This function calls:
  6101 ;;		_BusyXLCD
  6102 ;;		_WriteDataXLCD
  6103 ;; This function is called by:
  6104 ;;		_WriteLCD
  6105 ;;		_WriteTemp
  6106 ;;		_main
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text31
  6111  002320                     __ptext31:
  6112                           	opt stack 0
  6113  002320                     _putrsXLCD:
  6114                           	opt stack 26
  6115                           
  6116                           ;incstack = 0
  6117  002320  D019               	goto	l2789
  6118  002322                     l2783:
  6119  002322  EC45  F012         	call	_BusyXLCD	;wreg free
  6120  002326  0900               	iorlw	0
  6121  002328  A4D8               	btfss	status,2,c
  6122  00232A  D7FB               	goto	l2783
  6123  00232C  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  6124  002330  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  6125  002334  6AF8               	clrf	tblptru,c
  6126  002336  0E07               	movlw	(high __ramtop+-1)
  6127  002338  64F7               	cpfsgt	tblptrh,c
  6128  00233A  D003               	bra	u2497
  6129  00233C  0008               	tblrd		*
  6130  00233E  50F5               	movf	tablat,w,c
  6131  002340  D005               	bra	u2490
  6132  002342                     u2497:
  6133  002342  CFF6 FFE9          	movff	tblptrl,fsr0l
  6134  002346  CFF7 FFEA          	movff	tblptrh,fsr0h
  6135  00234A  50EF               	movf	indf0,w,c
  6136  00234C                     u2490:
  6137  00234C  EC26  F012         	call	_WriteDataXLCD
  6138  002350  4A11               	infsnz	putrsXLCD@buffer,f,c
  6139  002352  2A12               	incf	putrsXLCD@buffer+1,f,c
  6140  002354                     l2789:
  6141  002354  C011  FFF6         	movff	putrsXLCD@buffer,tblptrl
  6142  002358  C012  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  6143  00235C  6AF8               	clrf	tblptru,c
  6144  00235E  0E07               	movlw	(high __ramtop+-1)
  6145  002360  64F7               	cpfsgt	tblptrh,c
  6146  002362  D003               	bra	u2507
  6147  002364  0008               	tblrd		*
  6148  002366  50F5               	movf	tablat,w,c
  6149  002368  D005               	bra	u2500
  6150  00236A                     u2507:
  6151  00236A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6152  00236E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6153  002372  50EF               	movf	indf0,w,c
  6154  002374                     u2500:
  6155  002374  0900               	iorlw	0
  6156  002376  B4D8               	btfsc	status,2,c
  6157  002378  0012               	return	
  6158  00237A  D7D3               	goto	l2783
  6159  00237C                     __end_of_putrsXLCD:
  6160                           	opt stack 0
  6161                           tblptru	equ	0xFF8
  6162                           tblptrh	equ	0xFF7
  6163                           tblptrl	equ	0xFF6
  6164                           tablat	equ	0xFF5
  6165                           prodh	equ	0xFF4
  6166                           prodl	equ	0xFF3
  6167                           intcon	equ	0xFF2
  6168                           indf0	equ	0xFEF
  6169                           postinc0	equ	0xFEE
  6170                           fsr0h	equ	0xFEA
  6171                           fsr0l	equ	0xFE9
  6172                           wreg	equ	0xFE8
  6173                           indf2	equ	0xFDF
  6174                           postinc2	equ	0xFDE
  6175                           postdec2	equ	0xFDD
  6176                           fsr2h	equ	0xFDA
  6177                           fsr2l	equ	0xFD9
  6178                           status	equ	0xFD8
  6179                           
  6180 ;; *************** function _WriteDataXLCD *****************
  6181 ;; Defined at:
  6182 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  data            1    wreg     unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  data            1   15[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0
  6197 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6199 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6200 ;;Total ram usage:        1 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    3
  6203 ;; This function calls:
  6204 ;;		_DelayFor18TCY
  6205 ;; This function is called by:
  6206 ;;		_putrsXLCD
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text32
  6211  00244C                     __ptext32:
  6212                           	opt stack 0
  6213  00244C                     _WriteDataXLCD:
  6214                           	opt stack 26
  6215                           
  6216                           ;incstack = 0
  6217                           ;WriteDataXLCD@data stored from wreg
  6218  00244C  6E10               	movwf	WriteDataXLCD@data,c
  6219  00244E  0EF0               	movlw	240
  6220  002450  1693               	andwf	3987,f,c	;volatile
  6221  002452  0EF0               	movlw	240
  6222  002454  1681               	andwf	3969,f,c	;volatile
  6223  002456  3810               	swapf	WriteDataXLCD@data,w,c
  6224  002458  0B0F               	andlw	15
  6225  00245A  0B0F               	andlw	15
  6226  00245C  1281               	iorwf	3969,f,c	;volatile
  6227  00245E  8A8A               	bsf	3978,5,c	;volatile
  6228  002460  9C8A               	bcf	3978,6,c	;volatile
  6229  002462  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6230  002466  888A               	bsf	3978,4,c	;volatile
  6231  002468  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6232  00246C  988A               	bcf	3978,4,c	;volatile
  6233  00246E  0EF0               	movlw	240
  6234  002470  1681               	andwf	3969,f,c	;volatile
  6235  002472  5010               	movf	WriteDataXLCD@data,w,c
  6236  002474  0B0F               	andlw	15
  6237  002476  1281               	iorwf	3969,f,c	;volatile
  6238  002478  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6239  00247C  888A               	bsf	3978,4,c	;volatile
  6240  00247E  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6241  002482  988A               	bcf	3978,4,c	;volatile
  6242  002484  0E0F               	movlw	15
  6243  002486  1293               	iorwf	3987,f,c	;volatile
  6244  002488  0012               	return	
  6245  00248A                     __end_of_WriteDataXLCD:
  6246                           	opt stack 0
  6247                           tblptru	equ	0xFF8
  6248                           tblptrh	equ	0xFF7
  6249                           tblptrl	equ	0xFF6
  6250                           tablat	equ	0xFF5
  6251                           prodh	equ	0xFF4
  6252                           prodl	equ	0xFF3
  6253                           intcon	equ	0xFF2
  6254                           indf0	equ	0xFEF
  6255                           postinc0	equ	0xFEE
  6256                           fsr0h	equ	0xFEA
  6257                           fsr0l	equ	0xFE9
  6258                           wreg	equ	0xFE8
  6259                           indf2	equ	0xFDF
  6260                           postinc2	equ	0xFDE
  6261                           postdec2	equ	0xFDD
  6262                           fsr2h	equ	0xFDA
  6263                           fsr2l	equ	0xFD9
  6264                           status	equ	0xFD8
  6265                           
  6266 ;; *************** function _BusyXLCD *****************
  6267 ;; Defined at:
  6268 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      unsigned char 
  6275 ;; Registers used:
  6276 ;;		wreg, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6285 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6286 ;;Total ram usage:        0 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    3
  6289 ;; This function calls:
  6290 ;;		_DelayFor18TCY
  6291 ;; This function is called by:
  6292 ;;		_init_XLCD
  6293 ;;		_OpenXLCD
  6294 ;;		_putrsXLCD
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text33
  6299  00248A                     __ptext33:
  6300                           	opt stack 0
  6301  00248A                     _BusyXLCD:
  6302                           	opt stack 26
  6303                           
  6304                           ;incstack = 0
  6305  00248A  8C8A               	bsf	3978,6,c	;volatile
  6306  00248C  9A8A               	bcf	3978,5,c	;volatile
  6307  00248E  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6308  002492  888A               	bsf	3978,4,c	;volatile
  6309  002494  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6310  002498  A681               	btfss	3969,3,c	;volatile
  6311  00249A  D00A               	goto	l181
  6312  00249C  988A               	bcf	3978,4,c	;volatile
  6313  00249E  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6314  0024A2  888A               	bsf	3978,4,c	;volatile
  6315  0024A4  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6316  0024A8  988A               	bcf	3978,4,c	;volatile
  6317  0024AA  9C8A               	bcf	3978,6,c	;volatile
  6318  0024AC  0E01               	movlw	1
  6319  0024AE  0012               	return	
  6320  0024B0                     l181:
  6321  0024B0  988A               	bcf	3978,4,c	;volatile
  6322  0024B2  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6323  0024B6  888A               	bsf	3978,4,c	;volatile
  6324  0024B8  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6325  0024BC  988A               	bcf	3978,4,c	;volatile
  6326  0024BE  9C8A               	bcf	3978,6,c	;volatile
  6327  0024C0  0E00               	movlw	0
  6328  0024C2  0012               	return	
  6329  0024C4                     __end_of_BusyXLCD:
  6330                           	opt stack 0
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           prodh	equ	0xFF4
  6336                           prodl	equ	0xFF3
  6337                           intcon	equ	0xFF2
  6338                           indf0	equ	0xFEF
  6339                           postinc0	equ	0xFEE
  6340                           fsr0h	equ	0xFEA
  6341                           fsr0l	equ	0xFE9
  6342                           wreg	equ	0xFE8
  6343                           indf2	equ	0xFDF
  6344                           postinc2	equ	0xFDE
  6345                           postdec2	equ	0xFDD
  6346                           fsr2h	equ	0xFDA
  6347                           fsr2l	equ	0xFD9
  6348                           status	equ	0xFD8
  6349                           
  6350 ;; *************** function _SetDDRamAddr *****************
  6351 ;; Defined at:
  6352 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  DDaddr          1    wreg     unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  DDaddr          1   18[COMRAM] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6368 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        4 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    3
  6373 ;; This function calls:
  6374 ;;		_DelayFor18TCY
  6375 ;; This function is called by:
  6376 ;;		_WriteLCD
  6377 ;;		_WriteTemp
  6378 ;;		_main
  6379 ;;		_OpenXLCD
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text34
  6384  00237C                     __ptext34:
  6385                           	opt stack 0
  6386  00237C                     _SetDDRamAddr:
  6387                           	opt stack 25
  6388                           
  6389                           ;incstack = 0
  6390                           ;SetDDRamAddr@DDaddr stored from wreg
  6391  00237C  6E13               	movwf	SetDDRamAddr@DDaddr,c
  6392  00237E  0EF0               	movlw	240
  6393  002380  1693               	andwf	3987,f,c	;volatile
  6394  002382  0EF0               	movlw	240
  6395  002384  1681               	andwf	3969,f,c	;volatile
  6396  002386  5013               	movf	SetDDRamAddr@DDaddr,w,c
  6397  002388  6E10               	movwf	??_SetDDRamAddr& (0+255),c
  6398  00238A  6A11               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  6399  00238C  8E10               	bsf	??_SetDDRamAddr,7,c
  6400  00238E  0E04               	movlw	4
  6401  002390  6E12               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  6402  002392                     u1955:
  6403  002392  3411               	rlcf	??_SetDDRamAddr+1,w,c
  6404  002394  3211               	rrcf	??_SetDDRamAddr+1,f,c
  6405  002396  3210               	rrcf	??_SetDDRamAddr,f,c
  6406  002398  2E12               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  6407  00239A  D7FB               	goto	u1955
  6408  00239C  5010               	movf	??_SetDDRamAddr,w,c
  6409  00239E  0B0F               	andlw	15
  6410  0023A0  1281               	iorwf	3969,f,c	;volatile
  6411  0023A2  9C8A               	bcf	3978,6,c	;volatile
  6412  0023A4  9A8A               	bcf	3978,5,c	;volatile
  6413  0023A6  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6414  0023AA  888A               	bsf	3978,4,c	;volatile
  6415  0023AC  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6416  0023B0  988A               	bcf	3978,4,c	;volatile
  6417  0023B2  0EF0               	movlw	240
  6418  0023B4  1681               	andwf	3969,f,c	;volatile
  6419  0023B6  5013               	movf	SetDDRamAddr@DDaddr,w,c
  6420  0023B8  0B0F               	andlw	15
  6421  0023BA  1281               	iorwf	3969,f,c	;volatile
  6422  0023BC  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6423  0023C0  888A               	bsf	3978,4,c	;volatile
  6424  0023C2  EC08  F013         	call	_DelayFor18TCY	;wreg free
  6425  0023C6  988A               	bcf	3978,4,c	;volatile
  6426  0023C8  0E0F               	movlw	15
  6427  0023CA  1293               	iorwf	3987,f,c	;volatile
  6428  0023CC  0012               	return	
  6429  0023CE                     __end_of_SetDDRamAddr:
  6430                           	opt stack 0
  6431                           tblptru	equ	0xFF8
  6432                           tblptrh	equ	0xFF7
  6433                           tblptrl	equ	0xFF6
  6434                           tablat	equ	0xFF5
  6435                           prodh	equ	0xFF4
  6436                           prodl	equ	0xFF3
  6437                           intcon	equ	0xFF2
  6438                           indf0	equ	0xFEF
  6439                           postinc0	equ	0xFEE
  6440                           fsr0h	equ	0xFEA
  6441                           fsr0l	equ	0xFE9
  6442                           wreg	equ	0xFE8
  6443                           indf2	equ	0xFDF
  6444                           postinc2	equ	0xFDE
  6445                           postdec2	equ	0xFDD
  6446                           fsr2h	equ	0xFDA
  6447                           fsr2l	equ	0xFD9
  6448                           status	equ	0xFD8
  6449                           
  6450 ;; *************** function _DelayFor18TCY *****************
  6451 ;; Defined at:
  6452 ;;		line 13 in file "main.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6470 ;;Total ram usage:        0 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    2
  6473 ;; This function calls:
  6474 ;;		_Delay10TCYx
  6475 ;; This function is called by:
  6476 ;;		_BusyXLCD
  6477 ;;		_SetDDRamAddr
  6478 ;;		_WriteCmdXLCD
  6479 ;;		_WriteDataXLCD
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text35
  6484  002610                     __ptext35:
  6485                           	opt stack 0
  6486  002610                     _DelayFor18TCY:
  6487                           	opt stack 26
  6488                           
  6489                           ;main.c: 14: Delay10TCYx(120);
  6490                           
  6491                           ;incstack = 0
  6492  002610  0E78               	movlw	120
  6493  002612  ECFC  F012         	call	_Delay10TCYx
  6494  002616  0012               	return		;funcret
  6495  002618                     __end_of_DelayFor18TCY:
  6496                           	opt stack 0
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           indf0	equ	0xFEF
  6505                           postinc0	equ	0xFEE
  6506                           fsr0h	equ	0xFEA
  6507                           fsr0l	equ	0xFE9
  6508                           wreg	equ	0xFE8
  6509                           indf2	equ	0xFDF
  6510                           postinc2	equ	0xFDE
  6511                           postdec2	equ	0xFDD
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _Delay10TCYx *****************
  6517 ;; Defined at:
  6518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  unit            1    wreg     unsigned char 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  unit            1   14[COMRAM] unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      void 
  6525 ;; Registers used:
  6526 ;;		wreg
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6532 ;;      Params:         0       0       0       0       0       0       0       0       0
  6533 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6535 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6536 ;;Total ram usage:        1 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_DelayFor18TCY
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text36
  6547  0025F8                     __ptext36:
  6548                           	opt stack 0
  6549  0025F8                     _Delay10TCYx:
  6550                           	opt stack 26
  6551                           
  6552                           ;incstack = 0
  6553                           ;Delay10TCYx@unit stored from wreg
  6554  0025F8  6E0F               	movwf	Delay10TCYx@unit,c
  6555  0025FA  0E03               	movlw	3
  6556  0025FC                     u2957:
  6557  0025FC  2EE8               	decfsz	wreg,f,c
  6558  0025FE  D7FE               	bra	u2957
  6559  002600  F000               	nop	
  6560  002602  2E0F               	decfsz	Delay10TCYx@unit,f,c
  6561  002604  D7FA               	goto	l2051
  6562  002606  0012               	return	
  6563  002608                     __end_of_Delay10TCYx:
  6564                           	opt stack 0
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           prodh	equ	0xFF4
  6570                           prodl	equ	0xFF3
  6571                           intcon	equ	0xFF2
  6572                           indf0	equ	0xFEF
  6573                           postinc0	equ	0xFEE
  6574                           fsr0h	equ	0xFEA
  6575                           fsr0l	equ	0xFE9
  6576                           wreg	equ	0xFE8
  6577                           indf2	equ	0xFDF
  6578                           postinc2	equ	0xFDE
  6579                           postdec2	equ	0xFDD
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8
  6583                           
  6584 ;; *************** function _ConfigAD *****************
  6585 ;; Defined at:
  6586 ;;		line 64 in file "main.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6603 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6604 ;;Total ram usage:        0 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_main
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text37
  6615  0025D4                     __ptext37:
  6616                           	opt stack 0
  6617  0025D4                     _ConfigAD:
  6618                           	opt stack 29
  6619                           
  6620                           ;main.c: 65: ADCON0 = 0b00000000;
  6621                           
  6622                           ;incstack = 0
  6623  0025D4  0E00               	movlw	0
  6624  0025D6  6EC2               	movwf	4034,c	;volatile
  6625                           
  6626                           ;main.c: 66: ADCON1 = 0b00001110;
  6627  0025D8  0E0E               	movlw	14
  6628  0025DA  6EC1               	movwf	4033,c	;volatile
  6629                           
  6630                           ;main.c: 67: ADCON2 = 0b10011110;
  6631  0025DC  0E9E               	movlw	158
  6632  0025DE  6EC0               	movwf	4032,c	;volatile
  6633                           
  6634                           ;main.c: 69: ADCON0bits.ADON = 1;
  6635  0025E0  80C2               	bsf	4034,0,c	;volatile
  6636                           
  6637                           ;main.c: 71: _delay((unsigned long)((5)*(2000000/4000000.0)));
  6638  0025E2  D000               	nop2		;2 cycle nop
  6639                           
  6640                           ;main.c: 73: ADCON0bits.GODONE = 1;
  6641  0025E4  82C2               	bsf	4034,1,c	;volatile
  6642  0025E6  0012               	return		;funcret
  6643  0025E8                     __end_of_ConfigAD:
  6644                           	opt stack 0
  6645                           tblptru	equ	0xFF8
  6646                           tblptrh	equ	0xFF7
  6647                           tblptrl	equ	0xFF6
  6648                           tablat	equ	0xFF5
  6649                           prodh	equ	0xFF4
  6650                           prodl	equ	0xFF3
  6651                           intcon	equ	0xFF2
  6652                           indf0	equ	0xFEF
  6653                           postinc0	equ	0xFEE
  6654                           fsr0h	equ	0xFEA
  6655                           fsr0l	equ	0xFE9
  6656                           wreg	equ	0xFE8
  6657                           indf2	equ	0xFDF
  6658                           postinc2	equ	0xFDE
  6659                           postdec2	equ	0xFDD
  6660                           fsr2h	equ	0xFDA
  6661                           fsr2l	equ	0xFD9
  6662                           status	equ	0xFD8
  6663                           
  6664 ;; *************** function _Interrupcao *****************
  6665 ;; Defined at:
  6666 ;;		line 44 in file "main.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6680 ;;      Params:         0       0       0       0       0       0       0       0       0
  6681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6682 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6683 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6684 ;;Total ram usage:       14 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		Interrupt level 2
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	intcode
  6694  000008                     __pintcode:
  6695                           	opt stack 0
  6696  000008                     _Interrupcao:
  6697                           	opt stack 25
  6698                           
  6699                           ;incstack = 0
  6700  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6701  00000A  ED87  F010         	call	int_func,f	;refresh shadow registers
  6702                           tblptru	equ	0xFF8
  6703                           tblptrh	equ	0xFF7
  6704                           tblptrl	equ	0xFF6
  6705                           tablat	equ	0xFF5
  6706                           prodh	equ	0xFF4
  6707                           prodl	equ	0xFF3
  6708                           intcon	equ	0xFF2
  6709                           indf0	equ	0xFEF
  6710                           postinc0	equ	0xFEE
  6711                           fsr0h	equ	0xFEA
  6712                           fsr0l	equ	0xFE9
  6713                           wreg	equ	0xFE8
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           fsr2h	equ	0xFDA
  6718                           fsr2l	equ	0xFD9
  6719                           status	equ	0xFD8
  6720                           
  6721                           	psect	intcode_body
  6722  00210E                     __pintcode_body:
  6723                           	opt stack 25
  6724  00210E                     int_func:
  6725                           	opt stack 25
  6726  00210E  0006               	pop		; remove dummy address from shadow register refresh
  6727  002110  CFFA F001          	movff	pclath,??_Interrupcao
  6728  002114  CFFB F002          	movff	pclatu,??_Interrupcao+1
  6729  002118  CFE9 F003          	movff	fsr0l,??_Interrupcao+2
  6730  00211C  CFEA F004          	movff	fsr0h,??_Interrupcao+3
  6731  002120  CFE1 F005          	movff	fsr1l,??_Interrupcao+4
  6732  002124  CFE2 F006          	movff	fsr1h,??_Interrupcao+5
  6733  002128  CFD9 F007          	movff	fsr2l,??_Interrupcao+6
  6734  00212C  CFDA F008          	movff	fsr2h,??_Interrupcao+7
  6735  002130  CFF3 F009          	movff	prodl,??_Interrupcao+8
  6736  002134  CFF4 F00A          	movff	prodh,??_Interrupcao+9
  6737  002138  CFF6 F00B          	movff	tblptrl,??_Interrupcao+10
  6738  00213C  CFF7 F00C          	movff	tblptrh,??_Interrupcao+11
  6739  002140  CFF8 F00D          	movff	tblptru,??_Interrupcao+12
  6740  002144  CFF5 F00E          	movff	tablat,??_Interrupcao+13
  6741                           
  6742                           ;main.c: 45: if(PIR1bits.ADIF){
  6743  002148  AC9E               	btfss	3998,6,c	;volatile
  6744  00214A  D004               	goto	i2l63
  6745                           
  6746                           ;main.c: 46: teste = 1;
  6747  00214C  0E01               	movlw	1
  6748  00214E  0100               	movlb	0	; () banked
  6749  002150  6F87               	movwf	_teste& (0+255),b
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;main.c: 47: PIR1bits.ADIF = 0;
  6753  002152  9C9E               	bcf	3998,6,c	;volatile
  6754  002154                     i2l63:
  6755  002154  C00E  FFF5         	movff	??_Interrupcao+13,tablat
  6756  002158  C00D  FFF8         	movff	??_Interrupcao+12,tblptru
  6757  00215C  C00C  FFF7         	movff	??_Interrupcao+11,tblptrh
  6758  002160  C00B  FFF6         	movff	??_Interrupcao+10,tblptrl
  6759  002164  C00A  FFF4         	movff	??_Interrupcao+9,prodh
  6760  002168  C009  FFF3         	movff	??_Interrupcao+8,prodl
  6761  00216C  C008  FFDA         	movff	??_Interrupcao+7,fsr2h
  6762  002170  C007  FFD9         	movff	??_Interrupcao+6,fsr2l
  6763  002174  C006  FFE2         	movff	??_Interrupcao+5,fsr1h
  6764  002178  C005  FFE1         	movff	??_Interrupcao+4,fsr1l
  6765  00217C  C004  FFEA         	movff	??_Interrupcao+3,fsr0h
  6766  002180  C003  FFE9         	movff	??_Interrupcao+2,fsr0l
  6767  002184  C002  FFFB         	movff	??_Interrupcao+1,pclatu
  6768  002188  C001  FFFA         	movff	??_Interrupcao,pclath
  6769  00218C  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6770  00218E  0011               	retfie		f
  6771  002190                     __end_of_Interrupcao:
  6772                           	opt stack 0
  6773                           pclatu	equ	0xFFB
  6774                           pclath	equ	0xFFA
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           indf0	equ	0xFEF
  6783                           postinc0	equ	0xFEE
  6784                           fsr0h	equ	0xFEA
  6785                           fsr0l	equ	0xFE9
  6786                           wreg	equ	0xFE8
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           indf2	equ	0xFDF
  6790                           postinc2	equ	0xFDE
  6791                           postdec2	equ	0xFDD
  6792                           fsr2h	equ	0xFDA
  6793                           fsr2l	equ	0xFD9
  6794                           status	equ	0xFD8
  6795                           pclatu	equ	0xFFB
  6796                           pclath	equ	0xFFA
  6797                           tblptru	equ	0xFF8
  6798                           tblptrh	equ	0xFF7
  6799                           tblptrl	equ	0xFF6
  6800                           tablat	equ	0xFF5
  6801                           prodh	equ	0xFF4
  6802                           prodl	equ	0xFF3
  6803                           intcon	equ	0xFF2
  6804                           indf0	equ	0xFEF
  6805                           postinc0	equ	0xFEE
  6806                           fsr0h	equ	0xFEA
  6807                           fsr0l	equ	0xFE9
  6808                           wreg	equ	0xFE8
  6809                           fsr1h	equ	0xFE2
  6810                           fsr1l	equ	0xFE1
  6811                           indf2	equ	0xFDF
  6812                           postinc2	equ	0xFDE
  6813                           postdec2	equ	0xFDD
  6814                           fsr2h	equ	0xFDA
  6815                           fsr2l	equ	0xFD9
  6816                           status	equ	0xFD8
  6817                           
  6818                           	psect	rparam
  6819  0000                     pclatu	equ	0xFFB
  6820                           pclath	equ	0xFFA
  6821                           tblptru	equ	0xFF8
  6822                           tblptrh	equ	0xFF7
  6823                           tblptrl	equ	0xFF6
  6824                           tablat	equ	0xFF5
  6825                           prodh	equ	0xFF4
  6826                           prodl	equ	0xFF3
  6827                           intcon	equ	0xFF2
  6828                           indf0	equ	0xFEF
  6829                           postinc0	equ	0xFEE
  6830                           fsr0h	equ	0xFEA
  6831                           fsr0l	equ	0xFE9
  6832                           wreg	equ	0xFE8
  6833                           fsr1h	equ	0xFE2
  6834                           fsr1l	equ	0xFE1
  6835                           indf2	equ	0xFDF
  6836                           postinc2	equ	0xFDE
  6837                           postdec2	equ	0xFDD
  6838                           fsr2h	equ	0xFDA
  6839                           fsr2l	equ	0xFD9
  6840                           status	equ	0xFD8
  6841                           
  6842                           	psect	temp
  6843  00004E                     btemp:
  6844                           	opt stack 0
  6845  00004E                     	ds	1
  6846  0000                     int$flags	set	btemp
  6847                           pclatu	equ	0xFFB
  6848                           pclath	equ	0xFFA
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           indf0	equ	0xFEF
  6857                           postinc0	equ	0xFEE
  6858                           fsr0h	equ	0xFEA
  6859                           fsr0l	equ	0xFE9
  6860                           wreg	equ	0xFE8
  6861                           fsr1h	equ	0xFE2
  6862                           fsr1l	equ	0xFE1
  6863                           indf2	equ	0xFDF
  6864                           postinc2	equ	0xFDE
  6865                           postdec2	equ	0xFDD
  6866                           fsr2h	equ	0xFDA
  6867                           fsr2l	equ	0xFD9
  6868                           status	equ	0xFD8


Data Sizes:
    Strings     35
    Constant    118
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      77
    BANK0           160     36      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_3(CODE[23]), valor(BANK0[16]), STR_1(CODE[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> valor(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    _WriteLCD->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _Interrupcao in COMRAM

    None.

Critical Paths under _main in BANK0

    _WriteTemp->_sprintf

Critical Paths under _Interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53821
                           _ConfigAD
                       _SetDDRamAddr
                           _WriteLCD
                          _WriteTemp
                     _config_inicial
                          _init_XLCD
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     308
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     220
                                             19 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_inicial                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTemp                                            0     0      0   52731
                       _SetDDRamAddr
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             44    37      7   43069
                                              0 BANK0     36    29      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   10309
                                             49 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   10111
                                             49 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2335
                                             28 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4457
                                             34 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             14 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     574
                                             14 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2242
                                             22 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     444
                                             56 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3604
                                             71 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3307
                                             59 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     520
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2195
                                             22 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2619
                                             49 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2109
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WriteLCD                                            16    16      0     391
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2     325
                                             16 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      66
                                             15 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      66
                                             15 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigAD                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Interrupcao                                         14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigAD
   _SetDDRamAddr
     _DelayFor18TCY
       _Delay10TCYx
   _WriteLCD
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
   _WriteTemp
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _config_inicial
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _WriteDataXLCD
       _DelayFor18TCY
         _Delay10TCYx

 _Interrupcao (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      38       5       35.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      4D       1       81.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      20        0.0%
DATA                 0      0      85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 12 23:51:09 2018

           ___awdiv@sign 001A      ___wmul@multiplicand 001F             ___ftadd@exp1 0047  
           ___ftadd@exp2 0046             ___ftadd@sign 0045                      l181 24B0  
                    l157 0E14                      l502 1ABA                      l600 192C  
                    l534 1E28                      l606 1992                      l631 2500  
                    l561 1734                      l572 17E4                      l581 1800  
                    l557 170A                      l592 1D68                      l681 20FC  
                    l691 2254                      l599 1904    __size_of_WriteCmdXLCD 003E  
           ___awmod@sign 0014                      wreg 000FE8             ___ftdiv@cntr 003B  
           ___ftdiv@sign 0040             __CFG_WDT$OFF 000000                     l2111 1718  
                   l2051 25FA                     l3003 1CDC                     l2203 1B5E  
                   l2141 179E                     l2133 1772                     l2117 1742  
                   l2213 1B86                     l2071 1DF6                     l2063 1DB8  
                   l2151 17D2                     l2143 17A8                     l2073 1E14  
                   l2065 1DC2                     l3009 1D04                     l2153 17DC  
                   l2145 17B0                     l2241 2042                     l2209 1B76  
                   l2075 1E1E                     l2067 1DE0                     l2059 1DAA  
                   l2139 1794                     l2243 204A                     l2235 202C  
                   l3029 1D42                     l2501 1958                     l2261 2082  
                   l2253 206A                     l2245 204E                     l2229 201C  
                   l2405 1686                     l2093 25EA                     l3125 229A  
                   l2159 181C                     l2511 1980                     l2169 184C  
                   l2521 19C2                     l2513 198C                     l2505 1968  
                   l2257 2074                     l2281 21BE                     l2273 21A4  
                   l2185 1B1C                     l2425 1268                     l3049 255A  
                   l2283 21C6                     l2179 1AF4                     l2443 145C  
                   l2419 11C4                     l2541 1A22                     l2285 21CA  
                   l2293 21E8                     l2277 21B0                     l2437 13B8  
                   l2429 128C                     l2615 1F1C                     l2607 23E4  
                   l2527 19E0                     l2471 18CA                     l2199 1B4E  
                   l2455 2588                     l2625 1F78                     l2713 2246  
                   l2705 2212                     l2721 22D6                     l2561 1A80  
                   l2465 189E                     l2297 21F6                     l2289 21DE  
                   l2619 1F4C                     l2707 221E                     l2571 1AA8  
                   l2811 0930                     l2661 1C62                     l2709 2222  
                   l2573 1AB4                     l2565 1A90                     l2549 1A52  
                   l2397 15C6                     l2821 095C                     l2813 0946  
                   l2671 1C8C                     l2639 1BEC                     l2719 22CA  
                   l2911 0CF2                     l2823 0982                     l2807 08F4  
                   l2575 25AC                     l2657 1C52                     l2817 0956  
                   l2753 1E80                     l2675 1CA2                     l2667 1C7A  
                   l2915 0D1E                     l2771 1ECA                     l2763 1EAA  
                   l2755 1E8A                     l2669 1C86                     l2685 20AE  
                   l2933 0DE2                     l2917 0D26                     l2925 0DBA  
                   l2829 099C                     l2783 2322                     l2687 20BA  
                   l2951 0E9A                     l2935 0DF6                     l2927 0DC8  
                   l2871 0B64                     l2863 0AF8                     l2855 0A90  
                   l2839 09E2                     l2775 1EDA                     l2767 1EBA  
                   l2759 1E9A                     l2697 20EE                     l2689 20BE  
                   l2961 0F80                     l2873 0B7A                     l2793 08AA  
                   l2963 0F8E                     l2947 0E48                     l2939 0E18  
                   l2883 0BE2                     l2867 0B1E                     l2971 0FB6  
                   l2789 2354                     l2981 1004                     l2893 0C40  
                   l2869 0B34                     l2879 0BBC                     l2799 08C2  
                   l2991 1066                     l2985 1034                     l2977 0FDC  
                   l2969 0FA8                     l2897 0CA6                     l2993 1082  
                   l2899 0CAC                     l2989 1060                     STR_1 088E  
                   STR_2 0894                     STR_3 0877                     u2051 1882  
                   u2071 18AE                     u2500 2374                     u2261 1BD0  
                   u1551 16D6                     u2280 1C0A                     u1561 16EA  
                   u2507 236A                     u2285 1C02                     u1761 1ADC  
                   u2490 234C                     u1781 1B04                     u2750 0E0C  
                   u2590 0A28                     u2497 2342                     u1955 2392  
                   u2851 1CC4                     u2595 0A1C                     u2871 1CEC  
                   u2937 25EC                     u2947 25B2                     u2957 25FC  
                   i2l63 2154                     _TMR0 000FD6                     _main 2266  
           ___ftpack@arg 000F             ___ftpack@exp 0012                     _temp 0084  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 004E  
 __size_of_WriteDataXLCD 003E                     prodh 000FF4                     prodl 000FF3  
                   start 000E             _sprintf$1319 006D             ___ftmul@cntr 0030  
           ___param_bank 000000             ___ftmul@sign 0031              _Delay10TCYx 25F8  
           ___fttol@exp1 0047             ___fttol@lval 0043             _WriteCmdXLCD 240E  
            _Delay1KTCYx 25E8            ?_SetDDRamAddr 0001                    ?_main 0001  
        __end_of___awdiv 208C                    _ADRES 000FC3          __end_of___ftadd 1872  
        __end_of___awmod 2200          __end_of___ftdiv 1D9A          __end_of___ftneg 250E  
        __end_of___lldiv 210E          __end_of___ftmul 1BC0          ___awdiv@divisor 0017  
        __end_of___llmod 2266          __end_of___ftsub 240E          __end_of___fttol 1CB4  
        ___awdiv@counter 0019                    _PORTB 000F81                    _TRISB 000F93  
  __size_of_Delay10KTCYx 0016             ___lltoft@exp 001F          __end_of_dpowers 0829  
                  _scale 1090          __end_of_isdigit 2590            ___ftpack@sign 0013  
                  _valor 0088                    _teste 0087                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 1090  
          ??_Interrupcao 0001         __end_of_ConfigAD 25E8          __initialization 2590  
           __end_of_main 22C4         __end_of_BusyXLCD 24C4             _Delay10KTCYx 25AA  
  __size_of_DelayPORXLCD 0008           ??_SetDDRamAddr 0010         __end_of_OpenXLCD 1EEC  
                 ??_main 004E            ___fttol@sign1 0042            __activetblptr 000002  
          _WriteDataXLCD 244C     __size_of__tdiv_to_l_ 0132                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 000F  
                 ?_scale 0032         ___awdiv@dividend 0015         __end_of___ftpack 1E48  
       __end_of_WriteLCD 25D4         __end_of___lltoft 2320         __end_of___lwtoft 2532  
           _DelayPORXLCD 2608         __end_of__powers_ 0850                   ___ftge 1EEC  
                 ___wmul 24C4                ??___awdiv 0019                ??___ftadd 0042  
              ??___awmod 0013                ??___ftdiv 0038                ??___ftneg 0012  
              ??___lldiv 0017                ??___ftmul 0029                ??___llmod 0017  
              ??___ftsub 004E                ??___fttol 003D      __end_of_Interrupcao 2190  
                 _fround 1480                   clear_0 2596         ___awdiv@quotient 001B  
        ___awmod@divisor 0011          ___awmod@counter 0013           ?_WriteDataXLCD 0001  
  ___ftmul@f3_as_product 002D                ??_isdigit 000F         ??_config_inicial 000F  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 0067               __accesstop 0060  
__end_of__initialization 259C          __CFG_PBADEN$OFF 000000               ___ftadd@f1 003C  
             ___ftadd@f2 003F               ___ftge@ff1 000F               ___ftge@ff2 0012  
     __size_of_WriteTemp 008C            ___rparam_used 000001               ___ftdiv@f1 0032  
             ___ftdiv@f2 0035               ___ftdiv@f3 003C               ___ftneg@f1 000F  
             ___ftmul@f1 0023               ___ftmul@f2 0026               ___ftsub@f1 0048  
             ___ftsub@f2 004B               ___fttol@f1 0039           __pcstackCOMRAM 0001  
             ___lltoft@c 0017            __end_of_scale 1480               ___lwtoft@c 0017  
             __div_to_l_ 19A4                ?_ConfigAD 0001          __div_to_l_@exp1 001A  
        __div_to_l_@cntr 0019                  ??_scale 0035   __size_of_DelayFor18TCY 0008  
        __div_to_l_@quot 0015               __pbssBANK0 0084                ?_BusyXLCD 0001  
        WriteCmdXLCD@cmd 0010     __end_of_SetDDRamAddr 23CE       __size_of_init_XLCD 001E  
              ?_OpenXLCD 0001            __div_to_l_@f1 000F            __div_to_l_@f2 0012  
            _Interrupcao 0008                  ?___ftge 000F        WriteDataXLCD@data 0010  
           ?_Delay10TCYx 0001                  ?___wmul 001D          ??_WriteDataXLCD 0010  
           ?_Delay1KTCYx 0001                  ?_fround 0032                ?___ftpack 000F  
              ?_WriteLCD 0001                ?___lltoft 0017                ?___lwtoft 0017  
      __end_of_WriteTemp 2008               ??_ConfigAD 000F       __size_of_putrsXLCD 005C  
             ??_BusyXLCD 0010               ??_OpenXLCD 0014        __end_of__npowers_ 0877  
                __Hparam 0000               _scale$1318 0035                  __Lparam 0000  
        __size_of___ftge 0090                  ___awdiv 2008            _DelayFor18TCY 2610  
                ___ftadd 16C6                  ___awmod 2190                  ___ftdiv 1CB4  
                ___ftneg 24EA                  ___lldiv 208C          __size_of___wmul 0026  
                ___ftmul 1ACC                  ___llmod 2200                  ___ftsub 23CE  
                ___fttol 1BC0             __psmallconst 0800                  __pcinit 2590  
             ??___ftpack 0014          putrsXLCD@buffer 0011               ??_WriteLCD 0014  
        __size_of_fround 0246          Delay10TCYx@unit 000F                  __ramtop 0800  
             ??___lltoft 001B                  __ptext0 2266                  __ptext1 2554  
                __ptext2 1E48                  __ptext3 240E                  __ptext4 2608  
                __ptext5 25E8                  __ptext6 25AA                  __ptext7 2532  
                __ptext8 1F7C                  __ptext9 089C        __end_of_init_XLCD 2572  
             ??___lwtoft 001A                _T0CONbits 000FD5              ?__div_to_l_ 000F  
                _dpowers 0801                  _isdigit 2572         ___awmod@dividend 000F  
                _sprintf 089C           __pintcode_body 210E     end_of_initialization 259C  
          __Lmediumconst 0000                  int_func 210E          ___lldiv@divisor 0013  
        ___lldiv@counter 001B           ?_DelayFor18TCY 0001                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE           __tdiv_to_l_@f1 000F  
         __tdiv_to_l_@f2 0012        __end_of_putrsXLCD 237C            ??__tdiv_to_l_ 0015  
              _TRISBbits 000F93    __size_of_SetDDRamAddr 0052              ___ftdiv@exp 003F  
    __size_of__div_to_l_ 0128              ___ftmul@exp 002C           __end_of___ftge 1F7C  
         __end_of___wmul 24EA     __size_of_Delay10TCYx 0010           __end_of_fround 16C6  
           _SetDDRamAddr 237C     __size_of_Delay1KTCYx 0010       SetDDRamAddr@DDaddr 0013  
    start_initialization 2590      __end_of__tdiv_to_l_ 19A4        __size_of_ConfigAD 0014  
        ___llmod@divisor 0013        __size_of_BusyXLCD 003A          ___llmod@counter 0017  
           ?_Interrupcao 0001          ??_DelayFor18TCY 0010        __size_of_OpenXLCD 00A4  
               ??___ftge 0015                 ??___wmul 0021            ?_WriteCmdXLCD 0001  
               ??_fround 0035            sprintf@tmpval 007A               fround@prec 003B  
      __size_of___ftpack 00AE        __size_of_WriteLCD 0014        __size_of___lltoft 005C  
      __size_of___lwtoft 0024            __pcstackBANK0 0060                _WriteTemp 1F7C  
        Delay1KTCYx@unit 000F              sprintf@flag 0072              sprintf@fval 0080  
            sprintf@prec 007E  __size_of_config_inicial 0022                __pintcode 0008  
         ??_WriteCmdXLCD 0010                 ?___awdiv 0015                 ?___ftadd 003C  
               ?___awmod 000F                 ?___ftdiv 0032                 ?___ftneg 000F  
               ?___lldiv 000F                 ?___ftmul 0023                 ?___llmod 000F  
               ?___ftsub 0048                __npowers_ 0850                 ?___fttol 0039  
          ?_Delay10KTCYx 0001              __tdiv_to_l_ 1872    __end_of_WriteDataXLCD 248A  
           ??__div_to_l_ 0015              __smallconst 0800                 ?_isdigit 0001  
              _init_XLCD 2554               ?_WriteTemp 0001                 ?_sprintf 0060  
         __size_of_scale 03F0           ___wmul@product 0021                 _LATBbits 000F8A  
               _PIE1bits 000F9D            ?_DelayPORXLCD 0001                 _PIR1bits 000F9E  
        OpenXLCD@lcdtype 0014       __end_of__div_to_l_ 1ACC           ??_Delay10KTCYx 000F  
             _ADCON0bits 000FC2        ___wmul@multiplier 001D                _putrsXLCD 2320  
       Delay10KTCYx@unit 0010               ?_init_XLCD 0001                 _ConfigAD 25D4  
               _BusyXLCD 248A           ??_DelayPORXLCD 0010                 _OpenXLCD 1E48  
               __Hrparam 0000                 __Lrparam 0000     __size_of_Interrupcao 2188  
       __size_of___awdiv 0084         __size_of___ftadd 01AC         __size_of___awmod 0070  
       __size_of___ftdiv 00E6         __size_of___ftneg 0024         __size_of___lldiv 0082  
       __size_of___ftmul 00F4         __size_of___llmod 0066         __size_of___ftsub 0040  
       __size_of___fttol 00F4                 ___ftpack 1D9A                 _WriteLCD 25C0  
            _fround$1316 0038              _fround$1317 0035                 ___lltoft 22C4  
            _isdigit$982 0010                 ___lwtoft 250E               sprintf@exp 0078  
             sprintf@val 0074               ?_putrsXLCD 0011         __size_of_isdigit 001E  
            ??_WriteTemp 004E                 __ptext10 1090                 __ptext11 2572  
               __ptext20 2200                 __ptext12 1480                 __ptext21 208C  
               __ptext13 24C4                 __ptext30 25C0                 __ptext22 1BC0  
               __ptext14 1ACC                 __ptext31 2320                 __ptext23 23CE  
               __ptext15 2190                 __ptext32 244C                 __ptext24 16C6  
               __ptext16 2008                 __ptext33 248A                 __ptext25 24EA  
               __ptext17 1872                 __ptext34 237C                 __ptext26 1EEC  
               __ptext18 19A4                 __ptext35 2610                 __ptext27 250E  
               __ptext19 22C4                 __ptext36 25F8                 __ptext28 1CB4  
               __ptext37 25D4                 __ptext29 1D9A                 __powers_ 0829  
   __end_of_WriteCmdXLCD 244C         __size_of_sprintf 07F4           _config_inicial 2532  
          __size_of_main 005E            ??_Delay10TCYx 000F                 int$flags 004E  
          ??_Delay1KTCYx 000F               _INTCONbits 000FF2              ??_init_XLCD 0015  
               isdigit@c 0011                 scale@scl 0038     __end_of_Delay10KTCYx 25C0  
 __end_of_config_inicial 2554                 intlevel2 0000                sprintf@ap 0070  
       __tdiv_to_l_@exp1 001D         __tdiv_to_l_@cntr 001C                sprintf@sp 0060  
       __tdiv_to_l_@quot 0018         ___lldiv@dividend 000F    __end_of_DelayFor18TCY 2618  
           ?__tdiv_to_l_ 000F      __end_of_Delay10TCYx 2608                 sprintf@c 0083  
               sprintf@f 0062     __end_of_DelayPORXLCD 2610              ??_putrsXLCD 0013  
       ___lldiv@quotient 0017      __end_of_Delay1KTCYx 25F8          ?_config_inicial 0001  
